{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../Services/main.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../login/login.component\";\nimport * as i4 from \"../logout/logout.component\";\nimport * as i5 from \"../search/search.component\";\nimport * as i6 from \"../tags/tags.component\";\nimport * as i7 from \"../notes/notes.component\";\n\nfunction MainComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h1\");\n    i0.ɵɵtext(2, \"Welcome to MyNotebook - Please login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"app-login\", 3);\n    i0.ɵɵlistener(\"onLogin\", function MainComponent_div_0_Template_app_login_onLogin_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.doLogin($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction MainComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2, \"MyNotebook\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"app-logout\", 5);\n    i0.ɵɵlistener(\"onLogout\", function MainComponent_div_1_Template_app_logout_onLogout_4_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.doLogout();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"app-search\");\n    i0.ɵɵelementStart(6, \"app-tags\", 6);\n    i0.ɵɵlistener(\"tagsChanged\", function MainComponent_div_1_Template_app_tags_tagsChanged_6_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.tagsChanged($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"app-notes\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"selectedTags\", ctx_r1.selectedTags)(\"allTags\", ctx_r1.allTags);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"selectedNotes\", ctx_r1.selectedNotes);\n  }\n}\n\nexport let MainComponent = /*#__PURE__*/(() => {\n  class MainComponent {\n    constructor(mainService) {\n      this.mainService = mainService; // Note data\n\n      this.allNotes = [];\n      this.allTags = []; // States\n\n      this.selectedTags = [];\n      this.isLoggedIn = false;\n      this.selectedNotes = [];\n    }\n\n    ngOnInit() {}\n\n    tagsChanged(change) {\n      if (change.isChecked) {\n        this.selectedTags.push(change.tagName);\n      } else {\n        // TODO: Make this an Array extension method or a helper method\n        const index = this.selectedTags.indexOf(change.tagName, 0);\n\n        if (index > -1) {\n          this.selectedTags.splice(index, 1);\n        }\n      }\n\n      this.updateSelectedNotes();\n    }\n\n    updateSelectedNotes() {\n      var _a; // If allnotes tag is selected, show all notes\n\n\n      const allNotesTag = (_a = this.allSettings) === null || _a === void 0 ? void 0 : _a.allNotesTagName.value;\n\n      if (this.selectedTags.includes(allNotesTag)) {\n        this.selectedNotes = Object.assign([], this.allNotes);\n        return;\n      } // Show all notes which contain one of the selected tags\n      // There should be a more modern way to do this\n\n\n      this.selectedNotes.splice(0, this.selectedNotes.length);\n\n      for (var i = 0; i < this.allNotes.length; i++) {\n        for (var j = 0; j < this.allNotes[i].tags.length; j++) {\n          if (this.selectedTags.includes(this.allNotes[i].tags[j].name)) {\n            this.selectedNotes.push(this.allNotes[i]);\n            break;\n          }\n        }\n      } // TODO, search selectedNotes for searchText? could also be done in the loop above\n      // Figure out what's faster\n\n    }\n\n    doLogin(event) {\n      this.mainService.doLogin(event).subscribe(response => this.onLogin(response));\n    }\n\n    doLogout() {\n      this.mainService.doLogout().subscribe(response => this.onLogout(response));\n    }\n\n    doQueryAll() {\n      this.mainService.doQueryAll().subscribe(response => this.onQueryAll(response));\n    } // Response methods\n\n\n    onQueryAll(response) {\n      this.isLoggedIn = response.isLoggedIn;\n\n      if (!this.isLoggedIn) {\n        return;\n      }\n\n      this.allNotes = response.notes;\n      this.allTags = response.tags;\n      this.allSettings = response.settings; // value in Settings is defined as string, however for defaultTags it's an array\n      // Casting the string directly to an array would result in an error, therefore we cast to unknown first\n\n      this.selectedTags = this.allSettings.defaultTags.value;\n      this.updateSelectedNotes();\n    }\n\n    onLogin(response) {\n      this.isLoggedIn = response.isLoggedIn;\n\n      if (this.isLoggedIn) {\n        this.doQueryAll();\n      }\n    }\n\n    onLogout(response) {\n      this.isLoggedIn = response.isLoggedIn;\n    }\n\n  }\n\n  MainComponent.ɵfac = function MainComponent_Factory(t) {\n    return new (t || MainComponent)(i0.ɵɵdirectiveInject(i1.MainService));\n  };\n\n  MainComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainComponent,\n    selectors: [[\"app-main\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"login-container\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"login-container\"], [3, \"onLogin\"], [1, \"main-container\"], [3, \"onLogout\"], [3, \"selectedTags\", \"allTags\", \"tagsChanged\"], [3, \"selectedNotes\"]],\n    template: function MainComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MainComponent_div_0_Template, 4, 0, \"div\", 0);\n        i0.ɵɵtemplate(1, MainComponent_div_1_Template, 8, 3, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n      }\n    },\n    directives: [i2.NgIf, i3.LoginComponent, i4.LogoutComponent, i5.SearchComponent, i6.TagsComponent, i7.NotesComponent],\n    styles: [\"\"]\n  });\n  return MainComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}