{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { TagChange } from '../../Events/TagChangeEvent';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/button-toggle\";\nimport * as i2 from \"@angular/common\";\n\nfunction TagsComponent_mat_button_toggle_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-button-toggle\", 3);\n    i0.ɵɵlistener(\"change\", function TagsComponent_mat_button_toggle_2_Template_mat_button_toggle_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.tagChange($event);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tag_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", tag_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tag_r1.name);\n  }\n}\n\nexport let TagsComponent = /*#__PURE__*/(() => {\n  class TagsComponent {\n    constructor() {\n      this.tagsChanged = new EventEmitter();\n      this.selectedTags = [];\n      this.allTags = [];\n    }\n\n    ngOnInit() {}\n\n    tagChange(change) {\n      const event = new TagChange(change.source.checked, change.value);\n      this.tagsChanged.emit(event);\n    }\n\n  }\n\n  TagsComponent.ɵfac = function TagsComponent_Factory(t) {\n    return new (t || TagsComponent)();\n  };\n\n  TagsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TagsComponent,\n    selectors: [[\"app-tags\"]],\n    inputs: {\n      selectedTags: \"selectedTags\",\n      allTags: \"allTags\"\n    },\n    outputs: {\n      tagsChanged: \"tagsChanged\"\n    },\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"tag-container\"], [\"name\", \"Tags\", \"aria-label\", \"Tags\", \"multiple\", \"\", \"vertical\", \"true\", 3, \"value\"], [3, \"value\", \"change\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"change\"]],\n    template: function TagsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-button-toggle-group\", 1);\n        i0.ɵɵtemplate(2, TagsComponent_mat_button_toggle_2_Template, 2, 2, \"mat-button-toggle\", 2);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.selectedTags);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allTags);\n      }\n    },\n    directives: [i1.MatButtonToggleGroup, i2.NgForOf, i1.MatButtonToggle],\n    styles: [\".mat-button-toggle-checked[_ngcontent-%COMP%]{background-color:#000!important;color:red!important}.mat-button-toggle[_ngcontent-%COMP%]{background-color:#bababa;color:#fff}.tag-container[_ngcontent-%COMP%]{display:inline-block;background-color:#eaeaea;border-width:1px;border-color:#000;border-style:solid;border-radius:4px;float:right;position:sticky;top:8em;padding:1em}\"]\n  });\n  return TagsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}