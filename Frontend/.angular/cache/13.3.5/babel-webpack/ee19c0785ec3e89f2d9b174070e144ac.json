{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewChild, ComponentFactoryResolver, ApplicationRef, forwardRef, ViewEncapsulation, Injectable, Optional, Pipe, HostBinding, HostListener, NgModule, InjectionToken } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormGroup, FormControl, Validators as Validators$1, ReactiveFormsModule } from '@angular/forms';\nimport { Plugin, PluginKey, NodeSelection, EditorState } from 'prosemirror-state';\nimport { DecorationSet, Decoration, EditorView } from 'prosemirror-view';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Fragment, Slice, DOMSerializer, DOMParser } from 'prosemirror-model';\nimport { schema } from 'ngx-editor/schema';\nexport { marks, nodes, schema } from 'ngx-editor/schema';\nimport { Subject, fromEvent, asyncScheduler } from 'rxjs';\nimport { toggleMark, lift, wrapIn, setBlockType, newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock, chainCommands, exitCode, baseKeymap } from 'prosemirror-commands';\nimport { applyMark, removeLink, removeMark } from 'ngx-editor/commands';\nimport { isMarkActive, isNodeActive, canInsert, getSelectionNodes, getSelectionMarks, markInputRule } from 'ngx-editor/helpers';\nimport { liftListItem, wrapInList, splitListItem, sinkListItem } from 'prosemirror-schema-list';\nimport * as i1 from '@angular/platform-browser';\nimport { __awaiter } from 'tslib';\nimport { throttleTime } from 'rxjs/operators';\nimport { computePosition, offset, autoPlacement, detectOverflow } from '@floating-ui/dom';\nimport { isNil } from 'ngx-editor/utils';\nimport { keymap } from 'prosemirror-keymap';\nimport { undo, redo, history } from 'prosemirror-history';\nimport { wrappingInputRule, textblockTypeInputRule, smartQuotes, ellipsis, emDash, inputRules } from 'prosemirror-inputrules';\nconst _c0 = [\"imgEl\"];\n\nfunction ImageViewComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 4)(1, \"span\", 5);\n    i0.ɵɵlistener(\"mousedown\", function ImageViewComponent_span_1_Template_span_mousedown_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.startResizing($event, \"left\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 6);\n    i0.ɵɵlistener(\"mousedown\", function ImageViewComponent_span_1_Template_span_mousedown_2_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.startResizing($event, \"right\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 7);\n    i0.ɵɵlistener(\"mousedown\", function ImageViewComponent_span_1_Template_span_mousedown_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.startResizing($event, \"left\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 8);\n    i0.ɵɵlistener(\"mousedown\", function ImageViewComponent_span_1_Template_span_mousedown_4_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.startResizing($event, \"right\");\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"NgxEditor__Resizer--Active\": a0\n  };\n};\n\nconst _c2 = [\"ngxEditor\"];\nconst _c3 = [\"*\"];\n\nfunction LinkComponent_div_2_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (ctx_r1.href.errors == null ? null : ctx_r1.href.errors[\"pattern\"]) && \"Please enter valid url.\", \" \");\n  }\n}\n\nfunction LinkComponent_div_2_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (ctx_r2.text.errors == null ? null : ctx_r2.text.errors[\"required\"]) && \"This is required\", \" \");\n  }\n}\n\nfunction LinkComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function LinkComponent_div_2_Template_form_ngSubmit_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.insertLink($event);\n    });\n    i0.ɵɵelementStart(2, \"div\", 4)(3, \"div\", 5)(4, \"label\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 7);\n    i0.ɵɵtemplate(7, LinkComponent_div_2_div_7_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 5)(10, \"label\", 6);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 9);\n    i0.ɵɵtemplate(13, LinkComponent_div_2_div_13_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 4)(15, \"div\", 5)(16, \"label\");\n    i0.ɵɵelement(17, \"input\", 10);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"button\", 11);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(\"url\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.href.touched && ctx_r0.href.invalid);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(\"text\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.text.touched && ctx_r0.text.invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getLabel(\"openInNewTab\"), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.form.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(\"insert\"));\n  }\n}\n\nfunction ImageComponent_div_2_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (ctx_r1.src.errors == null ? null : ctx_r1.src.errors[\"pattern\"]) && \"Please enter valid url.\", \" \");\n  }\n}\n\nfunction ImageComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function ImageComponent_div_2_Template_form_ngSubmit_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.insertLink($event);\n    });\n    i0.ɵɵelementStart(2, \"div\", 4)(3, \"div\", 5)(4, \"label\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 7);\n    i0.ɵɵtemplate(7, ImageComponent_div_2_div_7_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 5)(10, \"label\", 6);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 4)(14, \"div\", 5)(15, \"label\", 6);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"button\", 11);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(\"url\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.src.touched && ctx_r0.src.invalid);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(\"altText\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(\"title\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.form.valid || !ctx_r0.form.dirty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(\"insert\"));\n  }\n}\n\nconst _c4 = function (a0, a1) {\n  return {\n    \"NgxEditor__Dropdown--Active\": a0,\n    \"NgxEditor--Disabled\": a1\n  };\n};\n\nfunction DropdownComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"mousedown\", function DropdownComponent_div_2_div_1_Template_div_mousedown_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return ctx_r3.onClick($event, item_r2);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c4, item_r2 === ctx_r1.activeItem, ctx_r1.disabledItems.includes(item_r2)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getName(item_r2), \" \");\n  }\n}\n\nfunction DropdownComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, DropdownComponent_div_2_div_1_Template, 2, 5, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.items)(\"ngForTrackBy\", ctx_r0.trackByIndex);\n  }\n}\n\nconst _c5 = function (a0, a1) {\n  return {\n    backgroundColor: a0,\n    color: a1\n  };\n};\n\nconst _c6 = function (a0) {\n  return {\n    \"NgxEditor__Color--Active\": a0\n  };\n};\n\nfunction ColorPickerComponent_div_2_div_1_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"mousedown\", function ColorPickerComponent_div_2_div_1_button_1_Template_button_mousedown_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const color_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(3);\n      return ctx_r5.onColorSelect($event, color_r4);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const color_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(3, _c5, color_r4, ctx_r3.getContrastYIQ(color_r4)))(\"title\", color_r4)(\"ngClass\", i0.ɵɵpureFunction1(6, _c6, ctx_r3.activeColors.includes(color_r4)));\n  }\n}\n\nfunction ColorPickerComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, ColorPickerComponent_div_2_div_1_button_1_Template, 1, 8, \"button\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const colorGroup_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", colorGroup_r2)(\"ngForTrackBy\", ctx_r1.trackByIndex);\n  }\n}\n\nfunction ColorPickerComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, ColorPickerComponent_div_2_div_1_Template, 2, 2, \"div\", 3);\n    i0.ɵɵelementStart(2, \"button\", 4);\n    i0.ɵɵlistener(\"mousedown\", function ColorPickerComponent_div_2_Template_button_mousedown_2_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.remove($event);\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.presets)(\"ngForTrackBy\", ctx_r0.trackByIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.isActive);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getLabel(\"remove\"), \" \");\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_toggle_command_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-toggle-command\", 7);\n  }\n\n  if (rf & 2) {\n    const item_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r7.iconContainerClass);\n    i0.ɵɵproperty(\"toolbarItem\", item_r5);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_insert_command_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-insert-command\", 7);\n  }\n\n  if (rf & 2) {\n    const item_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r8.iconContainerClass);\n    i0.ɵɵproperty(\"toolbarItem\", item_r5);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_link_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-link\");\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r9.iconContainerClass);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_image_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-image\");\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r10.iconContainerClass);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ng_container_5_ngx_dropdown_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-dropdown\", 9);\n  }\n\n  if (rf & 2) {\n    const dropdownItem_r18 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(4);\n    i0.ɵɵclassMap(ctx_r17.dropdownContainerClass);\n    i0.ɵɵproperty(\"group\", dropdownItem_r18.key)(\"items\", dropdownItem_r18.value);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenuComponent_ng_container_1_ng_container_1_ng_container_5_ngx_dropdown_1_Template, 1, 4, \"ngx-dropdown\", 8);\n    i0.ɵɵpipe(2, \"keyvalue\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 2, ctx_r11.getDropdownItems(item_r5)))(\"ngForTrackBy\", ctx_r11.trackByIndex);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_color_picker_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-color-picker\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r12.iconContainerClass);\n    i0.ɵɵproperty(\"presets\", ctx_r12.presets);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_color_picker_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-color-picker\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r13.iconContainerClass);\n    i0.ɵɵproperty(\"presets\", ctx_r13.presets);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r14.seperatorClass);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenuComponent_ng_container_1_ng_container_1_ngx_toggle_command_1_Template, 1, 3, \"ngx-toggle-command\", 3);\n    i0.ɵɵtemplate(2, MenuComponent_ng_container_1_ng_container_1_ngx_insert_command_2_Template, 1, 3, \"ngx-insert-command\", 3);\n    i0.ɵɵtemplate(3, MenuComponent_ng_container_1_ng_container_1_ngx_link_3_Template, 1, 2, \"ngx-link\", 4);\n    i0.ɵɵtemplate(4, MenuComponent_ng_container_1_ng_container_1_ngx_image_4_Template, 1, 2, \"ngx-image\", 4);\n    i0.ɵɵtemplate(5, MenuComponent_ng_container_1_ng_container_1_ng_container_5_Template, 3, 4, \"ng-container\", 2);\n    i0.ɵɵtemplate(6, MenuComponent_ng_container_1_ng_container_1_ngx_color_picker_6_Template, 1, 3, \"ngx-color-picker\", 5);\n    i0.ɵɵtemplate(7, MenuComponent_ng_container_1_ng_container_1_ngx_color_picker_7_Template, 1, 3, \"ngx-color-picker\", 6);\n    i0.ɵɵtemplate(8, MenuComponent_ng_container_1_ng_container_1_div_8_Template, 1, 2, \"div\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const lastItem_r6 = ctx.last;\n    const lastToolbarItem_r3 = i0.ɵɵnextContext().last;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.toggleCommands.includes(item_r5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.insertCommands.includes(item_r5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r5 === \"link\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r5 === \"image\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.isDropDown(item_r5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r5 === \"text_color\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r5 === \"background_color\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", lastItem_r6 && !lastToolbarItem_r3);\n  }\n}\n\nfunction MenuComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenuComponent_ng_container_1_ng_container_1_Template, 9, 8, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const toolbarItem_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", toolbarItem_r2)(\"ngForTrackBy\", ctx_r0.trackByIndex);\n  }\n}\n\nfunction MenuComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainer(1, 12);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.customMenuRef);\n  }\n}\n\nconst _c7 = function (a0, a1) {\n  return {\n    \"NgxEditor--Disabled\": a0,\n    \"NgxEditor__MenuBar--Reverse\": a1\n  };\n};\n\nconst _c8 = function (a0, a1) {\n  return {\n    \"NgxBubbleMenu__Icon--Active\": a0,\n    \"NgxEditor--Disabled\": a1\n  };\n};\n\nfunction BubbleComponent_ng_container_0_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"mousedown\", function BubbleComponent_ng_container_0_ng_container_1_div_1_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const item_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.onClick($event, item_r4);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c8, ctx_r6.activeItems.includes(item_r4), !ctx_r6.execulableItems.includes(item_r4)))(\"title\", ctx_r6.getTitle(item_r4))(\"innerHTML\", ctx_r6.getIcon(item_r4), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction BubbleComponent_ng_container_0_ng_container_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 4);\n  }\n}\n\nfunction BubbleComponent_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BubbleComponent_ng_container_0_ng_container_1_div_1_Template, 1, 6, \"div\", 1);\n    i0.ɵɵtemplate(2, BubbleComponent_ng_container_0_ng_container_1_div_2_Template, 1, 0, \"div\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    const lastItem_r5 = ctx.last;\n    const lastToolbarItem_r2 = i0.ɵɵnextContext().last;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.toggleCommands.includes(item_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", lastItem_r5 && !lastToolbarItem_r2);\n  }\n}\n\nfunction BubbleComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BubbleComponent_ng_container_0_ng_container_1_Template, 3, 2, \"ng-container\", 0);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const toolbarItem_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", toolbarItem_r1)(\"ngForTrackBy\", ctx_r0.trackByIndex);\n  }\n}\n\nfunction FloatingMenuComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"ngx-bubble\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"editor\", ctx_r1.editor);\n  }\n}\n\nconst editablePlugin = (editable = true) => {\n  return new Plugin({\n    key: new PluginKey('editable'),\n    state: {\n      init() {\n        return editable;\n      },\n\n      apply(tr, previousVal) {\n        var _a;\n\n        return (_a = tr.getMeta('UPDATE_EDITABLE')) !== null && _a !== void 0 ? _a : previousVal;\n      }\n\n    },\n    props: {\n      editable(state) {\n        return this.getState(state);\n      },\n\n      attributes(state) {\n        const isEnabled = this.getState(state);\n\n        if (isEnabled) {\n          return null;\n        }\n\n        return {\n          class: 'NgxEditor__Content--Disabled'\n        };\n      }\n\n    }\n  });\n};\n\nconst PLACEHOLDER_CLASSNAME = 'NgxEditor__Placeholder';\n\nconst placeholderPlugin = text => {\n  return new Plugin({\n    key: new PluginKey('placeholder'),\n    state: {\n      init() {\n        return text !== null && text !== void 0 ? text : '';\n      },\n\n      apply(tr, previousVal) {\n        var _a;\n\n        const placeholder = (_a = tr.getMeta('UPDATE_PLACEHOLDER')) !== null && _a !== void 0 ? _a : previousVal;\n        return placeholder;\n      }\n\n    },\n    props: {\n      decorations(state) {\n        const {\n          doc\n        } = state;\n        const {\n          textContent,\n          childCount\n        } = doc;\n        const placeholder = this.getState(state);\n\n        if (!placeholder || childCount > 1) {\n          return DecorationSet.empty;\n        }\n\n        const decorations = [];\n\n        const decorate = (node, pos) => {\n          var _a;\n\n          if (node.type.isBlock && node.childCount === 0 && textContent.length === 0) {\n            const from = pos;\n            const to = pos + node.nodeSize;\n            const placeholderNode = Decoration.node(from, to, {\n              'class': PLACEHOLDER_CLASSNAME,\n              'data-placeholder': placeholder,\n              'data-align': (_a = node.attrs['align']) !== null && _a !== void 0 ? _a : null\n            });\n            decorations.push(placeholderNode);\n          }\n\n          return false;\n        };\n\n        doc.descendants(decorate);\n        return DecorationSet.create(doc, decorations);\n      }\n\n    }\n  });\n};\n\nconst attributesPlugin = (attributes = {}) => {\n  return new Plugin({\n    key: new PluginKey('attributes'),\n    props: {\n      attributes\n    }\n  });\n};\n\nconst focusPlugin = cb => {\n  return new Plugin({\n    key: new PluginKey('focus'),\n    props: {\n      handleDOMEvents: {\n        focus: () => {\n          cb();\n          return false;\n        }\n      }\n    }\n  });\n};\n\nconst blurPlugin = cb => {\n  return new Plugin({\n    key: new PluginKey('blur'),\n    props: {\n      handleDOMEvents: {\n        blur: () => {\n          cb();\n          return false;\n        }\n      }\n    }\n  });\n};\n\nclass ImageViewComponent {\n  constructor() {\n    this.alt = '';\n    this.title = '';\n    this.outerWidth = '';\n    this.selected = false;\n    this.imageResize = new EventEmitter();\n  }\n\n  startResizing(e, direction) {\n    e.preventDefault();\n    this.resizeImage(e, direction);\n  }\n\n  resizeImage(evt, direction) {\n    const startX = evt.pageX;\n    const startWidth = this.imgEl.nativeElement.clientWidth;\n    const isLeftResize = direction === 'left';\n    const {\n      width\n    } = window.getComputedStyle(this.view.dom);\n    const editorWidth = parseInt(width, 10);\n\n    const onMouseMove = e => {\n      const currentX = e.pageX;\n      const diffInPx = currentX - startX;\n      const computedWidth = isLeftResize ? startWidth - diffInPx : startWidth + diffInPx; // prevent image overflow the editor\n      // prevent resizng below 20px\n\n      if (computedWidth > editorWidth || computedWidth < 20) {\n        return;\n      }\n\n      this.outerWidth = `${computedWidth}px`;\n    };\n\n    const onMouseUp = e => {\n      e.preventDefault();\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      this.imageResize.emit();\n    };\n\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n  }\n\n}\n\nImageViewComponent.ɵfac = function ImageViewComponent_Factory(t) {\n  return new (t || ImageViewComponent)();\n};\n\nImageViewComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ImageViewComponent,\n  selectors: [[\"ngx-image-view\"]],\n  viewQuery: function ImageViewComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.imgEl = _t.first);\n    }\n  },\n  inputs: {\n    src: \"src\",\n    alt: \"alt\",\n    title: \"title\",\n    outerWidth: \"outerWidth\",\n    selected: \"selected\",\n    view: \"view\"\n  },\n  outputs: {\n    imageResize: \"imageResize\"\n  },\n  decls: 4,\n  vars: 9,\n  consts: [[1, \"NgxEditor__ImageWrapper\", 3, \"ngClass\"], [\"class\", \"NgxEditor__ResizeHandle\", 4, \"ngIf\"], [3, \"src\", \"alt\", \"title\"], [\"imgEl\", \"\"], [1, \"NgxEditor__ResizeHandle\"], [1, \"NgxEditor__ResizeHandle--TL\", 3, \"mousedown\"], [1, \"NgxEditor__ResizeHandle--TR\", 3, \"mousedown\"], [1, \"NgxEditor__ResizeHandle--BL\", 3, \"mousedown\"], [1, \"NgxEditor__ResizeHandle--BR\", 3, \"mousedown\"]],\n  template: function ImageViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵtemplate(1, ImageViewComponent_span_1_Template, 5, 0, \"span\", 1);\n      i0.ɵɵelement(2, \"img\", 2, 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.outerWidth);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1, ctx.selected));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selected);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"src\", ctx.src, i0.ɵɵsanitizeUrl)(\"alt\", ctx.alt)(\"title\", ctx.title);\n    }\n  },\n  directives: [i3.NgClass, i3.NgIf],\n  styles: [\"*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]:before, *[_ngcontent-%COMP%]:after{box-sizing:border-box}img[_ngcontent-%COMP%]{width:100%;height:100%}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]{position:relative;display:inline-block;line-height:0;padding:2px}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active[_ngcontent-%COMP%]{padding:1px;border:1px solid #1a73e8}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--TL[_ngcontent-%COMP%], .NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--BL[_ngcontent-%COMP%], .NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--TR[_ngcontent-%COMP%], .NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--BR[_ngcontent-%COMP%]{position:absolute;width:7px;height:7px;background-color:#1a73e8;border:1px solid white}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--BR[_ngcontent-%COMP%]{bottom:-5px;right:-5px;cursor:se-resize}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--TR[_ngcontent-%COMP%]{top:-5px;right:-5px;cursor:ne-resize}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--TL[_ngcontent-%COMP%]{top:-5px;left:-5px;cursor:nw-resize}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--BL[_ngcontent-%COMP%]{bottom:-5px;left:-5px;cursor:sw-resize}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImageViewComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-image-view',\n      template: \"<span class=\\\"NgxEditor__ImageWrapper\\\" [ngClass]=\\\"{'NgxEditor__Resizer--Active': selected}\\\" [style.width]=\\\"outerWidth\\\">\\n  <span class=\\\"NgxEditor__ResizeHandle\\\" *ngIf=\\\"selected\\\">\\n    <span class=\\\"NgxEditor__ResizeHandle--TL\\\"  (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--TR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BL\\\" (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n  </span>\\n  <img [src]=\\\"src\\\" [alt]=\\\"alt\\\" [title]=\\\"title\\\" #imgEl />\\n</span>\\n\",\n      styles: [\"*,*:before,*:after{box-sizing:border-box}img{width:100%;height:100%}.NgxEditor__ImageWrapper{position:relative;display:inline-block;line-height:0;padding:2px}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active{padding:1px;border:1px solid #1a73e8}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle{position:absolute;height:100%;width:100%}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{position:absolute;width:7px;height:7px;background-color:#1a73e8;border:1px solid white}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{bottom:-5px;right:-5px;cursor:se-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR{top:-5px;right:-5px;cursor:ne-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL{top:-5px;left:-5px;cursor:nw-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL{bottom:-5px;left:-5px;cursor:sw-resize}\\n\"]\n    }]\n  }], null, {\n    src: [{\n      type: Input\n    }],\n    alt: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    outerWidth: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    view: [{\n      type: Input\n    }],\n    imageResize: [{\n      type: Output\n    }],\n    imgEl: [{\n      type: ViewChild,\n      args: ['imgEl', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass ImageRezieView {\n  constructor(node, view, getPos, injector) {\n    this.updating = false;\n\n    this.handleResize = () => {\n      if (this.updating) {\n        return;\n      }\n\n      const {\n        state,\n        dispatch\n      } = this.view;\n      const {\n        tr\n      } = state;\n      const transaction = tr.setNodeMarkup(this.getPos(), undefined, Object.assign(Object.assign({}, this.node.attrs), {\n        width: this.imageComponentRef.instance.outerWidth\n      }));\n      const resolvedPos = transaction.doc.resolve(this.getPos());\n      const newSelection = new NodeSelection(resolvedPos);\n      transaction.setSelection(newSelection);\n      dispatch(transaction);\n    };\n\n    const componentFactoryResolver = injector.get(ComponentFactoryResolver);\n    this.applicationRef = injector.get(ApplicationRef); // Create the component and wire it up with the element\n\n    const factory = componentFactoryResolver.resolveComponentFactory(ImageViewComponent);\n    this.imageComponentRef = factory.create(injector, []); // Attach to the view so that the change detector knows to run\n\n    this.applicationRef.attachView(this.imageComponentRef.hostView); // Possible alternate for deprecated ComponentFactoryResolver\n    // const viewContainerRef = injector.get(ViewContainerRef);\n    // this.imageComponentRef = viewContainerRef.createComponent(ImageViewComponent, { injector });\n\n    this.setNodeAttributes(node.attrs);\n    this.imageComponentRef.instance.view = view;\n    this.dom = this.imageComponentRef.location.nativeElement;\n    this.view = view;\n    this.node = node;\n    this.getPos = getPos;\n    this.resizeSubscription = this.imageComponentRef.instance.imageResize.subscribe(() => {\n      this.handleResize();\n    });\n  }\n\n  computeChanges(prevAttrs, newAttrs) {\n    return JSON.stringify(prevAttrs) === JSON.stringify(newAttrs);\n  }\n\n  setNodeAttributes(attrs) {\n    this.imageComponentRef.instance.src = attrs['src'];\n    this.imageComponentRef.instance.alt = attrs['alt'];\n    this.imageComponentRef.instance.title = attrs['title'];\n    this.imageComponentRef.instance.outerWidth = attrs['width'];\n  }\n\n  update(node) {\n    if (node.type !== this.node.type) {\n      return false;\n    }\n\n    this.node = node;\n    const changed = this.computeChanges(this.node.attrs, node.attrs);\n\n    if (changed) {\n      this.updating = true;\n      this.setNodeAttributes(node.attrs);\n      this.updating = false;\n    }\n\n    return true;\n  }\n\n  ignoreMutation() {\n    return true;\n  }\n\n  selectNode() {\n    this.imageComponentRef.instance.selected = true;\n  }\n\n  deselectNode() {\n    this.imageComponentRef.instance.selected = false;\n  }\n\n  destroy() {\n    this.resizeSubscription.unsubscribe();\n    this.applicationRef.detachView(this.imageComponentRef.hostView);\n  }\n\n}\n\nconst imageResizePlugin = injector => {\n  return new Plugin({\n    key: new PluginKey('image-resize'),\n    props: {\n      nodeViews: {\n        image: (node, view, getPos) => {\n          return new ImageRezieView(node, view, getPos, injector);\n        }\n      }\n    }\n  });\n};\n\nconst HTTP_LINK_REGEX = /(?:https?:\\/\\/)?[\\w-]+(?:\\.[\\w-]+)+\\.?(?:\\d+)?(?:\\/\\S*)?$/;\n\nconst linkify = fragment => {\n  const linkified = [];\n  fragment.forEach(child => {\n    if (child.isText) {\n      const text = child.text;\n      let pos = 0;\n      const match = HTTP_LINK_REGEX.exec(text);\n\n      if (match) {\n        const start = match.index;\n        const end = start + match[0].length;\n        const {\n          link\n        } = child.type.schema.marks;\n\n        if (start > 0) {\n          linkified.push(child.cut(pos, start));\n        }\n\n        const urlText = text.slice(start, end);\n        linkified.push(child.cut(start, end).mark(link.create({\n          href: urlText\n        }).addToSet(child.marks)));\n        pos = end;\n      }\n\n      if (pos < text.length) {\n        linkified.push(child.cut(pos));\n      }\n    } else {\n      linkified.push(child.copy(linkify(child.content)));\n    }\n  });\n  return Fragment.fromArray(linkified);\n};\n\nconst linkifyPlugin = () => {\n  return new Plugin({\n    key: new PluginKey('linkify'),\n    props: {\n      transformPasted: slice => {\n        return new Slice(linkify(slice.content), slice.openStart, slice.openEnd);\n      }\n    }\n  });\n};\n\nconst emptyDoc = {\n  type: 'doc',\n  content: [{\n    type: 'paragraph'\n  }]\n}; // https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\n\nconst toHTML = (json, inputSchema) => {\n  const schema$1 = inputSchema !== null && inputSchema !== void 0 ? inputSchema : schema;\n  const contentNode = schema$1.nodeFromJSON(json);\n  const html = DOMSerializer.fromSchema(schema$1).serializeFragment(contentNode.content);\n  const div = document.createElement('div');\n  div.appendChild(html);\n  return div.innerHTML;\n};\n\nconst toDoc = (html, inputSchema) => {\n  const schema$1 = inputSchema !== null && inputSchema !== void 0 ? inputSchema : schema;\n  const el = document.createElement('div');\n  el.innerHTML = html;\n  return DOMParser.fromSchema(schema$1).parse(el).toJSON();\n};\n\nconst parseContent = (value, schema) => {\n  if (!value) {\n    return schema.nodeFromJSON(emptyDoc);\n  }\n\n  if (typeof value !== 'string') {\n    return schema.nodeFromJSON(value);\n  }\n\n  const docJson = toDoc(value, schema);\n  return schema.nodeFromJSON(docJson);\n};\n\nclass NgxEditorComponent {\n  constructor(renderer, injector, elementRef) {\n    this.renderer = renderer;\n    this.injector = injector;\n    this.elementRef = elementRef;\n    this.placeholder = 'Type Here...';\n    this.focusOut = new EventEmitter();\n    this.focusIn = new EventEmitter();\n    this.subscriptions = [];\n\n    this.onChange = () => {};\n\n    this.onTouched = () => {};\n  }\n\n  writeValue(value) {\n    if (!this.outputFormat && typeof value === 'string') {\n      this.outputFormat = 'html';\n    }\n\n    this.editor.setContent(value !== null && value !== void 0 ? value : '');\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this.setMeta('UPDATE_EDITABLE', !isDisabled);\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  handleChange(jsonDoc) {\n    if (this.outputFormat === 'html') {\n      const html = toHTML(jsonDoc, this.editor.schema);\n      this.onChange(html);\n      return;\n    }\n\n    this.onChange(jsonDoc);\n  }\n\n  setMeta(key, value) {\n    const {\n      dispatch,\n      state: {\n        tr\n      }\n    } = this.editor.view;\n    dispatch(tr.setMeta(key, value));\n  }\n\n  setPlaceholder(placeholder) {\n    this.setMeta('UPDATE_PLACEHOLDER', placeholder);\n  }\n\n  registerPlugins() {\n    this.editor.registerPlugin(editablePlugin());\n    this.editor.registerPlugin(placeholderPlugin(this.placeholder));\n    this.editor.registerPlugin(attributesPlugin({\n      class: 'NgxEditor__Content'\n    }));\n    this.editor.registerPlugin(focusPlugin(() => {\n      this.focusIn.emit();\n    }));\n    this.editor.registerPlugin(focusPlugin(() => {\n      this.focusIn.emit();\n    }));\n    this.editor.registerPlugin(blurPlugin(() => {\n      this.focusOut.emit();\n      this.onTouched();\n    }));\n\n    if (this.editor.features.resizeImage) {\n      this.editor.registerPlugin(imageResizePlugin(this.injector));\n    }\n\n    if (this.editor.features.linkOnPaste) {\n      this.editor.registerPlugin(linkifyPlugin());\n    }\n  }\n\n  ngOnInit() {\n    if (!this.editor) {\n      throw new Error('NgxEditor: Required editor instance');\n    }\n\n    this.registerPlugins();\n    this.renderer.appendChild(this.ngxEditor.nativeElement, this.editor.view.dom);\n    const contentChangeSubscription = this.editor.valueChanges.subscribe(jsonDoc => {\n      this.handleChange(jsonDoc);\n    });\n    this.subscriptions.push(contentChangeSubscription);\n  }\n\n  ngOnChanges(changes) {\n    if ((changes === null || changes === void 0 ? void 0 : changes['placeholder']) && !changes['placeholder'].isFirstChange()) {\n      this.setPlaceholder(changes['placeholder'].currentValue);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n}\n\nNgxEditorComponent.ɵfac = function NgxEditorComponent_Factory(t) {\n  return new (t || NgxEditorComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgxEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxEditorComponent,\n  selectors: [[\"ngx-editor\"]],\n  viewQuery: function NgxEditorComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c2, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ngxEditor = _t.first);\n    }\n  },\n  inputs: {\n    editor: \"editor\",\n    outputFormat: \"outputFormat\",\n    placeholder: \"placeholder\"\n  },\n  outputs: {\n    focusOut: \"focusOut\",\n    focusIn: \"focusIn\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxEditorComponent),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c3,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"NgxEditor\"], [\"ngxEditor\", \"\"]],\n  template: function NgxEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".NgxEditor{background:white;color:#000;background-clip:padding-box;border-radius:4px;border:1px solid rgba(0,0,0,.2);position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder:before{color:#6c757d;opacity:1;-webkit-user-select:none;user-select:none;position:absolute;cursor:text;content:attr(data-placeholder)}.NgxEditor__Placeholder[data-align=right]:before{position:relative}.NgxEditor__Content{padding:8px;white-space:pre-wrap;outline:none;font-variant-ligatures:none;font-feature-settings:\\\"liga\\\" 0,none}.NgxEditor__Content p{margin:0 0 10px}.NgxEditor__Content blockquote{padding-left:16px;border-left:3px solid #ddd;margin-left:0;margin-right:0}.NgxEditor__Content--Disabled{-webkit-user-select:none;user-select:none;pointer-events:none}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.NgxEditor__Wrapper .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.NgxEditor__MenuBar{display:flex;flex-wrap:wrap;padding:3px;cursor:default;background-color:#fff}.NgxEditor__MenuItem{border-radius:2px;display:flex;align-items:center;justify-content:center;position:relative;flex-shrink:0}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:30px;width:30px;transition:.3s ease-in-out}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 5px}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active{background-color:#e8f0fe;color:#1a73e8}.NgxEditor__Dropdown{min-width:64px;position:relative;display:flex;align-items:center;flex-shrink:0}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{display:flex;align-items:center;justify-content:center;padding:0 5px;height:100%;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{display:inline-block;content:\\\"\\\";margin-left:24px;vertical-align:4px;border-top:4px solid;border-right:4px solid transparent;border-bottom:0;border-left:4px solid transparent}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{position:absolute;left:0;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;width:100%;top:32px}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{padding:8px;white-space:nowrap;color:inherit}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown.NgxEditor__Dropdown--Selected,.NgxEditor__Dropdown.NgxEditor__Dropdown--Open{background-color:#e8f0fe}.NgxEditor__Dropdown.NgxEditor__Dropdown--Selected .NgxEditor__Dropdown--Text,.NgxEditor__Dropdown.NgxEditor__Dropdown--Open .NgxEditor__Dropdown--Text{color:#1a73e8}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--DropdownMenu{top:unset;bottom:32px}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--Text:after{transform:rotate(180deg)}.NgxEditor__MenuBar--Reverse .NgxEditor__Popup{top:unset;bottom:32px}.NgxEditor__Popup{position:absolute;top:32px;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;min-width:192px;padding:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor__HelpText{font-size:80%}.NgxEditor__HelpText.NgxEditor__HelpText--Error{color:red}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-editor',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgxEditorComponent),\n        multi: true\n      }],\n      encapsulation: ViewEncapsulation.None,\n      template: \"<div class=\\\"NgxEditor\\\" #ngxEditor>\\n  <ng-content></ng-content>\\n</div>\\n\",\n      styles: [\".NgxEditor{background:white;color:#000;background-clip:padding-box;border-radius:4px;border:1px solid rgba(0,0,0,.2);position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder:before{color:#6c757d;opacity:1;-webkit-user-select:none;user-select:none;position:absolute;cursor:text;content:attr(data-placeholder)}.NgxEditor__Placeholder[data-align=right]:before{position:relative}.NgxEditor__Content{padding:8px;white-space:pre-wrap;outline:none;font-variant-ligatures:none;font-feature-settings:\\\"liga\\\" 0,none}.NgxEditor__Content p{margin:0 0 10px}.NgxEditor__Content blockquote{padding-left:16px;border-left:3px solid #ddd;margin-left:0;margin-right:0}.NgxEditor__Content--Disabled{-webkit-user-select:none;user-select:none;pointer-events:none}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.NgxEditor__Wrapper .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.NgxEditor__MenuBar{display:flex;flex-wrap:wrap;padding:3px;cursor:default;background-color:#fff}.NgxEditor__MenuItem{border-radius:2px;display:flex;align-items:center;justify-content:center;position:relative;flex-shrink:0}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:30px;width:30px;transition:.3s ease-in-out}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 5px}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active{background-color:#e8f0fe;color:#1a73e8}.NgxEditor__Dropdown{min-width:64px;position:relative;display:flex;align-items:center;flex-shrink:0}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{display:flex;align-items:center;justify-content:center;padding:0 5px;height:100%;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{display:inline-block;content:\\\"\\\";margin-left:24px;vertical-align:4px;border-top:4px solid;border-right:4px solid transparent;border-bottom:0;border-left:4px solid transparent}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{position:absolute;left:0;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;width:100%;top:32px}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{padding:8px;white-space:nowrap;color:inherit}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown.NgxEditor__Dropdown--Selected,.NgxEditor__Dropdown.NgxEditor__Dropdown--Open{background-color:#e8f0fe}.NgxEditor__Dropdown.NgxEditor__Dropdown--Selected .NgxEditor__Dropdown--Text,.NgxEditor__Dropdown.NgxEditor__Dropdown--Open .NgxEditor__Dropdown--Text{color:#1a73e8}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--DropdownMenu{top:unset;bottom:32px}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--Text:after{transform:rotate(180deg)}.NgxEditor__MenuBar--Reverse .NgxEditor__Popup{top:unset;bottom:32px}.NgxEditor__Popup{position:absolute;top:32px;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;min-width:192px;padding:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor__HelpText{font-size:80%}.NgxEditor__HelpText.NgxEditor__HelpText--Error{color:red}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    ngxEditor: [{\n      type: ViewChild,\n      args: ['ngxEditor', {\n        static: true\n      }]\n    }],\n    editor: [{\n      type: Input\n    }],\n    outputFormat: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    focusOut: [{\n      type: Output\n    }],\n    focusIn: [{\n      type: Output\n    }]\n  });\n})();\n\nclass MenuService {\n  constructor() {\n    this.customMenuRefChange = new Subject();\n  }\n\n  setCustomMenuRef(c) {\n    this.customMenuRefChange.next(c);\n  }\n\n}\n\nMenuService.ɵfac = function MenuService_Factory(t) {\n  return new (t || MenuService)();\n};\n\nMenuService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MenuService,\n  factory: MenuService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MenuService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nvar bold = `\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n`;\nvar italic = `\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\" />\n`;\nvar code = `\n<path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"/>\n`;\nvar underline = `\n<path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n`;\nvar strike = `\n<path d=\"M6.85,7.08C6.85,4.37,9.45,3,12.24,3c1.64,0,3,0.49,3.9,1.28c0.77,0.65,1.46,1.73,1.46,3.24h-3.01 c0-0.31-0.05-0.59-0.15-0.85c-0.29-0.86-1.2-1.28-2.25-1.28c-1.86,0-2.34,1.02-2.34,1.7c0,0.48,0.25,0.88,0.74,1.21 C10.97,8.55,11.36,8.78,12,9H7.39C7.18,8.66,6.85,8.11,6.85,7.08z M21,12v-2H3v2h9.62c1.15,0.45,1.96,0.75,1.96,1.97 c0,1-0.81,1.67-2.28,1.67c-1.54,0-2.93-0.54-2.93-2.51H6.4c0,0.55,0.08,1.13,0.24,1.58c0.81,2.29,3.29,3.3,5.67,3.3 c2.27,0,5.3-0.89,5.3-4.05c0-0.3-0.01-1.16-0.48-1.94H21V12z\"/>\n`;\nvar orderedList = `\n<path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"/>\n`;\nvar bulletList = `\n<path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\"/>\n`;\nvar quote = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z\"/>\n`;\nvar link = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n`;\nvar unlink = `\n<path d=\"M17 7h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1 0 1.43-.98 2.63-2.31 2.98l1.46 1.46C20.88 15.61 22 13.95 22 12c0-2.76-2.24-5-5-5zm-1 4h-2.19l2 2H16zM2 4.27l3.11 3.11C3.29 8.12 2 9.91 2 12c0 2.76 2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1 0-1.59 1.21-2.9 2.76-3.07L8.73 11H8v2h2.73L13 15.27V17h1.73l4.01 4L20 19.74 3.27 3 2 4.27z\"/>\n`;\nvar image = `\n<path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"/>\n`;\nvar alignLeft = `\n<path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n`;\nvar alignCenter = `\n<path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n`;\nvar alignRight = `\n<path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n`;\nvar alignJustify = `\n<path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"/>\n`;\nvar textColor = `\n<path d=\"M2,20h20v4H2V20z M5.49,17h2.42l1.27-3.58h5.65L16.09,17h2.42L13.25,3h-2.5L5.49,17z M9.91,11.39l2.03-5.79h0.12l2.03,5.79 H9.91z\"/>\n`;\nvar colorFill = `\n<path d=\"M16.56,8.94L7.62,0L6.21,1.41l2.38,2.38L3.44,8.94c-0.59,0.59-0.59,1.54,0,2.12l5.5,5.5C9.23,16.85,9.62,17,10,17 s0.77-0.15,1.06-0.44l5.5-5.5C17.15,10.48,17.15,9.53,16.56,8.94z M5.21,10L10,5.21L14.79,10H5.21z M19,11.5c0,0-2,2.17-2,3.5 c0,1.1,0.9,2,2,2s2-0.9,2-2C21,13.67,19,11.5,19,11.5z M2,20h20v4H2V20z\"/>\n`;\nvar horizontalRule = `\n  <g>\n    <rect fill=\"none\" fill-rule=\"evenodd\" height=\"24\" width=\"24\"/>\n    <rect fill-rule=\"evenodd\" height=\"2\" width=\"16\" x=\"4\" y=\"11\"/>\n  </g>\n`; // Icons source: https://material.io/\n\nconst DEFAULT_ICON_HEIGHT = 20;\nconst DEFAULT_ICON_WIDTH = 20;\nconst DEFAULT_ICON_FILL = 'currentColor';\nconst icons = {\n  bold,\n  italic,\n  code,\n  underline,\n  strike,\n  ordered_list: orderedList,\n  bullet_list: bulletList,\n  blockquote: quote,\n  link,\n  unlink,\n  image,\n  align_left: alignLeft,\n  align_center: alignCenter,\n  align_right: alignRight,\n  align_justify: alignJustify,\n  text_color: textColor,\n  color_fill: colorFill,\n  horizontal_rule: horizontalRule\n};\n\nclass Icon {\n  static get(name, fill = DEFAULT_ICON_FILL) {\n    const path = icons[name] || '<path></path>';\n    return `\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=${fill}\n        height=${DEFAULT_ICON_HEIGHT}\n        width=${DEFAULT_ICON_WIDTH}\n      >\n        ${path}\n      </svg>\n    `;\n  }\n\n}\n\nclass Mark {\n  constructor(name) {\n    this.name = name;\n  }\n\n  apply() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.marks[this.name];\n\n      if (!type) {\n        return false;\n      }\n\n      return applyMark(type)(state, dispatch);\n    };\n  }\n\n  toggle() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.marks[this.name];\n\n      if (!type) {\n        return false;\n      }\n\n      return toggleMark(type)(state, dispatch);\n    };\n  }\n\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const type = schema.marks[this.name];\n\n    if (!type) {\n      return false;\n    }\n\n    return isMarkActive(state, type);\n  }\n\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n\n}\n\nclass Blockqote {\n  toggle() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.nodes.blockquote;\n\n      if (!type) {\n        return false;\n      }\n\n      if (this.isActive(state)) {\n        return lift(state, dispatch);\n      }\n\n      return wrapIn(type)(state, dispatch);\n    };\n  }\n\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const type = schema.nodes.blockquote;\n\n    if (!type) {\n      return false;\n    }\n\n    return isNodeActive(state, type);\n  }\n\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n\n}\n\nclass HorizontalRule {\n  insert() {\n    return (state, dispatch) => {\n      const {\n        schema,\n        tr\n      } = state;\n      const type = schema.nodes.horizontal_rule;\n\n      if (!type) {\n        return false;\n      }\n\n      dispatch(tr.replaceSelectionWith(type.create()).scrollIntoView());\n      return true;\n    };\n  }\n\n  canExecute(state) {\n    return canInsert(state, state.schema.nodes.horizontal_rule);\n  }\n\n}\n\nclass ListItem {\n  constructor(isBulletList = false) {\n    this.isBulletList = false;\n    this.isBulletList = isBulletList;\n  }\n\n  getType(schema) {\n    return this.isBulletList ? schema.nodes['bullet_list'] : schema.nodes['ordered_list'];\n  }\n\n  toggle() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = this.getType(schema);\n\n      if (!type) {\n        return false;\n      }\n\n      if (this.isActive(state)) {\n        return liftListItem(schema.nodes.list_item)(state, dispatch);\n      }\n\n      return wrapInList(type)(state, dispatch);\n    };\n  }\n\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const type = this.getType(schema);\n\n    if (!type) {\n      return false;\n    }\n\n    return isNodeActive(state, type);\n  }\n\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n\n}\n\nclass Heading {\n  constructor(level) {\n    this.level = level;\n  }\n\n  apply() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.nodes.heading;\n\n      if (!type) {\n        return false;\n      }\n\n      return setBlockType(type)(state, dispatch);\n    };\n  }\n\n  toggle() {\n    return (state, dispatch) => {\n      var _a;\n\n      const {\n        schema,\n        selection,\n        doc\n      } = state;\n      const type = schema.nodes.heading;\n\n      if (!type) {\n        return false;\n      }\n\n      const nodePos = selection.$from.before(1);\n      const node = doc.nodeAt(nodePos);\n      const attrs = (_a = node === null || node === void 0 ? void 0 : node.attrs) !== null && _a !== void 0 ? _a : {};\n\n      if (this.isActive(state)) {\n        return setBlockType(schema.nodes.paragraph, attrs)(state, dispatch);\n      }\n\n      return setBlockType(type, Object.assign(Object.assign({}, attrs), {\n        level: this.level\n      }))(state, dispatch);\n    };\n  }\n\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const nodesInSelection = getSelectionNodes(state);\n    const type = schema.nodes.heading;\n\n    if (!type) {\n      return false;\n    }\n\n    const supportedNodes = [type, schema.nodes.text, schema.nodes.blockquote]; // heading is a text node\n    // don't mark as active when it has more nodes\n\n    const nodes = nodesInSelection.filter(node => {\n      return supportedNodes.includes(node.type);\n    });\n    const acitveNode = nodes.find(node => {\n      return node.attrs['level'] === this.level;\n    });\n    return Boolean(acitveNode);\n  }\n\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n\n}\n\nclass TextAlign {\n  constructor(align) {\n    this.align = align;\n  }\n\n  toggle() {\n    return (state, dispatch) => {\n      const {\n        doc,\n        selection,\n        tr,\n        schema\n      } = state;\n      const {\n        from,\n        to\n      } = selection;\n      let applicable = false;\n      doc.nodesBetween(from, to, (node, pos) => {\n        const nodeType = node.type;\n\n        if ([schema.nodes.paragraph, schema.nodes.heading].includes(nodeType)) {\n          applicable = true;\n          tr.setNodeMarkup(pos, nodeType, Object.assign(Object.assign({}, node.attrs), {\n            align: this.align\n          }));\n        }\n\n        return true;\n      });\n\n      if (!applicable) {\n        return false;\n      }\n\n      if (tr.docChanged) {\n        dispatch === null || dispatch === void 0 ? void 0 : dispatch(tr);\n      }\n\n      return true;\n    };\n  }\n\n  isActive(state) {\n    const nodes = getSelectionNodes(state);\n    const active = nodes.find(node => {\n      return node.attrs['align'] === this.align;\n    });\n    return Boolean(active);\n  }\n\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n\n}\n\nconst defaultOptions = {\n  strict: true\n};\n\nclass Link$1 {\n  update(attrs) {\n    return (state, dispatch) => {\n      const {\n        schema,\n        selection\n      } = state;\n      const type = schema.marks.link;\n\n      if (!type) {\n        return false;\n      }\n\n      if (selection.empty) {\n        return false;\n      }\n\n      return toggleMark(type, attrs)(state, dispatch);\n    };\n  }\n\n  insert(text, attrs) {\n    return (state, dispatch) => {\n      var _a, _b;\n\n      const {\n        schema,\n        tr\n      } = state;\n      const type = schema.marks.link;\n\n      if (!type) {\n        return false;\n      }\n\n      const linkAttrs = {\n        href: attrs.href,\n        title: (_a = attrs.title) !== null && _a !== void 0 ? _a : text,\n        target: (_b = attrs.target) !== null && _b !== void 0 ? _b : '_blank'\n      };\n      const node = schema.text(text, [schema.marks.link.create(linkAttrs)]);\n      tr.replaceSelectionWith(node, false).scrollIntoView();\n\n      if (tr.docChanged) {\n        dispatch === null || dispatch === void 0 ? void 0 : dispatch(tr);\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  isActive(state, options = defaultOptions) {\n    if (options.strict) {\n      return true;\n    }\n\n    const {\n      schema\n    } = state;\n    const type = schema.marks.link;\n\n    if (!type) {\n      return false;\n    }\n\n    return isMarkActive(state, type);\n  }\n\n  remove(state, dispatch) {\n    return removeLink()(state, dispatch);\n  }\n\n  canExecute(state) {\n    const testAttrs = {\n      href: ''\n    };\n    return this.insert('Exec', testAttrs)(state) || this.update(testAttrs)(state);\n  }\n\n}\n\nclass Image$1 {\n  insert(src, attrs) {\n    return (state, dispatch) => {\n      const {\n        schema,\n        tr,\n        selection\n      } = state;\n      const type = schema.nodes.image;\n\n      if (!type) {\n        return false;\n      }\n\n      const imageAttrs = Object.assign({\n        width: null,\n        src\n      }, attrs);\n\n      if (!imageAttrs.width && selection instanceof NodeSelection && selection.node.type === type) {\n        imageAttrs.width = selection.node.attrs['width'];\n      }\n\n      tr.replaceSelectionWith(type.createAndFill(imageAttrs));\n      const resolvedPos = tr.doc.resolve(tr.selection.anchor - tr.selection.$anchor.nodeBefore.nodeSize);\n      tr.setSelection(new NodeSelection(resolvedPos)).scrollIntoView();\n\n      if (tr.docChanged) {\n        dispatch === null || dispatch === void 0 ? void 0 : dispatch(tr);\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  isActive(state) {\n    const {\n      selection\n    } = state;\n\n    if (selection instanceof NodeSelection) {\n      return selection.node.type.name === 'image';\n    }\n\n    return false;\n  }\n\n}\n\nclass TextColor$1 {\n  constructor(name, attrName = 'color') {\n    this.name = name;\n    this.attrName = attrName;\n  }\n\n  apply(attrs) {\n    return (state, dispatch) => {\n      const {\n        schema,\n        selection,\n        doc\n      } = state;\n      const type = schema.marks[this.name];\n\n      if (!type) {\n        return false;\n      }\n\n      const {\n        from,\n        to,\n        empty\n      } = selection;\n\n      if (!empty && from + 1 === to) {\n        const node = doc.nodeAt(from);\n\n        if ((node === null || node === void 0 ? void 0 : node.isAtom) && !node.isText && node.isLeaf) {\n          // An atomic node (e.g. Image) is selected.\n          return false;\n        }\n      }\n\n      return applyMark(type, attrs)(state, dispatch);\n    };\n  }\n\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const type = schema.marks[this.name];\n\n    if (!type) {\n      return false;\n    }\n\n    return isMarkActive(state, type);\n  }\n\n  getActiveColors(state) {\n    if (!this.isActive(state)) {\n      return [];\n    }\n\n    const {\n      schema\n    } = state;\n    const marks = getSelectionMarks(state);\n    const colors = marks.filter(mark => mark.type === schema.marks[this.name]).map(mark => {\n      return mark.attrs[this.attrName];\n    }).filter(Boolean);\n    return colors;\n  }\n\n  remove() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.marks[this.name];\n\n      if (!type) {\n        return false;\n      }\n\n      return removeMark(type)(state, dispatch);\n    };\n  }\n\n  canExecute(state) {\n    const attrs = this.name === 'text_color' ? {\n      color: ''\n    } : {\n      backgroundColor: ''\n    };\n    return this.apply(attrs)(state);\n  }\n\n}\n\nconst STRONG = new Mark('strong');\nconst EM = new Mark('em');\nconst CODE = new Mark('code');\nconst UNDERLINE = new Mark('u');\nconst STRIKE = new Mark('s');\nconst BLOCKQUOTE = new Blockqote();\nconst HORIZONTAL_RULE = new HorizontalRule();\nconst UL = new ListItem(true);\nconst OL = new ListItem(false);\nconst H1 = new Heading(1);\nconst H2 = new Heading(2);\nconst H3 = new Heading(3);\nconst H4 = new Heading(4);\nconst H5 = new Heading(5);\nconst H6 = new Heading(6);\nconst ALIGN_LEFT = new TextAlign('left');\nconst ALIGN_CENTER = new TextAlign('center');\nconst ALIGN_RIGHT = new TextAlign('right');\nconst ALIGN_JUSTIFY = new TextAlign('justify');\nconst LINK = new Link$1();\nconst IMAGE = new Image$1();\nconst TEXT_COLOR = new TextColor$1('text_color', 'color');\nconst TEXT_BACKGROUND_COLOR = new TextColor$1('text_background_color', 'backgroundColor');\nconst ToggleCommands = {\n  bold: STRONG,\n  italic: EM,\n  code: CODE,\n  underline: UNDERLINE,\n  strike: STRIKE,\n  blockquote: BLOCKQUOTE,\n  bullet_list: UL,\n  ordered_list: OL,\n  h1: H1,\n  h2: H2,\n  h3: H3,\n  h4: H4,\n  h5: H5,\n  h6: H6,\n  align_left: ALIGN_LEFT,\n  align_center: ALIGN_CENTER,\n  align_right: ALIGN_RIGHT,\n  align_justify: ALIGN_JUSTIFY\n};\nconst InsertCommands = {\n  horizontal_rule: HORIZONTAL_RULE\n};\nconst Link = LINK;\nconst Image = IMAGE;\nconst TextColor = TEXT_COLOR;\nconst TextBackgroundColor = TEXT_BACKGROUND_COLOR;\nconst defaults = {\n  // menu\n  bold: 'Bold',\n  italic: 'Italic',\n  code: 'Code',\n  underline: 'Underline',\n  strike: 'Strike',\n  blockquote: 'Blockquote',\n  bullet_list: 'Bullet List',\n  ordered_list: 'Ordered List',\n  heading: 'Heading',\n  h1: 'Header 1',\n  h2: 'Header 2',\n  h3: 'Header 3',\n  h4: 'Header 4',\n  h5: 'Header 5',\n  h6: 'Header 6',\n  align_left: 'Left Align',\n  align_center: 'Center Align',\n  align_right: 'Right Align',\n  align_justify: 'Justify',\n  text_color: 'Text Color',\n  background_color: 'Background Color',\n  insertLink: 'Insert Link',\n  removeLink: 'Remove Link',\n  insertImage: 'Insert Image',\n  // pupups, forms, others...\n  url: 'URL',\n  text: 'Text',\n  openInNewTab: 'Open in new tab',\n  insert: 'Insert',\n  altText: 'Alt Text',\n  title: 'Title',\n  remove: 'Remove'\n};\n\nclass Locals {\n  constructor(newLocals = {}) {\n    this.locals = defaults;\n\n    this.get = key => {\n      var _a;\n\n      return (_a = this.locals[key]) !== null && _a !== void 0 ? _a : '';\n    };\n\n    this.locals = Object.assign(Object.assign({}, defaults), newLocals);\n  }\n\n}\n\nclass NgxEditorServiceConfig {\n  constructor() {\n    this.locals = {};\n  }\n\n}\n\nNgxEditorServiceConfig.ɵfac = function NgxEditorServiceConfig_Factory(t) {\n  return new (t || NgxEditorServiceConfig)();\n};\n\nNgxEditorServiceConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgxEditorServiceConfig,\n  factory: NgxEditorServiceConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxEditorServiceConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass NgxEditorService {\n  constructor(config) {\n    this.config = config;\n  }\n\n  get locals() {\n    return new Locals(this.config.locals);\n  }\n\n}\n\nNgxEditorService.ɵfac = function NgxEditorService_Factory(t) {\n  return new (t || NgxEditorService)(i0.ɵɵinject(NgxEditorServiceConfig, 8));\n};\n\nNgxEditorService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgxEditorService,\n  factory: NgxEditorService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxEditorService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgxEditorServiceConfig,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst provideMyServiceOptions = config => {\n  var _a;\n\n  return {\n    locals: (_a = config.locals) !== null && _a !== void 0 ? _a : {}\n  };\n};\n\nclass SanitizeHtmlPipe {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n  }\n\n  transform(value) {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n\n}\n\nSanitizeHtmlPipe.ɵfac = function SanitizeHtmlPipe_Factory(t) {\n  return new (t || SanitizeHtmlPipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n};\n\nSanitizeHtmlPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"sanitizeHtml\",\n  type: SanitizeHtmlPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SanitizeHtmlPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'sanitizeHtml'\n    }]\n  }], function () {\n    return [{\n      type: i1.DomSanitizer\n    }];\n  }, null);\n})();\n\nclass ToggleCommandComponent {\n  constructor(ngxeService, menuService) {\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.isActive = false;\n    this.disabled = false;\n\n    this.update = view => {\n      const {\n        state\n      } = view;\n      const command = ToggleCommands[this.name];\n      this.isActive = command.isActive(state);\n      this.disabled = !command.canExecute(state);\n    };\n  }\n\n  get name() {\n    return this.toolbarItem;\n  }\n\n  toggle(e) {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n    const command = ToggleCommands[this.name];\n    command.toggle()(state, dispatch);\n  }\n\n  getTitle(name) {\n    return this.ngxeService.locals.get(name);\n  }\n\n  ngOnInit() {\n    this.html = Icon.get(this.name);\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n\n}\n\nToggleCommandComponent.ɵfac = function ToggleCommandComponent_Factory(t) {\n  return new (t || ToggleCommandComponent)(i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService));\n};\n\nToggleCommandComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ToggleCommandComponent,\n  selectors: [[\"ngx-toggle-command\"]],\n  hostVars: 4,\n  hostBindings: function ToggleCommandComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"NgxEditor__MenuItem--Active\", ctx.isActive)(\"NgxEditor--Disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    toolbarItem: \"toolbarItem\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"]],\n  template: function ToggleCommandComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mousedown\", function ToggleCommandComponent_Template_div_mousedown_0_listener($event) {\n        return ctx.toggle($event);\n      });\n      i0.ɵɵpipe(1, \"sanitizeHtml\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 2, ctx.html), i0.ɵɵsanitizeHtml)(\"title\", ctx.getTitle(ctx.name));\n    }\n  },\n  pipes: [SanitizeHtmlPipe],\n  styles: [\"\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToggleCommandComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-toggle-command',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"html | sanitizeHtml\\\" (mousedown)=\\\"toggle($event)\\\"\\n  [title]=\\\"getTitle(name)\\\">\\n</div>\\n\",\n      styles: [\"\"]\n    }]\n  }], function () {\n    return [{\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }];\n  }, {\n    toolbarItem: [{\n      type: Input\n    }],\n    isActive: [{\n      type: HostBinding,\n      args: ['class.NgxEditor__MenuItem--Active']\n    }],\n    disabled: [{\n      type: HostBinding,\n      args: ['class.NgxEditor--Disabled']\n    }]\n  });\n})();\n\nclass InsertCommandComponent {\n  constructor(ngxeService, menuService) {\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.disabled = false;\n\n    this.update = view => {\n      const {\n        state\n      } = view;\n      const command = InsertCommands[this.name];\n      this.disabled = !command.canExecute(state);\n    };\n  }\n\n  get name() {\n    return this.toolbarItem;\n  }\n\n  insert(e) {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n    const command = InsertCommands[this.name];\n    command.insert()(state, dispatch);\n  }\n\n  getTitle(name) {\n    return this.ngxeService.locals.get(name);\n  }\n\n  ngOnInit() {\n    this.html = Icon.get(this.name);\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n\n}\n\nInsertCommandComponent.ɵfac = function InsertCommandComponent_Factory(t) {\n  return new (t || InsertCommandComponent)(i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService));\n};\n\nInsertCommandComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: InsertCommandComponent,\n  selectors: [[\"ngx-insert-command\"]],\n  hostVars: 2,\n  hostBindings: function InsertCommandComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"NgxEditor--Disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    toolbarItem: \"toolbarItem\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"]],\n  template: function InsertCommandComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mousedown\", function InsertCommandComponent_Template_div_mousedown_0_listener($event) {\n        return ctx.insert($event);\n      });\n      i0.ɵɵpipe(1, \"sanitizeHtml\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 2, ctx.html), i0.ɵɵsanitizeHtml)(\"title\", ctx.getTitle(ctx.name));\n    }\n  },\n  pipes: [SanitizeHtmlPipe],\n  styles: [\"\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InsertCommandComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-insert-command',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"html | sanitizeHtml\\\" (mousedown)=\\\"insert($event)\\\"\\n  [title]=\\\"getTitle(name)\\\">\\n</div>\\n\",\n      styles: [\"\"]\n    }]\n  }], function () {\n    return [{\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }];\n  }, {\n    toolbarItem: [{\n      type: Input\n    }],\n    disabled: [{\n      type: HostBinding,\n      args: ['class.NgxEditor--Disabled']\n    }]\n  });\n})();\n\nclass LinkComponent {\n  constructor(el, ngxeService, menuService) {\n    this.el = el;\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.showPopup = false;\n    this.isActive = false;\n    this.canExecute = true;\n    this.form = new FormGroup({\n      href: new FormControl('', [Validators$1.required, Validators$1.pattern('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/??([^#\\n\\r]*)?#?([^\\n\\r]*)')]),\n      text: new FormControl('', [Validators$1.required]),\n      openInNewTab: new FormControl(true)\n    });\n\n    this.setText = () => {\n      const {\n        state: {\n          selection,\n          doc\n        }\n      } = this.editorView;\n      const {\n        empty,\n        from,\n        to\n      } = selection;\n      const selectedText = !empty ? doc.textBetween(from, to) : '';\n\n      if (selectedText) {\n        this.text.patchValue(selectedText);\n        this.text.disable();\n      }\n    };\n\n    this.update = view => {\n      const {\n        state\n      } = view;\n      this.isActive = Link.isActive(state, {\n        strict: false\n      });\n      this.canExecute = Link.canExecute(state);\n    };\n  }\n\n  get valid() {\n    return this.isActive || this.showPopup;\n  }\n\n  get disabled() {\n    return !this.canExecute;\n  }\n\n  get icon() {\n    return Icon.get(this.isActive ? 'unlink' : 'link');\n  }\n\n  get title() {\n    return this.ngxeService.locals.get(this.isActive ? 'removeLink' : 'insertLink');\n  }\n\n  get href() {\n    return this.form.get('href');\n  }\n\n  get text() {\n    return this.form.get('text');\n  }\n\n  onDocumentClick(e) {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hideForm();\n    }\n  }\n\n  getLabel(key) {\n    return this.ngxeService.locals.get(key);\n  }\n\n  hideForm() {\n    this.showPopup = false;\n    this.form.reset({\n      href: '',\n      text: '',\n      openInNewTab: true\n    });\n    this.text.enable();\n  }\n\n  onMouseDown(e) {\n    if (e.button !== 0) {\n      return;\n    }\n\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n\n    if (this.isActive) {\n      Link.remove(state, dispatch);\n      return;\n    }\n\n    this.showPopup = !this.showPopup;\n\n    if (this.showPopup) {\n      this.setText();\n    }\n  }\n\n  insertLink(e) {\n    e.preventDefault();\n    const {\n      text,\n      href,\n      openInNewTab\n    } = this.form.getRawValue();\n    const {\n      dispatch,\n      state\n    } = this.editorView;\n    const {\n      selection\n    } = state;\n    const attrs = {\n      title: href,\n      href,\n      target: openInNewTab ? '_blank' : '_self'\n    };\n\n    if (selection.empty) {\n      Link.insert(text, attrs)(state, dispatch);\n      this.editorView.focus();\n    } else {\n      Link.update(attrs)(state, dispatch);\n    }\n\n    this.hideForm();\n  }\n\n  ngOnInit() {\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n\n}\n\nLinkComponent.ɵfac = function LinkComponent_Factory(t) {\n  return new (t || LinkComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService));\n};\n\nLinkComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LinkComponent,\n  selectors: [[\"ngx-link\"]],\n  hostVars: 4,\n  hostBindings: function LinkComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function LinkComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onDocumentClick($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"NgxEditor__MenuItem--Active\", ctx.valid)(\"NgxEditor--Disabled\", ctx.disabled);\n    }\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"], [\"class\", \"NgxEditor__Popup\", 4, \"ngIf\"], [1, \"NgxEditor__Popup\"], [1, \"NgxEditor__Popup--Form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"NgxEditor__Popup--FormGroup\"], [1, \"NgxEditor__Popup--Col\"], [1, \"NgxEditor__Popup--Label\"], [\"type\", \"href\", \"id\", \"href\", \"formControlName\", \"href\", \"autofocus\", \"\", \"autocomplete\", \"off\"], [\"class\", \"NgxEditor__HelpText NgxEditor__HelpText--Error\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"text\", \"autocomplete\", \"off\"], [\"type\", \"checkbox\", \"formControlName\", \"openInNewTab\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"NgxEditor__HelpText\", \"NgxEditor__HelpText--Error\"]],\n  template: function LinkComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mousedown\", function LinkComponent_Template_div_mousedown_0_listener($event) {\n        return ctx.onMouseDown($event);\n      });\n      i0.ɵɵpipe(1, \"sanitizeHtml\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, LinkComponent_div_2_Template, 21, 8, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 3, ctx.icon), i0.ɵɵsanitizeHtml)(\"title\", ctx.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showPopup);\n    }\n  },\n  directives: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i4.CheckboxControlValueAccessor],\n  pipes: [SanitizeHtmlPipe],\n  styles: [\"\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LinkComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-link',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"href\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"href.touched && href.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ href.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('text')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"text\\\" autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"text.touched && text.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ text.errors?.['required'] && 'This is required' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" formControlName=\\\"openInNewTab\\\" />\\n          {{getLabel('openInNewTab')}}\\n        </label>\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\",\n      styles: [\"\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }];\n  }, {\n    valid: [{\n      type: HostBinding,\n      args: ['class.NgxEditor__MenuItem--Active']\n    }],\n    disabled: [{\n      type: HostBinding,\n      args: ['class.NgxEditor--Disabled']\n    }],\n    onDocumentClick: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event']]\n    }]\n  });\n})();\n\nclass ImageComponent {\n  constructor(el, ngxeService, menuService) {\n    this.el = el;\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.showPopup = false;\n    this.isActive = false;\n    this.form = new FormGroup({\n      src: new FormControl('', [Validators$1.required, Validators$1.pattern('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/??([^#\\n\\r]*)?#?([^\\n\\r]*)')]),\n      alt: new FormControl(''),\n      title: new FormControl('')\n    });\n\n    this.update = view => {\n      const {\n        state\n      } = view;\n      this.isActive = Image.isActive(state);\n    };\n  }\n\n  get valid() {\n    return this.isActive || this.showPopup;\n  }\n\n  get icon() {\n    return Icon.get('image');\n  }\n\n  get src() {\n    return this.form.get('src');\n  }\n\n  onDocumentClick(e) {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hideForm();\n    }\n  }\n\n  getLabel(key) {\n    return this.ngxeService.locals.get(key);\n  }\n\n  hideForm() {\n    this.showPopup = false;\n    this.form.reset({\n      src: '',\n      alt: '',\n      title: ''\n    });\n  }\n\n  onMouseDown(e) {\n    if (e.button !== 0) {\n      return;\n    }\n\n    this.showPopup = !this.showPopup;\n\n    if (this.showPopup) {\n      this.fillForm();\n    }\n  }\n\n  fillForm() {\n    const {\n      state\n    } = this.editorView;\n    const {\n      selection\n    } = state;\n\n    if (selection instanceof NodeSelection && this.isActive) {\n      const {\n        src,\n        alt = '',\n        title = ''\n      } = selection.node.attrs;\n      this.form.setValue({\n        src,\n        alt,\n        title\n      });\n    }\n  }\n\n  insertLink(e) {\n    e.preventDefault();\n    const {\n      src,\n      alt,\n      title\n    } = this.form.getRawValue();\n    const {\n      dispatch,\n      state\n    } = this.editorView;\n    const attrs = {\n      alt,\n      title\n    };\n    Image.insert(src, attrs)(state, dispatch);\n    this.editorView.focus();\n    this.hideForm();\n  }\n\n  ngOnInit() {\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n\n}\n\nImageComponent.ɵfac = function ImageComponent_Factory(t) {\n  return new (t || ImageComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService));\n};\n\nImageComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ImageComponent,\n  selectors: [[\"ngx-image\"]],\n  hostVars: 2,\n  hostBindings: function ImageComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function ImageComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onDocumentClick($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"NgxEditor__MenuItem--Active\", ctx.valid);\n    }\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"], [\"class\", \"NgxEditor__Popup\", 4, \"ngIf\"], [1, \"NgxEditor__Popup\"], [1, \"NgxEditor__Popup--Form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"NgxEditor__Popup--FormGroup\"], [1, \"NgxEditor__Popup--Col\"], [1, \"NgxEditor__Popup--Label\"], [\"type\", \"href\", \"id\", \"href\", \"formControlName\", \"src\", \"autofocus\", \"\", \"autocomplete\", \"off\"], [\"class\", \"NgxEditor__HelpText NgxEditor__HelpText--Error\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"alt\", \"autocomplete\", \"off\"], [\"type\", \"text\", \"formControlName\", \"title\", \"autocomplete\", \"off\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"NgxEditor__HelpText\", \"NgxEditor__HelpText--Error\"]],\n  template: function ImageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mousedown\", function ImageComponent_Template_div_mousedown_0_listener($event) {\n        return ctx.onMouseDown($event);\n      });\n      i0.ɵɵpipe(1, \"sanitizeHtml\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ImageComponent_div_2_Template, 20, 7, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 3, ctx.icon), i0.ɵɵsanitizeHtml)(\"title\", ctx.getLabel(\"insertImage\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showPopup);\n    }\n  },\n  directives: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName],\n  pipes: [SanitizeHtmlPipe],\n  styles: [\"\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImageComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-image',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"getLabel('insertImage')\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"src\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"src.touched && src.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ src.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('altText')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"alt\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('title')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"title\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid || !form.dirty\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\",\n      styles: [\"\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }];\n  }, {\n    valid: [{\n      type: HostBinding,\n      args: ['class.NgxEditor__MenuItem--Active']\n    }],\n    onDocumentClick: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event']]\n    }]\n  });\n})();\n\nclass DropdownComponent {\n  constructor(ngxeService, menuService, el) {\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.el = el;\n    this.isDropdownOpen = false;\n    this.disabledItems = [];\n\n    this.update = view => {\n      const {\n        state\n      } = view;\n      this.disabledItems = [];\n      const activeItems = [];\n      this.items.forEach(item => {\n        const command = ToggleCommands[item];\n        const isActive = command.isActive(state);\n\n        if (isActive) {\n          activeItems.push(item);\n        }\n\n        if (!command.canExecute(state)) {\n          this.disabledItems.push(item);\n        }\n      });\n\n      if (activeItems.length === 1) {\n        [this.activeItem] = activeItems;\n      } else {\n        this.activeItem = null;\n      }\n    };\n  }\n\n  get isSelected() {\n    return Boolean(this.activeItem || this.isDropdownOpen);\n  }\n\n  get isDropdownDisabled() {\n    return this.disabledItems.length === this.items.length;\n  }\n\n  onDocumentClick(target) {\n    if (!this.el.nativeElement.contains(target) && this.isDropdownOpen) {\n      this.isDropdownOpen = false;\n    }\n  }\n\n  getName(key) {\n    return this.ngxeService.locals.get(key);\n  }\n\n  toggleDropdown(e) {\n    e.preventDefault();\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n\n  trackByIndex(index) {\n    return index;\n  }\n\n  onClick(e, item) {\n    e.preventDefault(); // consider only left click\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const command = ToggleCommands[item];\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n    command.toggle()(state, dispatch);\n    this.isDropdownOpen = false;\n  }\n\n  ngOnInit() {\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n\n}\n\nDropdownComponent.ɵfac = function DropdownComponent_Factory(t) {\n  return new (t || DropdownComponent)(i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nDropdownComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DropdownComponent,\n  selectors: [[\"ngx-dropdown\"]],\n  hostVars: 4,\n  hostBindings: function DropdownComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function DropdownComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onDocumentClick($event.target);\n      }, false, i0.ɵɵresolveDocument);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"NgxEditor__Dropdown--Selected\", ctx.isSelected)(\"NgxEditor--Disabled\", ctx.isDropdownDisabled);\n    }\n  },\n  inputs: {\n    group: \"group\",\n    items: \"items\"\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"NgxEditor__Dropdown--Text\", 3, \"mousedown\"], [\"class\", \"NgxEditor__Dropdown--DropdownMenu\", 4, \"ngIf\"], [1, \"NgxEditor__Dropdown--DropdownMenu\"], [\"class\", \"NgxEditor__Dropdown--Item\", 3, \"ngClass\", \"mousedown\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"NgxEditor__Dropdown--Item\", 3, \"ngClass\", \"mousedown\"]],\n  template: function DropdownComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mousedown\", function DropdownComponent_Template_div_mousedown_0_listener($event) {\n        return ctx.toggleDropdown($event);\n      });\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, DropdownComponent_div_2_Template, 2, 2, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.getName(ctx.activeItem || ctx.group), \"\\n\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isDropdownOpen);\n    }\n  },\n  directives: [i3.NgIf, i3.NgForOf, i3.NgClass],\n  styles: [\"\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-dropdown',\n      template: \"<div class=\\\"NgxEditor__Dropdown--Text\\\" (mousedown)=\\\"toggleDropdown($event)\\\">\\n  {{getName(activeItem || group)}}\\n</div>\\n\\n<div class=\\\"NgxEditor__Dropdown--DropdownMenu\\\" *ngIf=\\\"isDropdownOpen\\\">\\n  <div class=\\\"NgxEditor__Dropdown--Item\\\" *ngFor=\\\"let item of items; trackBy: trackByIndex\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n    [ngClass]=\\\"{'NgxEditor__Dropdown--Active': item === activeItem, 'NgxEditor--Disabled':disabledItems.includes(item)}\\\">\\n    {{getName(item)}}\\n  </div>\\n</div>\\n\",\n      styles: [\"\"]\n    }]\n  }], function () {\n    return [{\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    group: [{\n      type: Input\n    }],\n    items: [{\n      type: Input\n    }],\n    isSelected: [{\n      type: HostBinding,\n      args: ['class.NgxEditor__Dropdown--Selected']\n    }],\n    isDropdownDisabled: [{\n      type: HostBinding,\n      args: ['class.NgxEditor--Disabled']\n    }],\n    onDocumentClick: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event.target']]\n    }]\n  });\n})();\n\nclass ColorPickerComponent {\n  constructor(el, menuService, ngxeService) {\n    this.el = el;\n    this.menuService = menuService;\n    this.ngxeService = ngxeService;\n    this.showPopup = false;\n    this.isActive = false;\n    this.activeColors = [];\n    this.canExecute = true;\n\n    this.update = view => {\n      const {\n        state\n      } = view;\n      this.canExecute = this.command.canExecute(state);\n      this.isActive = this.command.isActive(state);\n      this.activeColors = [];\n\n      if (this.isActive) {\n        this.activeColors = this.command.getActiveColors(state);\n      }\n    };\n  }\n\n  get valid() {\n    return this.isActive || this.showPopup;\n  }\n\n  get disabled() {\n    return !this.canExecute;\n  }\n\n  get title() {\n    return this.getLabel(this.type === 'text_color' ? 'text_color' : 'background_color');\n  }\n\n  get icon() {\n    return Icon.get(this.type === 'text_color' ? 'text_color' : 'color_fill');\n  }\n\n  get command() {\n    return this.type === 'text_color' ? TextColor : TextBackgroundColor;\n  }\n\n  getContrastYIQ(hexcolor) {\n    const color = hexcolor.replace('#', '');\n    const r = parseInt(color.substring(0, 2), 16);\n    const g = parseInt(color.substring(2, 4), 16);\n    const b = parseInt(color.substring(4, 6), 16);\n    const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n    return yiq >= 128 ? 'black' : 'white';\n  }\n\n  onDocumentClick(e) {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hidePopup();\n    }\n  }\n\n  hidePopup() {\n    this.showPopup = false;\n  }\n\n  togglePopup(e) {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    this.showPopup = !this.showPopup;\n  }\n\n  remove(e) {\n    e.preventDefault();\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n    this.command.remove()(state, dispatch);\n    this.hidePopup();\n  }\n\n  trackByIndex(index) {\n    return index;\n  }\n\n  onColorSelect(e, color) {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n\n    if (this.type === 'text_color') {\n      const attrs = {\n        color\n      };\n      this.command.apply(attrs)(state, dispatch);\n    } else {\n      const attrs = {\n        backgroundColor: color\n      };\n      this.command.apply(attrs)(state, dispatch);\n    }\n\n    if (!this.editorView.hasFocus()) {\n      this.editorView.focus();\n    }\n\n    this.hidePopup();\n  }\n\n  getLabel(key) {\n    return this.ngxeService.locals.get(key);\n  }\n\n  ngOnInit() {\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n\n}\n\nColorPickerComponent.ɵfac = function ColorPickerComponent_Factory(t) {\n  return new (t || ColorPickerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(NgxEditorService));\n};\n\nColorPickerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColorPickerComponent,\n  selectors: [[\"ngx-color-picker\"]],\n  hostVars: 4,\n  hostBindings: function ColorPickerComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function ColorPickerComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onDocumentClick($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"NgxEditor__MenuItem--Active\", ctx.valid)(\"NgxEditor--Disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    presets: \"presets\",\n    type: \"type\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"], [\"class\", \"NgxEditor__Popup\", 4, \"ngIf\"], [1, \"NgxEditor__Popup\"], [\"class\", \"NgxEditor__ColorContainer\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"NgxEditor__MenuItem--Button\", 3, \"disabled\", \"mousedown\"], [1, \"NgxEditor__ColorContainer\"], [\"class\", \"NgxEditor__Color\", 3, \"ngStyle\", \"title\", \"ngClass\", \"mousedown\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"NgxEditor__Color\", 3, \"ngStyle\", \"title\", \"ngClass\", \"mousedown\"]],\n  template: function ColorPickerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mousedown\", function ColorPickerComponent_Template_div_mousedown_0_listener($event) {\n        return ctx.togglePopup($event);\n      });\n      i0.ɵɵpipe(1, \"sanitizeHtml\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ColorPickerComponent_div_2_Template, 4, 4, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 3, ctx.icon), i0.ɵɵsanitizeHtml)(\"title\", ctx.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showPopup);\n    }\n  },\n  directives: [i3.NgIf, i3.NgForOf, i3.NgStyle, i3.NgClass],\n  pipes: [SanitizeHtmlPipe],\n  styles: [\"@charset \\\"UTF-8\\\";.NgxEditor__Popup[_ngcontent-%COMP%]{width:230px}.NgxEditor__ColorContainer[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.NgxEditor__ColorContainer[_ngcontent-%COMP%] + .NgxEditor__ColorContainer[_ngcontent-%COMP%]{margin-top:5px}.NgxEditor__Color[_ngcontent-%COMP%]{border:none;outline:none;border-radius:6px;width:24px;height:24px;flex-shrink:0}.NgxEditor__Color--Active[_ngcontent-%COMP%]:after{content:\\\"\\\\2714\\\";font-size:90%}.NgxEditor__MenuItem--Button[_ngcontent-%COMP%]{margin-top:5px}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorPickerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-color-picker',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"togglePopup($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <div *ngFor=\\\"let colorGroup of presets; trackBy: trackByIndex\\\" class=\\\"NgxEditor__ColorContainer\\\">\\n    <button class=\\\"NgxEditor__Color\\\" *ngFor=\\\"let color of colorGroup; trackBy: trackByIndex\\\"\\n      [ngStyle]=\\\"{backgroundColor: color, color:getContrastYIQ(color)}\\\" [title]=\\\"color\\\"\\n      (mousedown)=\\\"onColorSelect($event, color)\\\"\\n      [ngClass]=\\\"{'NgxEditor__Color--Active': activeColors.includes(color)}\\\"></button>\\n  </div>\\n\\n  <button class=\\\"NgxEditor__MenuItem--Button\\\" (mousedown)=\\\"remove($event)\\\" [disabled]=\\\"!isActive\\\">\\n    {{getLabel('remove')}}\\n  </button>\\n</div>\\n\",\n      styles: [\"@charset \\\"UTF-8\\\";.NgxEditor__Popup{width:230px}.NgxEditor__ColorContainer{display:flex;justify-content:space-between}.NgxEditor__ColorContainer+.NgxEditor__ColorContainer{margin-top:5px}.NgxEditor__Color{border:none;outline:none;border-radius:6px;width:24px;height:24px;flex-shrink:0}.NgxEditor__Color--Active:after{content:\\\"\\\\2714\\\";font-size:90%}.NgxEditor__MenuItem--Button{margin-top:5px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: MenuService\n    }, {\n      type: NgxEditorService\n    }];\n  }, {\n    presets: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    valid: [{\n      type: HostBinding,\n      args: ['class.NgxEditor__MenuItem--Active']\n    }],\n    disabled: [{\n      type: HostBinding,\n      args: ['class.NgxEditor--Disabled']\n    }],\n    onDocumentClick: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event']]\n    }]\n  });\n})();\n\nconst DEFAULT_TOOLBAR = [['bold', 'italic'], ['code', 'blockquote'], ['underline', 'strike'], ['ordered_list', 'bullet_list'], [{\n  heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n}], ['link', 'image'], ['text_color', 'background_color'], ['align_left', 'align_center', 'align_right', 'align_justify']];\nconst TOOLBAR_MINIMAL = [['bold', 'italic'], [{\n  heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n}], ['link', 'image'], ['text_color', 'background_color']];\nconst TOOLBAR_FULL = [['bold', 'italic'], ['code', 'blockquote'], ['underline', 'strike'], ['ordered_list', 'bullet_list'], [{\n  heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n}], ['link', 'image'], ['text_color', 'background_color'], ['align_left', 'align_center', 'align_right', 'align_justify'], ['horizontal_rule']];\nconst DEFAULT_COLOR_PRESETS = ['#b60205', '#d93f0b', '#fbca04', '#0e8a16', '#006b75', '#1d76db', '#0052cc', '#5319e7', '#e99695', '#f9d0c4', '#fef2c0', '#c2e0c6', '#bfdadc', '#c5def5', '#bfd4f2', '#d4c5f9'];\n\nclass MenuComponent {\n  constructor(menuService) {\n    this.menuService = menuService;\n    this.toolbar = TOOLBAR_MINIMAL;\n    this.colorPresets = DEFAULT_COLOR_PRESETS;\n    this.disabled = false;\n    this.customMenuRef = null;\n    this.dropdownPlacement = 'bottom';\n    this.toggleCommands = ['bold', 'italic', 'underline', 'strike', 'code', 'blockquote', 'ordered_list', 'bullet_list', 'align_left', 'align_center', 'align_right', 'align_justify'];\n    this.insertCommands = ['horizontal_rule'];\n    this.iconContainerClass = ['NgxEditor__MenuItem', 'NgxEditor__MenuItem--Icon'];\n    this.dropdownContainerClass = ['NgxEditor__Dropdown'];\n    this.seperatorClass = ['NgxEditor__Seperator'];\n  }\n\n  get presets() {\n    const col = 8;\n    const colors = [];\n    this.colorPresets.forEach((color, index) => {\n      const row = Math.floor(index / col);\n\n      if (!colors[row]) {\n        colors.push([]);\n      }\n\n      colors[row].push(color);\n    });\n    return colors;\n  }\n\n  trackByIndex(index) {\n    return index;\n  }\n\n  isDropDown(item) {\n    if (item === null || item === void 0 ? void 0 : item.heading) {\n      return true;\n    }\n\n    return false;\n  }\n\n  getDropdownItems(item) {\n    return item;\n  }\n\n  ngOnInit() {\n    if (!this.editor) {\n      throw new Error('NgxEditor: Required editor instance');\n    }\n\n    this.menuService.editor = this.editor;\n  }\n\n}\n\nMenuComponent.ɵfac = function MenuComponent_Factory(t) {\n  return new (t || MenuComponent)(i0.ɵɵdirectiveInject(MenuService));\n};\n\nMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MenuComponent,\n  selectors: [[\"ngx-editor-menu\"]],\n  inputs: {\n    toolbar: \"toolbar\",\n    colorPresets: \"colorPresets\",\n    disabled: \"disabled\",\n    editor: \"editor\",\n    customMenuRef: \"customMenuRef\",\n    dropdownPlacement: \"dropdownPlacement\"\n  },\n  features: [i0.ɵɵProvidersFeature([MenuService])],\n  decls: 3,\n  vars: 7,\n  consts: [[1, \"NgxEditor__MenuBar\", 3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [3, \"toolbarItem\", \"class\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"type\", \"text_color\", 3, \"class\", \"presets\", 4, \"ngIf\"], [\"type\", \"background_color\", 3, \"class\", \"presets\", 4, \"ngIf\"], [3, \"toolbarItem\"], [3, \"class\", \"group\", \"items\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"group\", \"items\"], [\"type\", \"text_color\", 3, \"presets\"], [\"type\", \"background_color\", 3, \"presets\"], [3, \"ngTemplateOutlet\"]],\n  template: function MenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, MenuComponent_ng_container_1_Template, 2, 2, \"ng-container\", 1);\n      i0.ɵɵtemplate(2, MenuComponent_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c7, ctx.disabled, ctx.dropdownPlacement === \"top\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.toolbar)(\"ngForTrackBy\", ctx.trackByIndex);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.customMenuRef);\n    }\n  },\n  directives: [ToggleCommandComponent, InsertCommandComponent, LinkComponent, ImageComponent, DropdownComponent, ColorPickerComponent, i3.NgClass, i3.NgForOf, i3.NgIf, i3.NgTemplateOutlet],\n  pipes: [i3.KeyValuePipe],\n  styles: [\"\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-editor-menu',\n      providers: [MenuService],\n      template: \"<div class=\\\"NgxEditor__MenuBar\\\"\\n  [ngClass]=\\\"{'NgxEditor--Disabled': disabled, 'NgxEditor__MenuBar--Reverse': dropdownPlacement === 'top'}\\\">\\n\\n  <ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n    <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n\\n      <!-- toggle icons -->\\n      <ngx-toggle-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"toggleCommands.includes(item)\\\">\\n      </ngx-toggle-command>\\n\\n      <ngx-insert-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"insertCommands.includes(item)\\\">\\n      </ngx-insert-command>\\n\\n      <!-- link -->\\n      <ngx-link [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'link'\\\"></ngx-link>\\n\\n      <!-- image -->\\n      <ngx-image [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'image'\\\">\\n      </ngx-image>\\n\\n      <!-- dropdown -->\\n      <ng-container *ngIf=\\\"isDropDown(item)\\\">\\n        <ngx-dropdown *ngFor=\\\"let dropdownItem of getDropdownItems(item) | keyvalue; trackBy: trackByIndex\\\"\\n          [class]=\\\"dropdownContainerClass\\\" [group]=\\\"dropdownItem.key\\\" [items]=\\\"dropdownItem.value\\\">\\n        </ngx-dropdown>\\n      </ng-container>\\n\\n      <!-- text color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'text_color'\\\" type=\\\"text_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n      <!-- background color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'background_color'\\\" type=\\\"background_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n\\n      <!-- seperator -->\\n      <div [class]=\\\"seperatorClass\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n    </ng-container>\\n  </ng-container>\\n\\n  <!-- custom menu -->\\n  <ng-container *ngIf=\\\"customMenuRef\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"customMenuRef\\\"></ng-container>\\n  </ng-container>\\n\\n</div>\\n\",\n      styles: [\"\"]\n    }]\n  }], function () {\n    return [{\n      type: MenuService\n    }];\n  }, {\n    toolbar: [{\n      type: Input\n    }],\n    colorPresets: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    editor: [{\n      type: Input\n    }],\n    customMenuRef: [{\n      type: Input\n    }],\n    dropdownPlacement: [{\n      type: Input\n    }]\n  });\n})();\n\nclass BubbleComponent {\n  constructor(sanitizeHTML, ngxeService) {\n    this.sanitizeHTML = sanitizeHTML;\n    this.ngxeService = ngxeService;\n    this.execulableItems = [];\n    this.activeItems = [];\n    this.toolbar = [['bold', 'italic', 'underline', 'strike'], ['ordered_list', 'bullet_list', 'blockquote', 'code'], ['align_left', 'align_center', 'align_right', 'align_justify']];\n    this.toggleCommands = ['bold', 'italic', 'underline', 'strike', 'ordered_list', 'bullet_list', 'blockquote', 'code', 'align_left', 'align_center', 'align_right', 'align_justify'];\n  }\n\n  get view() {\n    return this.editor.view;\n  }\n\n  getIcon(name) {\n    const icon = Icon.get(name);\n    return this.sanitizeHTML.transform(icon);\n  }\n\n  getTitle(name) {\n    return this.ngxeService.locals.get(name);\n  }\n\n  trackByIndex(index) {\n    return index;\n  }\n\n  onClick(e, commandName) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const {\n      state,\n      dispatch\n    } = this.view;\n    const command = ToggleCommands[commandName];\n    command.toggle()(state, dispatch);\n  }\n\n  update(view) {\n    this.activeItems = [];\n    this.execulableItems = [];\n    const {\n      state\n    } = view;\n    this.toggleCommands.forEach(toolbarItem => {\n      const command = ToggleCommands[toolbarItem];\n      const isActive = command.isActive(state);\n\n      if (isActive) {\n        this.activeItems.push(toolbarItem);\n      }\n\n      const canExecute = command.canExecute(state);\n\n      if (canExecute) {\n        this.execulableItems.push(toolbarItem);\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.updateSubscription = this.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n\n}\n\nBubbleComponent.ɵfac = function BubbleComponent_Factory(t) {\n  return new (t || BubbleComponent)(i0.ɵɵdirectiveInject(SanitizeHtmlPipe), i0.ɵɵdirectiveInject(NgxEditorService));\n};\n\nBubbleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BubbleComponent,\n  selectors: [[\"ngx-bubble\"]],\n  inputs: {\n    editor: \"editor\"\n  },\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"NgxBubbleMenu__Icon\", 3, \"ngClass\", \"title\", \"innerHTML\", \"mousedown\", 4, \"ngIf\"], [\"class\", \"NgxBubbleMenu__Seperator\", 4, \"ngIf\"], [1, \"NgxBubbleMenu__Icon\", 3, \"ngClass\", \"title\", \"innerHTML\", \"mousedown\"], [1, \"NgxBubbleMenu__Seperator\"]],\n  template: function BubbleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BubbleComponent_ng_container_0_Template, 2, 2, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.toolbar)(\"ngForTrackBy\", ctx.trackByIndex);\n    }\n  },\n  directives: [i3.NgForOf, i3.NgIf, i3.NgClass],\n  styles: [\"*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]:before, *[_ngcontent-%COMP%]:after{box-sizing:border-box}[_nghost-%COMP%]{display:flex;flex-wrap:wrap;background-color:#000;color:#fff;padding:5px;border-radius:4px}.NgxBubbleMenu__Icon[_ngcontent-%COMP%]{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;display:flex;align-items:center;justify-content:center;color:#fff}.NgxBubbleMenu__Icon[_ngcontent-%COMP%]:hover{background-color:#636262}.NgxBubbleMenu__Icon[_ngcontent-%COMP%] + .NgxBubbleMenu__Icon[_ngcontent-%COMP%]{margin-left:5px}.NgxBubbleMenu__Icon.NgxBubbleMenu__Icon--Active[_ngcontent-%COMP%]{background-color:#fff;color:#000}.NgxBubbleMenu__Seperator[_ngcontent-%COMP%]{border-left:1px solid white;margin:0 5px}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-bubble',\n      template: \"<ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n  <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n    <div class=\\\"NgxBubbleMenu__Icon\\\" [ngClass]=\\\"{'NgxBubbleMenu__Icon--Active': this.activeItems.includes(item),\\n  'NgxEditor--Disabled': !this.execulableItems.includes(item)}\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n      *ngIf=\\\"toggleCommands.includes(item)\\\" [title]=\\\"getTitle(item)\\\" [innerHTML]=\\\"getIcon(item)\\\">\\n    </div>\\n    <div class=\\\"NgxBubbleMenu__Seperator\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n  </ng-container>\\n</ng-container>\\n\",\n      styles: [\"*,*:before,*:after{box-sizing:border-box}:host{display:flex;flex-wrap:wrap;background-color:#000;color:#fff;padding:5px;border-radius:4px}.NgxBubbleMenu__Icon{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;display:flex;align-items:center;justify-content:center;color:#fff}.NgxBubbleMenu__Icon:hover{background-color:#636262}.NgxBubbleMenu__Icon+.NgxBubbleMenu__Icon{margin-left:5px}.NgxBubbleMenu__Icon.NgxBubbleMenu__Icon--Active{background-color:#fff;color:#000}.NgxBubbleMenu__Seperator{border-left:1px solid white;margin:0 5px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: SanitizeHtmlPipe\n    }, {\n      type: NgxEditorService\n    }];\n  }, {\n    editor: [{\n      type: Input\n    }]\n  });\n})();\n\nclass FloatingMenuComponent {\n  constructor(el, sanitizeHTML) {\n    this.el = el;\n    this.sanitizeHTML = sanitizeHTML;\n    this.autoPlace = false;\n    this.posLeft = 0;\n    this.posTop = 0;\n    this.showMenu = false;\n    this.dragging = false;\n  }\n\n  get display() {\n    return {\n      visibility: this.showMenu ? 'visible' : 'hidden',\n      opacity: this.showMenu ? '1' : '0',\n      top: `${this.posTop}px`,\n      left: `${this.posLeft}px`\n    };\n  }\n\n  get view() {\n    return this.editor.view;\n  }\n\n  onMouseDown(e) {\n    const target = e.target;\n\n    if (this.el.nativeElement.contains(target) && target.nodeName !== 'INPUT') {\n      e.preventDefault();\n      return;\n    }\n\n    this.dragging = true;\n  }\n\n  onKeyDown(e) {\n    const target = e.target;\n\n    if (target.nodeName === 'INPUT') {\n      return;\n    }\n\n    this.dragging = true;\n    this.hide();\n  }\n\n  onMouseUp(e) {\n    const target = e.target;\n\n    if (this.el.nativeElement.contains(target) || target.nodeName === 'INPUT') {\n      e.preventDefault();\n      return;\n    }\n\n    this.dragging = false;\n    this.useUpdate();\n  }\n\n  onKeyUp(e) {\n    const target = e.target;\n\n    if (target.nodeName === 'INPUT') {\n      return;\n    }\n\n    this.dragging = false;\n    this.useUpdate();\n  }\n\n  useUpdate() {\n    if (!this.view) {\n      return;\n    }\n\n    this.update(this.view);\n  }\n\n  hide() {\n    this.showMenu = false;\n  }\n\n  show() {\n    this.showMenu = true;\n  }\n\n  calculateBubblePosition(view) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        state: {\n          selection\n        }\n      } = view;\n      const {\n        from,\n        to\n      } = selection;\n      const start = view.coordsAtPos(from);\n      const end = view.coordsAtPos(to);\n      const selectionElement = {\n        getBoundingClientRect() {\n          if (selection instanceof NodeSelection) {\n            const node = view.nodeDOM(from);\n            return node.getBoundingClientRect();\n          }\n\n          const {\n            top,\n            left\n          } = start;\n          const {\n            bottom,\n            right\n          } = end;\n          return {\n            x: left,\n            y: top,\n            top,\n            bottom,\n            left,\n            right,\n            width: right - left,\n            height: bottom - top\n          };\n        }\n\n      }; // the floating bubble itself\n\n      const bubbleEl = this.el.nativeElement;\n      const {\n        x: left,\n        y: top\n      } = yield computePosition(selectionElement, bubbleEl, {\n        placement: 'top',\n        middleware: [offset(5), this.autoPlace && autoPlacement({\n          boundary: view.dom,\n          padding: 5,\n          allowedPlacements: ['top', 'bottom']\n        }), {\n          // prevent overflow on right and left side\n          // since only top and bottom placements are allowed\n          // autoplacement can't handle overflows on the right and left\n          name: 'overflowMiddleware',\n\n          fn(middlewareArgs) {\n            return __awaiter(this, void 0, void 0, function* () {\n              const overflow = yield detectOverflow(middlewareArgs, {\n                boundary: view.dom,\n                padding: 5\n              }); // overflows left\n\n              if (overflow.left > 0) {\n                return {\n                  x: middlewareArgs.x + overflow.left\n                };\n              } // overflows right\n\n\n              if (overflow.right > 0) {\n                return {\n                  x: middlewareArgs.x - overflow.right\n                };\n              }\n\n              return {};\n            });\n          }\n\n        }].filter(Boolean)\n      });\n      return {\n        left,\n        top\n      };\n    });\n  }\n\n  canShowMenu(view) {\n    const {\n      state\n    } = view;\n    const {\n      selection\n    } = state;\n    const {\n      empty\n    } = selection;\n\n    if (selection instanceof NodeSelection) {\n      if (selection.node.type.name === 'image') {\n        return false;\n      }\n    }\n\n    const hasFocus = this.view.hasFocus();\n\n    if (!hasFocus || empty || this.dragging) {\n      this.hide();\n      return false;\n    }\n\n    return true;\n  }\n\n  update(view) {\n    const canShowMenu = this.canShowMenu(view);\n\n    if (!canShowMenu) {\n      this.hide();\n      return;\n    }\n\n    this.calculateBubblePosition(this.view).then(({\n      top,\n      left\n    }) => {\n      if (!this.canShowMenu) {\n        this.hide();\n        return;\n      }\n\n      this.posLeft = left;\n      this.posTop = top;\n      this.show();\n    });\n  }\n\n  ngOnInit() {\n    if (!this.editor) {\n      throw new Error('NgxEditor: Required editor instance');\n    }\n\n    this.updateSubscription = this.editor.update.subscribe(view => {\n      this.update(view);\n    });\n    this.resizeSubscription = fromEvent(window, 'resize').pipe(throttleTime(500, asyncScheduler, {\n      leading: true,\n      trailing: true\n    })).subscribe(() => {\n      this.useUpdate();\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n    this.resizeSubscription.unsubscribe();\n  }\n\n}\n\nFloatingMenuComponent.ɵfac = function FloatingMenuComponent_Factory(t) {\n  return new (t || FloatingMenuComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(SanitizeHtmlPipe));\n};\n\nFloatingMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FloatingMenuComponent,\n  selectors: [[\"ngx-editor-floating-menu\"]],\n  hostVars: 2,\n  hostBindings: function FloatingMenuComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function FloatingMenuComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onMouseDown($event);\n      }, false, i0.ɵɵresolveDocument)(\"keydown\", function FloatingMenuComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      }, false, i0.ɵɵresolveDocument)(\"mouseup\", function FloatingMenuComponent_mouseup_HostBindingHandler($event) {\n        return ctx.onMouseUp($event);\n      }, false, i0.ɵɵresolveDocument)(\"keyup\", function FloatingMenuComponent_keyup_HostBindingHandler($event) {\n        return ctx.onKeyUp($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleMap(ctx.display);\n    }\n  },\n  inputs: {\n    editor: \"editor\",\n    autoPlace: \"autoPlace\"\n  },\n  ngContentSelectors: _c3,\n  decls: 4,\n  vars: 1,\n  consts: [[\"ref\", \"\"], [4, \"ngIf\"], [3, \"editor\"]],\n  template: function FloatingMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", null, 0);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, FloatingMenuComponent_ng_container_3_Template, 2, 1, \"ng-container\", 1);\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", _r0.children.length === 0);\n    }\n  },\n  directives: [BubbleComponent, i3.NgIf],\n  styles: [\"*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]:before, *[_ngcontent-%COMP%]:after{box-sizing:border-box}[_nghost-%COMP%]{position:absolute;z-index:20;margin-bottom:5px;visibility:hidden;opacity:0}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FloatingMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-editor-floating-menu',\n      template: \"<div #ref>\\n  <ng-content></ng-content>\\n</div>\\n<ng-container *ngIf=\\\"ref.children.length === 0\\\">\\n  <ngx-bubble [editor]=\\\"editor\\\"></ngx-bubble>\\n</ng-container>\\n\",\n      styles: [\"*,*:before,*:after{box-sizing:border-box}:host{position:absolute;z-index:20;margin-bottom:5px;visibility:hidden;opacity:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: SanitizeHtmlPipe\n    }];\n  }, {\n    display: [{\n      type: HostBinding,\n      args: ['style']\n    }],\n    editor: [{\n      type: Input\n    }],\n    autoPlace: [{\n      type: Input\n    }],\n    onMouseDown: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event']]\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['document:keydown', ['$event']]\n    }],\n    onMouseUp: [{\n      type: HostListener,\n      args: ['document:mouseup', ['$event']]\n    }],\n    onKeyUp: [{\n      type: HostListener,\n      args: ['document:keyup', ['$event']]\n    }]\n  });\n})();\n\nclass MenuModule {}\n\nMenuModule.ɵfac = function MenuModule_Factory(t) {\n  return new (t || MenuModule)();\n};\n\nMenuModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MenuModule\n});\nMenuModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [SanitizeHtmlPipe],\n  imports: [[CommonModule, ReactiveFormsModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MenuModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ReactiveFormsModule],\n      declarations: [// pipes\n      SanitizeHtmlPipe, // components\n      MenuComponent, ToggleCommandComponent, InsertCommandComponent, LinkComponent, DropdownComponent, ImageComponent, ColorPickerComponent, FloatingMenuComponent, BubbleComponent],\n      providers: [SanitizeHtmlPipe],\n      exports: [MenuComponent, FloatingMenuComponent]\n    }]\n  }], null, null);\n})();\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');\n\nclass NgxEditorModule {\n  static forRoot(config) {\n    return {\n      ngModule: NgxEditorModule,\n      providers: [{\n        provide: NGX_EDITOR_CONFIG_TOKEN,\n        useValue: config\n      }, {\n        provide: NgxEditorServiceConfig,\n        useFactory: provideMyServiceOptions,\n        deps: [NGX_EDITOR_CONFIG_TOKEN]\n      }]\n    };\n  }\n\n  static forChild(config) {\n    return {\n      ngModule: NgxEditorModule,\n      providers: [{\n        provide: NGX_EDITOR_CONFIG_TOKEN,\n        useValue: config\n      }, {\n        provide: NgxEditorServiceConfig,\n        useFactory: provideMyServiceOptions,\n        deps: [NGX_EDITOR_CONFIG_TOKEN]\n      }, NgxEditorService]\n    };\n  }\n\n}\n\nNgxEditorModule.ɵfac = function NgxEditorModule_Factory(t) {\n  return new (t || NgxEditorModule)();\n};\n\nNgxEditorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxEditorModule\n});\nNgxEditorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [],\n  imports: [[CommonModule, MenuModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxEditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MenuModule],\n      providers: [],\n      declarations: [NgxEditorComponent, ImageViewComponent],\n      exports: [NgxEditorComponent, MenuComponent, FloatingMenuComponent]\n    }]\n  }], null, null);\n})();\n\nconst isEmptyInputValue = value => {\n  // we don't check for string here so it also works with arrays\n  return value === null || value.length === 0;\n};\n\nconst hasValidLength = value => {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  return value !== null && typeof value.length === 'number';\n};\n\nconst isDocEmpty = doc => {\n  if (!doc) {\n    return true;\n  }\n\n  const {\n    childCount,\n    firstChild\n  } = doc;\n  return Boolean(childCount === 1 && (firstChild === null || firstChild === void 0 ? void 0 : firstChild.isTextblock) && firstChild.content.size === 0);\n}; // @dynamic\n\n\nclass Validators {\n  static required(userSchema) {\n    return control => {\n      const schema$1 = userSchema || schema;\n      const doc = parseContent(control.value, schema$1);\n      const isEmpty = isDocEmpty(doc);\n\n      if (!isEmpty) {\n        return null;\n      }\n\n      return {\n        required: true\n      };\n    };\n  }\n\n  static maxLength(maxLength, userSchema) {\n    return control => {\n      const schema$1 = userSchema || schema;\n      const doc = parseContent(control.value, schema$1);\n      const value = doc.textContent;\n\n      if (hasValidLength(value) && value.length > maxLength) {\n        return {\n          maxlength: {\n            requiredLength: maxLength,\n            actualLength: value.length\n          }\n        };\n      }\n\n      return null;\n    };\n  }\n\n  static minLength(minLength, userSchema) {\n    return control => {\n      const schema$1 = userSchema || schema;\n      const doc = parseContent(control.value, schema$1);\n      const value = doc.textContent;\n\n      if (isEmptyInputValue(value) || !hasValidLength(value)) {\n        // don't validate empty values to allow optional controls\n        // don't validate values without `length` property\n        return null;\n      }\n\n      if (value.length < minLength) {\n        return {\n          minlength: {\n            requiredLength: minLength,\n            actualLength: value.length\n          }\n        };\n      }\n\n      return null;\n    };\n  }\n\n}\n\nconst execMark = (name, toggle = false) => {\n  return (state, dispatch) => {\n    const command = new Mark(name);\n\n    if (!toggle) {\n      return command.apply()(state, dispatch);\n    }\n\n    return command.toggle()(state, dispatch);\n  };\n};\n\nclass EditorCommands {\n  constructor(view) {\n    this.applyTrx = tr => {\n      this.state = this.state.apply(tr !== null && tr !== void 0 ? tr : this.tr);\n      this.tr = this.state.tr;\n      this.tr.setMeta('APPLIED_TRX', true);\n    };\n\n    this.dispatch = tr => {\n      this.applyTrx(tr);\n    };\n\n    if (!view) {\n      throw Error('NgxEditor: Required view to initialize commands.');\n    }\n\n    this.view = view;\n    this.state = view.state;\n    this.tr = this.view.state.tr;\n  }\n\n  exec() {\n    // No changes applied\n    if (!this.tr.getMeta('APPLIED_TRX')) {\n      return false;\n    }\n\n    const forceEmit = !this.view.state.doc.eq(this.state.doc);\n    this.view.updateState(this.state);\n    const tr = this.tr.setMeta('FORCE_EMIT', forceEmit);\n    this.view.dispatch(tr);\n    return true;\n  }\n\n  focus() {\n    this.view.focus();\n    return this;\n  }\n\n  scrollIntoView() {\n    this.tr.scrollIntoView();\n    this.applyTrx();\n    return this;\n  }\n\n  insertText(text) {\n    this.tr.insertText(text);\n    this.applyTrx();\n    return this;\n  }\n\n  insertNewLine() {\n    const newLineCommands = [newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock];\n    chainCommands(...newLineCommands)(this.state, this.dispatch);\n    return this;\n  }\n\n  applyMark(name) {\n    execMark(name, false)(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleMark(name) {\n    execMark(name, true)(this.state, this.dispatch);\n    return this;\n  }\n\n  bold() {\n    execMark('strong')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleBold() {\n    execMark('strong', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  italics() {\n    execMark('em')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleItalics() {\n    execMark('em', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  underline() {\n    execMark('u')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleUnderline() {\n    execMark('u', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  strike() {\n    execMark('s')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleStrike() {\n    execMark('s', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  code() {\n    execMark('code')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleCode() {\n    execMark('code', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleOrderedList() {\n    const command = new ListItem(false);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleBulletList() {\n    const command = new ListItem(true);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleHeading(level) {\n    const command = new Heading(level);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n\n  insertLink(text, attrs) {\n    const command = new Link$1();\n    command.insert(text, attrs)(this.state, this.dispatch);\n    return this;\n  }\n\n  updateLink(attrs) {\n    const command = new Link$1();\n    command.update(attrs)(this.state, this.dispatch);\n    return this;\n  }\n\n  insertImage(src, attrs = {}) {\n    const command = new Image$1();\n    command.insert(src, attrs)(this.state, this.dispatch);\n    return this;\n  }\n\n  textColor(color) {\n    const command = new TextColor$1('text_color');\n    command.apply({\n      color\n    })(this.state, this.dispatch);\n    return this;\n  }\n\n  backgroundColor(color) {\n    const command = new TextColor$1('text_background_color');\n    command.apply({\n      backgroundColor: color\n    })(this.state, this.dispatch);\n    return this;\n  }\n\n  removeTextColor() {\n    const command = new TextColor$1('text_color');\n    command.remove()(this.state, this.dispatch);\n    return this;\n  }\n\n  removeBackgroundColor() {\n    const command = new TextColor$1('text_background_color');\n    command.remove()(this.state, this.dispatch);\n    return this;\n  }\n\n  align(p) {\n    const command = new TextAlign(p);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n\n  insertHTML(html) {\n    const {\n      selection,\n      schema,\n      tr\n    } = this.state;\n    const {\n      from,\n      to\n    } = selection;\n    const element = document.createElement('div');\n    element.innerHTML = html.trim();\n    const slice = DOMParser.fromSchema(schema).parseSlice(element);\n    const transaction = tr.replaceRange(from, to, slice);\n    this.applyTrx(transaction);\n    return this;\n  }\n\n}\n\nconst isMacOs = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false; // Input rules ref: https://github.com/ProseMirror/prosemirror-example-setup/\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\n\nconst blockQuoteRule = nodeType => {\n  return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n}; // : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\n\n\nconst orderedListRule = nodeType => {\n  return wrappingInputRule(/^(?:\\d+)\\.\\s$/, nodeType, match => ({\n    order: Number(match[1])\n  }), (match, node) => node.childCount + node.attrs['order'] === Number(match[1]));\n}; // : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\n\n\nconst bulletListRule = nodeType => {\n  return wrappingInputRule(/^\\s*(?:[-+*])\\s$/, nodeType);\n}; // : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\n\n\nconst codeBlockRule = nodeType => {\n  return textblockTypeInputRule(/^```$/, nodeType);\n}; // : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\n\n\nconst headingRule = (nodeType, maxLevel) => {\n  return textblockTypeInputRule(new RegExp(`^(#{1,${maxLevel}})\\\\s$`), nodeType, match => ({\n    level: match[1].length\n  }));\n}; // : (MarkType) → InputRule\n// Wraps matching text with bold mark\n\n\nconst boldRule = markType => {\n  return markInputRule(/(?:^|\\s)(?:(?:\\*\\*|__)(?:(?:[^*_]+))(?:\\*\\*|__))$/, markType);\n}; // : (MarkType) → InputRule\n// Wraps matching text with em mark\n\n\nconst emRule = markType => {\n  return markInputRule(/(?:^|\\s)(?:(?:\\*|_)(?:(?:[^*_]+))(?:\\*|_))$/, markType);\n}; // : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\n\n\nconst buildInputRules = schema => {\n  const rules = smartQuotes.concat(ellipsis, emDash);\n  rules.push(boldRule(schema.marks['strong']));\n  rules.push(emRule(schema.marks['em']));\n  rules.push(blockQuoteRule(schema.nodes['blockquote']));\n  rules.push(orderedListRule(schema.nodes['ordered_list']));\n  rules.push(bulletListRule(schema.nodes['bullet_list']));\n  rules.push(codeBlockRule(schema.nodes['code_block']));\n  rules.push(headingRule(schema.nodes['heading'], 6));\n  return inputRules({\n    rules\n  });\n};\n\nconst getKeyboardShortcuts = (schema, options) => {\n  const historyKeyMap = {};\n  historyKeyMap['Mod-z'] = undo;\n\n  if (isMacOs) {\n    historyKeyMap['Shift-Mod-z'] = redo;\n  } else {\n    historyKeyMap['Mod-y'] = redo;\n  }\n\n  const plugins = [keymap({\n    'Mod-b': toggleMark(schema.marks['strong']),\n    'Mod-i': toggleMark(schema.marks['em']),\n    'Mod-u': toggleMark(schema.marks['u']),\n    'Mod-`': toggleMark(schema.marks['code'])\n  }), keymap({\n    'Enter': splitListItem(schema.nodes['list_item']),\n    'Shift-Enter': chainCommands(exitCode, (state, dispatch) => {\n      const {\n        tr\n      } = state;\n      const br = schema.nodes['hard_break'];\n      dispatch(tr.replaceSelectionWith(br.create()).scrollIntoView());\n      return true;\n    }),\n    'Mod-[': liftListItem(schema.nodes['list_item']),\n    'Mod-]': sinkListItem(schema.nodes['list_item']),\n    'Tab': sinkListItem(schema.nodes['list_item'])\n  }), keymap(baseKeymap)];\n\n  if (options.history) {\n    plugins.push(keymap(historyKeyMap));\n  }\n\n  return plugins;\n};\n\nconst getDefaultPlugins = (schema, options) => {\n  const plugins = [];\n\n  if (options.keyboardShortcuts) {\n    plugins.push(...getKeyboardShortcuts(schema, {\n      history: options.history\n    }));\n  }\n\n  if (options.history) {\n    plugins.push(history());\n  }\n\n  if (options.inputRules) {\n    plugins.push(buildInputRules(schema));\n  }\n\n  return plugins;\n};\n\nconst defaultFeatures = {\n  linkOnPaste: true,\n  resizeImage: true\n};\nconst DEFAULT_OPTIONS = {\n  content: null,\n  history: true,\n  keyboardShortcuts: true,\n  inputRules: true,\n  schema: schema,\n  plugins: [],\n  nodeViews: {},\n  attributes: {},\n  features: defaultFeatures\n};\n\nclass Editor {\n  constructor(options = DEFAULT_OPTIONS) {\n    this.valueChangesSubject = new Subject();\n    this.updateSubject = new Subject();\n    this.options = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n    this.createEditor();\n  }\n\n  get valueChanges() {\n    return this.valueChangesSubject.asObservable();\n  }\n\n  get update() {\n    return this.updateSubject.asObservable();\n  }\n\n  get schema() {\n    return this.options.schema || schema;\n  }\n\n  get commands() {\n    return new EditorCommands(this.view);\n  }\n\n  get features() {\n    return Object.assign(Object.assign({}, defaultFeatures), this.options.features);\n  }\n\n  handleTransactions(tr) {\n    const state = this.view.state.apply(tr);\n    this.view.updateState(state);\n    this.updateSubject.next(this.view);\n\n    if (!tr.docChanged && !tr.getMeta('FORCE_EMIT')) {\n      return;\n    }\n\n    const json = state.doc.toJSON();\n    this.valueChangesSubject.next(json);\n  }\n\n  createEditor() {\n    var _a, _b;\n\n    const {\n      options,\n      schema\n    } = this;\n    const {\n      content = null,\n      nodeViews\n    } = options;\n    const {\n      history = true,\n      keyboardShortcuts = true,\n      inputRules = true\n    } = options;\n    const doc = parseContent(content, schema);\n    const plugins = (_a = options.plugins) !== null && _a !== void 0 ? _a : [];\n    const attributes = (_b = options.attributes) !== null && _b !== void 0 ? _b : {};\n    const defaultPlugins = getDefaultPlugins(schema, {\n      history,\n      keyboardShortcuts,\n      inputRules\n    });\n    this.view = new EditorView(null, {\n      state: EditorState.create({\n        doc,\n        schema,\n        plugins: [...defaultPlugins, ...plugins]\n      }),\n      nodeViews,\n      dispatchTransaction: this.handleTransactions.bind(this),\n      attributes\n    });\n  }\n\n  setContent(content) {\n    if (isNil(content)) {\n      return;\n    }\n\n    const {\n      state\n    } = this.view;\n    const {\n      tr,\n      doc\n    } = state;\n    const newDoc = parseContent(content, this.schema);\n    tr.replaceWith(0, state.doc.content.size, newDoc); // don't emit if both content is same\n\n    if (doc.eq(tr.doc)) {\n      return;\n    }\n\n    if (!tr.docChanged) {\n      return;\n    }\n\n    this.view.dispatch(tr);\n  }\n\n  registerPlugin(plugin) {\n    const {\n      state\n    } = this.view;\n    const plugins = [...state.plugins, plugin];\n    const newState = state.reconfigure({\n      plugins\n    });\n    this.view.updateState(newState);\n  }\n\n  destroy() {\n    this.view.destroy();\n  }\n\n}\n/*\n * Public API Surface of ngx-editor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DEFAULT_TOOLBAR, Editor, FloatingMenuComponent, MenuComponent, NgxEditorComponent, NgxEditorModule, TOOLBAR_FULL, TOOLBAR_MINIMAL, Validators, emptyDoc, getKeyboardShortcuts, parseContent, toDoc, toHTML };","map":{"version":3,"sources":["D:/repos/OtherRepositories/MyNotebook/Frontend/node_modules/ngx-editor/fesm2015/ngx-editor.mjs"],"names":["i0","EventEmitter","Component","Input","Output","ViewChild","ComponentFactoryResolver","ApplicationRef","forwardRef","ViewEncapsulation","Injectable","Optional","Pipe","HostBinding","HostListener","NgModule","InjectionToken","i4","NG_VALUE_ACCESSOR","FormGroup","FormControl","Validators","Validators$1","ReactiveFormsModule","Plugin","PluginKey","NodeSelection","EditorState","DecorationSet","Decoration","EditorView","i3","CommonModule","Fragment","Slice","DOMSerializer","DOMParser","schema","marks","nodes","Subject","fromEvent","asyncScheduler","toggleMark","lift","wrapIn","setBlockType","newlineInCode","createParagraphNear","liftEmptyBlock","splitBlock","chainCommands","exitCode","baseKeymap","applyMark","removeLink","removeMark","isMarkActive","isNodeActive","canInsert","getSelectionNodes","getSelectionMarks","markInputRule","liftListItem","wrapInList","splitListItem","sinkListItem","i1","__awaiter","throttleTime","computePosition","offset","autoPlacement","detectOverflow","isNil","keymap","undo","redo","history","wrappingInputRule","textblockTypeInputRule","smartQuotes","ellipsis","emDash","inputRules","editablePlugin","editable","key","state","init","apply","tr","previousVal","_a","getMeta","props","getState","attributes","isEnabled","class","PLACEHOLDER_CLASSNAME","placeholderPlugin","text","placeholder","decorations","doc","textContent","childCount","empty","decorate","node","pos","type","isBlock","length","from","to","nodeSize","placeholderNode","attrs","push","descendants","create","attributesPlugin","focusPlugin","cb","handleDOMEvents","focus","blurPlugin","blur","ImageViewComponent","constructor","alt","title","outerWidth","selected","imageResize","startResizing","e","direction","preventDefault","resizeImage","evt","startX","pageX","startWidth","imgEl","nativeElement","clientWidth","isLeftResize","width","window","getComputedStyle","view","dom","editorWidth","parseInt","onMouseMove","currentX","diffInPx","computedWidth","onMouseUp","document","removeEventListener","emit","addEventListener","ɵfac","ɵcmp","NgClass","NgIf","args","selector","template","styles","src","static","ImageRezieView","getPos","injector","updating","handleResize","dispatch","transaction","setNodeMarkup","undefined","Object","assign","imageComponentRef","instance","resolvedPos","resolve","newSelection","setSelection","componentFactoryResolver","get","applicationRef","factory","resolveComponentFactory","attachView","hostView","setNodeAttributes","location","resizeSubscription","subscribe","computeChanges","prevAttrs","newAttrs","JSON","stringify","update","changed","ignoreMutation","selectNode","deselectNode","destroy","unsubscribe","detachView","imageResizePlugin","nodeViews","image","HTTP_LINK_REGEX","linkify","fragment","linkified","forEach","child","isText","match","exec","start","index","end","link","cut","urlText","slice","mark","href","addToSet","copy","content","fromArray","linkifyPlugin","transformPasted","openStart","openEnd","emptyDoc","toHTML","json","inputSchema","schema$1","contentNode","nodeFromJSON","html","fromSchema","serializeFragment","div","createElement","appendChild","innerHTML","toDoc","el","parse","toJSON","parseContent","value","docJson","NgxEditorComponent","renderer","elementRef","focusOut","focusIn","subscriptions","onChange","onTouched","writeValue","outputFormat","editor","setContent","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","setMeta","setProperty","handleChange","jsonDoc","setPlaceholder","registerPlugins","registerPlugin","features","linkOnPaste","ngOnInit","Error","ngxEditor","contentChangeSubscription","valueChanges","ngOnChanges","changes","isFirstChange","currentValue","ngOnDestroy","subscription","Renderer2","Injector","ElementRef","provide","useExisting","multi","providers","encapsulation","None","MenuService","customMenuRefChange","setCustomMenuRef","c","next","ɵprov","providedIn","bold","italic","code","underline","strike","orderedList","bulletList","quote","unlink","alignLeft","alignCenter","alignRight","alignJustify","textColor","colorFill","horizontalRule","DEFAULT_ICON_HEIGHT","DEFAULT_ICON_WIDTH","DEFAULT_ICON_FILL","icons","ordered_list","bullet_list","blockquote","align_left","align_center","align_right","align_justify","text_color","color_fill","horizontal_rule","Icon","name","fill","path","Mark","toggle","isActive","canExecute","Blockqote","HorizontalRule","insert","replaceSelectionWith","scrollIntoView","ListItem","isBulletList","getType","list_item","Heading","level","heading","selection","nodePos","$from","before","nodeAt","paragraph","nodesInSelection","supportedNodes","filter","includes","acitveNode","find","Boolean","TextAlign","align","applicable","nodesBetween","nodeType","docChanged","active","defaultOptions","strict","Link$1","_b","linkAttrs","target","options","remove","testAttrs","Image$1","imageAttrs","createAndFill","anchor","$anchor","nodeBefore","TextColor$1","attrName","isAtom","isLeaf","getActiveColors","colors","map","color","backgroundColor","STRONG","EM","CODE","UNDERLINE","STRIKE","BLOCKQUOTE","HORIZONTAL_RULE","UL","OL","H1","H2","H3","H4","H5","H6","ALIGN_LEFT","ALIGN_CENTER","ALIGN_RIGHT","ALIGN_JUSTIFY","LINK","IMAGE","TEXT_COLOR","TEXT_BACKGROUND_COLOR","ToggleCommands","h1","h2","h3","h4","h5","h6","InsertCommands","Link","Image","TextColor","TextBackgroundColor","defaults","background_color","insertLink","insertImage","url","openInNewTab","altText","Locals","newLocals","locals","NgxEditorServiceConfig","NgxEditorService","config","decorators","provideMyServiceOptions","SanitizeHtmlPipe","sanitizer","transform","bypassSecurityTrustHtml","DomSanitizer","ɵpipe","ToggleCommandComponent","ngxeService","menuService","disabled","command","toolbarItem","button","editorView","getTitle","updateSubscription","InsertCommandComponent","LinkComponent","showPopup","form","required","pattern","setText","selectedText","textBetween","patchValue","disable","valid","icon","onDocumentClick","contains","hideForm","getLabel","reset","enable","onMouseDown","getRawValue","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","DefaultValueAccessor","NgControlStatus","FormControlName","CheckboxControlValueAccessor","ImageComponent","fillForm","setValue","DropdownComponent","isDropdownOpen","disabledItems","activeItems","items","item","activeItem","isSelected","isDropdownDisabled","getName","toggleDropdown","trackByIndex","onClick","NgForOf","group","ColorPickerComponent","activeColors","getContrastYIQ","hexcolor","replace","r","substring","g","b","yiq","hidePopup","togglePopup","onColorSelect","hasFocus","NgStyle","presets","DEFAULT_TOOLBAR","TOOLBAR_MINIMAL","TOOLBAR_FULL","DEFAULT_COLOR_PRESETS","MenuComponent","toolbar","colorPresets","customMenuRef","dropdownPlacement","toggleCommands","insertCommands","iconContainerClass","dropdownContainerClass","seperatorClass","col","row","Math","floor","isDropDown","getDropdownItems","NgTemplateOutlet","KeyValuePipe","BubbleComponent","sanitizeHTML","execulableItems","getIcon","commandName","stopPropagation","FloatingMenuComponent","autoPlace","posLeft","posTop","showMenu","dragging","display","visibility","opacity","top","left","nodeName","onKeyDown","hide","useUpdate","onKeyUp","show","calculateBubblePosition","coordsAtPos","selectionElement","getBoundingClientRect","nodeDOM","bottom","right","x","y","height","bubbleEl","placement","middleware","boundary","padding","allowedPlacements","middlewareArgs","overflow","canShowMenu","then","pipe","leading","trailing","MenuModule","ɵmod","ɵinj","imports","declarations","exports","NGX_EDITOR_CONFIG_TOKEN","NgxEditorModule","forRoot","ngModule","useValue","useFactory","deps","forChild","isEmptyInputValue","hasValidLength","isDocEmpty","firstChild","isTextblock","size","userSchema","control","isEmpty","maxLength","maxlength","requiredLength","actualLength","minLength","minlength","execMark","EditorCommands","applyTrx","forceEmit","eq","updateState","insertText","insertNewLine","newLineCommands","toggleBold","italics","toggleItalics","toggleUnderline","toggleStrike","toggleCode","toggleOrderedList","toggleBulletList","toggleHeading","updateLink","removeTextColor","removeBackgroundColor","p","insertHTML","element","trim","parseSlice","replaceRange","isMacOs","navigator","test","platform","blockQuoteRule","orderedListRule","order","Number","bulletListRule","codeBlockRule","headingRule","maxLevel","RegExp","boldRule","markType","emRule","buildInputRules","rules","concat","getKeyboardShortcuts","historyKeyMap","plugins","br","getDefaultPlugins","keyboardShortcuts","defaultFeatures","DEFAULT_OPTIONS","Editor","valueChangesSubject","updateSubject","createEditor","asObservable","commands","handleTransactions","defaultPlugins","dispatchTransaction","bind","newDoc","replaceWith","plugin","newState","reconfigure"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewChild, ComponentFactoryResolver, ApplicationRef, forwardRef, ViewEncapsulation, Injectable, Optional, Pipe, HostBinding, HostListener, NgModule, InjectionToken } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormGroup, FormControl, Validators as Validators$1, ReactiveFormsModule } from '@angular/forms';\nimport { Plugin, PluginKey, NodeSelection, EditorState } from 'prosemirror-state';\nimport { DecorationSet, Decoration, EditorView } from 'prosemirror-view';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Fragment, Slice, DOMSerializer, DOMParser } from 'prosemirror-model';\nimport { schema } from 'ngx-editor/schema';\nexport { marks, nodes, schema } from 'ngx-editor/schema';\nimport { Subject, fromEvent, asyncScheduler } from 'rxjs';\nimport { toggleMark, lift, wrapIn, setBlockType, newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock, chainCommands, exitCode, baseKeymap } from 'prosemirror-commands';\nimport { applyMark, removeLink, removeMark } from 'ngx-editor/commands';\nimport { isMarkActive, isNodeActive, canInsert, getSelectionNodes, getSelectionMarks, markInputRule } from 'ngx-editor/helpers';\nimport { liftListItem, wrapInList, splitListItem, sinkListItem } from 'prosemirror-schema-list';\nimport * as i1 from '@angular/platform-browser';\nimport { __awaiter } from 'tslib';\nimport { throttleTime } from 'rxjs/operators';\nimport { computePosition, offset, autoPlacement, detectOverflow } from '@floating-ui/dom';\nimport { isNil } from 'ngx-editor/utils';\nimport { keymap } from 'prosemirror-keymap';\nimport { undo, redo, history } from 'prosemirror-history';\nimport { wrappingInputRule, textblockTypeInputRule, smartQuotes, ellipsis, emDash, inputRules } from 'prosemirror-inputrules';\n\nconst editablePlugin = (editable = true) => {\n    return new Plugin({\n        key: new PluginKey('editable'),\n        state: {\n            init() {\n                return editable;\n            },\n            apply(tr, previousVal) {\n                var _a;\n                return (_a = tr.getMeta('UPDATE_EDITABLE')) !== null && _a !== void 0 ? _a : previousVal;\n            },\n        },\n        props: {\n            editable(state) {\n                return this.getState(state);\n            },\n            attributes(state) {\n                const isEnabled = this.getState(state);\n                if (isEnabled) {\n                    return null;\n                }\n                return {\n                    class: 'NgxEditor__Content--Disabled',\n                };\n            },\n        },\n    });\n};\n\nconst PLACEHOLDER_CLASSNAME = 'NgxEditor__Placeholder';\nconst placeholderPlugin = (text) => {\n    return new Plugin({\n        key: new PluginKey('placeholder'),\n        state: {\n            init() {\n                return text !== null && text !== void 0 ? text : '';\n            },\n            apply(tr, previousVal) {\n                var _a;\n                const placeholder = (_a = tr.getMeta('UPDATE_PLACEHOLDER')) !== null && _a !== void 0 ? _a : previousVal;\n                return placeholder;\n            },\n        },\n        props: {\n            decorations(state) {\n                const { doc } = state;\n                const { textContent, childCount } = doc;\n                const placeholder = this.getState(state);\n                if (!placeholder || childCount > 1) {\n                    return DecorationSet.empty;\n                }\n                const decorations = [];\n                const decorate = (node, pos) => {\n                    var _a;\n                    if (node.type.isBlock && node.childCount === 0 && textContent.length === 0) {\n                        const from = pos;\n                        const to = pos + node.nodeSize;\n                        const placeholderNode = Decoration.node(from, to, {\n                            'class': PLACEHOLDER_CLASSNAME,\n                            'data-placeholder': placeholder,\n                            'data-align': (_a = node.attrs['align']) !== null && _a !== void 0 ? _a : null,\n                        });\n                        decorations.push(placeholderNode);\n                    }\n                    return false;\n                };\n                doc.descendants(decorate);\n                return DecorationSet.create(doc, decorations);\n            },\n        },\n    });\n};\n\nconst attributesPlugin = (attributes = {}) => {\n    return new Plugin({\n        key: new PluginKey('attributes'),\n        props: {\n            attributes,\n        },\n    });\n};\n\nconst focusPlugin = (cb) => {\n    return new Plugin({\n        key: new PluginKey('focus'),\n        props: {\n            handleDOMEvents: {\n                focus: () => {\n                    cb();\n                    return false;\n                },\n            },\n        },\n    });\n};\n\nconst blurPlugin = (cb) => {\n    return new Plugin({\n        key: new PluginKey('blur'),\n        props: {\n            handleDOMEvents: {\n                blur: () => {\n                    cb();\n                    return false;\n                },\n            },\n        },\n    });\n};\n\nclass ImageViewComponent {\n    constructor() {\n        this.alt = '';\n        this.title = '';\n        this.outerWidth = '';\n        this.selected = false;\n        this.imageResize = new EventEmitter();\n    }\n    startResizing(e, direction) {\n        e.preventDefault();\n        this.resizeImage(e, direction);\n    }\n    resizeImage(evt, direction) {\n        const startX = evt.pageX;\n        const startWidth = this.imgEl.nativeElement.clientWidth;\n        const isLeftResize = direction === 'left';\n        const { width } = window.getComputedStyle(this.view.dom);\n        const editorWidth = parseInt(width, 10);\n        const onMouseMove = (e) => {\n            const currentX = e.pageX;\n            const diffInPx = currentX - startX;\n            const computedWidth = isLeftResize ? startWidth - diffInPx : startWidth + diffInPx;\n            // prevent image overflow the editor\n            // prevent resizng below 20px\n            if (computedWidth > editorWidth || computedWidth < 20) {\n                return;\n            }\n            this.outerWidth = `${computedWidth}px`;\n        };\n        const onMouseUp = (e) => {\n            e.preventDefault();\n            document.removeEventListener('mousemove', onMouseMove);\n            document.removeEventListener('mouseup', onMouseUp);\n            this.imageResize.emit();\n        };\n        document.addEventListener('mousemove', onMouseMove);\n        document.addEventListener('mouseup', onMouseUp);\n    }\n}\nImageViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ImageViewComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nImageViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: ImageViewComponent, selector: \"ngx-image-view\", inputs: { src: \"src\", alt: \"alt\", title: \"title\", outerWidth: \"outerWidth\", selected: \"selected\", view: \"view\" }, outputs: { imageResize: \"imageResize\" }, viewQueries: [{ propertyName: \"imgEl\", first: true, predicate: [\"imgEl\"], descendants: true, static: true }], ngImport: i0, template: \"<span class=\\\"NgxEditor__ImageWrapper\\\" [ngClass]=\\\"{'NgxEditor__Resizer--Active': selected}\\\" [style.width]=\\\"outerWidth\\\">\\n  <span class=\\\"NgxEditor__ResizeHandle\\\" *ngIf=\\\"selected\\\">\\n    <span class=\\\"NgxEditor__ResizeHandle--TL\\\"  (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--TR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BL\\\" (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n  </span>\\n  <img [src]=\\\"src\\\" [alt]=\\\"alt\\\" [title]=\\\"title\\\" #imgEl />\\n</span>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}img{width:100%;height:100%}.NgxEditor__ImageWrapper{position:relative;display:inline-block;line-height:0;padding:2px}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active{padding:1px;border:1px solid #1a73e8}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle{position:absolute;height:100%;width:100%}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{position:absolute;width:7px;height:7px;background-color:#1a73e8;border:1px solid white}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{bottom:-5px;right:-5px;cursor:se-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR{top:-5px;right:-5px;cursor:ne-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL{top:-5px;left:-5px;cursor:nw-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL{bottom:-5px;left:-5px;cursor:sw-resize}\\n\"], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ImageViewComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-image-view', template: \"<span class=\\\"NgxEditor__ImageWrapper\\\" [ngClass]=\\\"{'NgxEditor__Resizer--Active': selected}\\\" [style.width]=\\\"outerWidth\\\">\\n  <span class=\\\"NgxEditor__ResizeHandle\\\" *ngIf=\\\"selected\\\">\\n    <span class=\\\"NgxEditor__ResizeHandle--TL\\\"  (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--TR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BL\\\" (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n  </span>\\n  <img [src]=\\\"src\\\" [alt]=\\\"alt\\\" [title]=\\\"title\\\" #imgEl />\\n</span>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}img{width:100%;height:100%}.NgxEditor__ImageWrapper{position:relative;display:inline-block;line-height:0;padding:2px}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active{padding:1px;border:1px solid #1a73e8}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle{position:absolute;height:100%;width:100%}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{position:absolute;width:7px;height:7px;background-color:#1a73e8;border:1px solid white}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{bottom:-5px;right:-5px;cursor:se-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR{top:-5px;right:-5px;cursor:ne-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL{top:-5px;left:-5px;cursor:nw-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL{bottom:-5px;left:-5px;cursor:sw-resize}\\n\"] }]\n        }], propDecorators: { src: [{\n                type: Input\n            }], alt: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], outerWidth: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], view: [{\n                type: Input\n            }], imageResize: [{\n                type: Output\n            }], imgEl: [{\n                type: ViewChild,\n                args: ['imgEl', { static: true }]\n            }] } });\n\nclass ImageRezieView {\n    constructor(node, view, getPos, injector) {\n        this.updating = false;\n        this.handleResize = () => {\n            if (this.updating) {\n                return;\n            }\n            const { state, dispatch } = this.view;\n            const { tr } = state;\n            const transaction = tr.setNodeMarkup(this.getPos(), undefined, Object.assign(Object.assign({}, this.node.attrs), { width: this.imageComponentRef.instance.outerWidth }));\n            const resolvedPos = transaction.doc.resolve(this.getPos());\n            const newSelection = new NodeSelection(resolvedPos);\n            transaction.setSelection(newSelection);\n            dispatch(transaction);\n        };\n        const componentFactoryResolver = injector.get(ComponentFactoryResolver);\n        this.applicationRef = injector.get(ApplicationRef);\n        // Create the component and wire it up with the element\n        const factory = componentFactoryResolver.resolveComponentFactory(ImageViewComponent);\n        this.imageComponentRef = factory.create(injector, []);\n        // Attach to the view so that the change detector knows to run\n        this.applicationRef.attachView(this.imageComponentRef.hostView);\n        // Possible alternate for deprecated ComponentFactoryResolver\n        // const viewContainerRef = injector.get(ViewContainerRef);\n        // this.imageComponentRef = viewContainerRef.createComponent(ImageViewComponent, { injector });\n        this.setNodeAttributes(node.attrs);\n        this.imageComponentRef.instance.view = view;\n        this.dom = this.imageComponentRef.location.nativeElement;\n        this.view = view;\n        this.node = node;\n        this.getPos = getPos;\n        this.resizeSubscription = this.imageComponentRef.instance.imageResize.subscribe(() => {\n            this.handleResize();\n        });\n    }\n    computeChanges(prevAttrs, newAttrs) {\n        return JSON.stringify(prevAttrs) === JSON.stringify(newAttrs);\n    }\n    setNodeAttributes(attrs) {\n        this.imageComponentRef.instance.src = attrs['src'];\n        this.imageComponentRef.instance.alt = attrs['alt'];\n        this.imageComponentRef.instance.title = attrs['title'];\n        this.imageComponentRef.instance.outerWidth = attrs['width'];\n    }\n    update(node) {\n        if (node.type !== this.node.type) {\n            return false;\n        }\n        this.node = node;\n        const changed = this.computeChanges(this.node.attrs, node.attrs);\n        if (changed) {\n            this.updating = true;\n            this.setNodeAttributes(node.attrs);\n            this.updating = false;\n        }\n        return true;\n    }\n    ignoreMutation() {\n        return true;\n    }\n    selectNode() {\n        this.imageComponentRef.instance.selected = true;\n    }\n    deselectNode() {\n        this.imageComponentRef.instance.selected = false;\n    }\n    destroy() {\n        this.resizeSubscription.unsubscribe();\n        this.applicationRef.detachView(this.imageComponentRef.hostView);\n    }\n}\nconst imageResizePlugin = (injector) => {\n    return new Plugin({\n        key: new PluginKey('image-resize'),\n        props: {\n            nodeViews: {\n                image: (node, view, getPos) => {\n                    return new ImageRezieView(node, view, getPos, injector);\n                },\n            },\n        },\n    });\n};\n\nconst HTTP_LINK_REGEX = /(?:https?:\\/\\/)?[\\w-]+(?:\\.[\\w-]+)+\\.?(?:\\d+)?(?:\\/\\S*)?$/;\nconst linkify = (fragment) => {\n    const linkified = [];\n    fragment.forEach((child) => {\n        if (child.isText) {\n            const text = child.text;\n            let pos = 0;\n            const match = HTTP_LINK_REGEX.exec(text);\n            if (match) {\n                const start = match.index;\n                const end = start + match[0].length;\n                const { link } = child.type.schema.marks;\n                if (start > 0) {\n                    linkified.push(child.cut(pos, start));\n                }\n                const urlText = text.slice(start, end);\n                linkified.push(child.cut(start, end).mark(link.create({ href: urlText }).addToSet(child.marks)));\n                pos = end;\n            }\n            if (pos < text.length) {\n                linkified.push(child.cut(pos));\n            }\n        }\n        else {\n            linkified.push(child.copy(linkify(child.content)));\n        }\n    });\n    return Fragment.fromArray(linkified);\n};\nconst linkifyPlugin = () => {\n    return new Plugin({\n        key: new PluginKey('linkify'),\n        props: {\n            transformPasted: (slice) => {\n                return new Slice(linkify(slice.content), slice.openStart, slice.openEnd);\n            },\n        },\n    });\n};\n\nconst emptyDoc = {\n    type: 'doc',\n    content: [\n        {\n            type: 'paragraph',\n        },\n    ],\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\nconst toHTML = (json, inputSchema) => {\n    const schema$1 = inputSchema !== null && inputSchema !== void 0 ? inputSchema : schema;\n    const contentNode = schema$1.nodeFromJSON(json);\n    const html = DOMSerializer.fromSchema(schema$1).serializeFragment(contentNode.content);\n    const div = document.createElement('div');\n    div.appendChild(html);\n    return div.innerHTML;\n};\nconst toDoc = (html, inputSchema) => {\n    const schema$1 = inputSchema !== null && inputSchema !== void 0 ? inputSchema : schema;\n    const el = document.createElement('div');\n    el.innerHTML = html;\n    return DOMParser.fromSchema(schema$1).parse(el).toJSON();\n};\nconst parseContent = (value, schema) => {\n    if (!value) {\n        return schema.nodeFromJSON(emptyDoc);\n    }\n    if (typeof value !== 'string') {\n        return schema.nodeFromJSON(value);\n    }\n    const docJson = toDoc(value, schema);\n    return schema.nodeFromJSON(docJson);\n};\n\nclass NgxEditorComponent {\n    constructor(renderer, injector, elementRef) {\n        this.renderer = renderer;\n        this.injector = injector;\n        this.elementRef = elementRef;\n        this.placeholder = 'Type Here...';\n        this.focusOut = new EventEmitter();\n        this.focusIn = new EventEmitter();\n        this.subscriptions = [];\n        this.onChange = () => { };\n        this.onTouched = () => { };\n    }\n    writeValue(value) {\n        if (!this.outputFormat && typeof value === 'string') {\n            this.outputFormat = 'html';\n        }\n        this.editor.setContent(value !== null && value !== void 0 ? value : '');\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.setMeta('UPDATE_EDITABLE', !isDisabled);\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    handleChange(jsonDoc) {\n        if (this.outputFormat === 'html') {\n            const html = toHTML(jsonDoc, this.editor.schema);\n            this.onChange(html);\n            return;\n        }\n        this.onChange(jsonDoc);\n    }\n    setMeta(key, value) {\n        const { dispatch, state: { tr } } = this.editor.view;\n        dispatch(tr.setMeta(key, value));\n    }\n    setPlaceholder(placeholder) {\n        this.setMeta('UPDATE_PLACEHOLDER', placeholder);\n    }\n    registerPlugins() {\n        this.editor.registerPlugin(editablePlugin());\n        this.editor.registerPlugin(placeholderPlugin(this.placeholder));\n        this.editor.registerPlugin(attributesPlugin({\n            class: 'NgxEditor__Content',\n        }));\n        this.editor.registerPlugin(focusPlugin(() => {\n            this.focusIn.emit();\n        }));\n        this.editor.registerPlugin(focusPlugin(() => {\n            this.focusIn.emit();\n        }));\n        this.editor.registerPlugin(blurPlugin(() => {\n            this.focusOut.emit();\n            this.onTouched();\n        }));\n        if (this.editor.features.resizeImage) {\n            this.editor.registerPlugin(imageResizePlugin(this.injector));\n        }\n        if (this.editor.features.linkOnPaste) {\n            this.editor.registerPlugin(linkifyPlugin());\n        }\n    }\n    ngOnInit() {\n        if (!this.editor) {\n            throw new Error('NgxEditor: Required editor instance');\n        }\n        this.registerPlugins();\n        this.renderer.appendChild(this.ngxEditor.nativeElement, this.editor.view.dom);\n        const contentChangeSubscription = this.editor.valueChanges.subscribe((jsonDoc) => {\n            this.handleChange(jsonDoc);\n        });\n        this.subscriptions.push(contentChangeSubscription);\n    }\n    ngOnChanges(changes) {\n        if ((changes === null || changes === void 0 ? void 0 : changes['placeholder']) && !changes['placeholder'].isFirstChange()) {\n            this.setPlaceholder(changes['placeholder'].currentValue);\n        }\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => {\n            subscription.unsubscribe();\n        });\n    }\n}\nNgxEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: NgxEditorComponent, deps: [{ token: i0.Renderer2 }, { token: i0.Injector }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNgxEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: NgxEditorComponent, selector: \"ngx-editor\", inputs: { editor: \"editor\", outputFormat: \"outputFormat\", placeholder: \"placeholder\" }, outputs: { focusOut: \"focusOut\", focusIn: \"focusIn\" }, providers: [{\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxEditorComponent),\n            multi: true,\n        }], viewQueries: [{ propertyName: \"ngxEditor\", first: true, predicate: [\"ngxEditor\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"NgxEditor\\\" #ngxEditor>\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".NgxEditor{background:white;color:#000;background-clip:padding-box;border-radius:4px;border:1px solid rgba(0,0,0,.2);position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder:before{color:#6c757d;opacity:1;-webkit-user-select:none;user-select:none;position:absolute;cursor:text;content:attr(data-placeholder)}.NgxEditor__Placeholder[data-align=right]:before{position:relative}.NgxEditor__Content{padding:8px;white-space:pre-wrap;outline:none;font-variant-ligatures:none;font-feature-settings:\\\"liga\\\" 0,none}.NgxEditor__Content p{margin:0 0 10px}.NgxEditor__Content blockquote{padding-left:16px;border-left:3px solid #ddd;margin-left:0;margin-right:0}.NgxEditor__Content--Disabled{-webkit-user-select:none;user-select:none;pointer-events:none}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.NgxEditor__Wrapper .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.NgxEditor__MenuBar{display:flex;flex-wrap:wrap;padding:3px;cursor:default;background-color:#fff}.NgxEditor__MenuItem{border-radius:2px;display:flex;align-items:center;justify-content:center;position:relative;flex-shrink:0}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:30px;width:30px;transition:.3s ease-in-out}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 5px}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active{background-color:#e8f0fe;color:#1a73e8}.NgxEditor__Dropdown{min-width:64px;position:relative;display:flex;align-items:center;flex-shrink:0}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{display:flex;align-items:center;justify-content:center;padding:0 5px;height:100%;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{display:inline-block;content:\\\"\\\";margin-left:24px;vertical-align:4px;border-top:4px solid;border-right:4px solid transparent;border-bottom:0;border-left:4px solid transparent}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{position:absolute;left:0;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;width:100%;top:32px}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{padding:8px;white-space:nowrap;color:inherit}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown.NgxEditor__Dropdown--Selected,.NgxEditor__Dropdown.NgxEditor__Dropdown--Open{background-color:#e8f0fe}.NgxEditor__Dropdown.NgxEditor__Dropdown--Selected .NgxEditor__Dropdown--Text,.NgxEditor__Dropdown.NgxEditor__Dropdown--Open .NgxEditor__Dropdown--Text{color:#1a73e8}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--DropdownMenu{top:unset;bottom:32px}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--Text:after{transform:rotate(180deg)}.NgxEditor__MenuBar--Reverse .NgxEditor__Popup{top:unset;bottom:32px}.NgxEditor__Popup{position:absolute;top:32px;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;min-width:192px;padding:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor__HelpText{font-size:80%}.NgxEditor__HelpText.NgxEditor__HelpText--Error{color:red}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: NgxEditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-editor', providers: [{\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NgxEditorComponent),\n                            multi: true,\n                        }], encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"NgxEditor\\\" #ngxEditor>\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".NgxEditor{background:white;color:#000;background-clip:padding-box;border-radius:4px;border:1px solid rgba(0,0,0,.2);position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder:before{color:#6c757d;opacity:1;-webkit-user-select:none;user-select:none;position:absolute;cursor:text;content:attr(data-placeholder)}.NgxEditor__Placeholder[data-align=right]:before{position:relative}.NgxEditor__Content{padding:8px;white-space:pre-wrap;outline:none;font-variant-ligatures:none;font-feature-settings:\\\"liga\\\" 0,none}.NgxEditor__Content p{margin:0 0 10px}.NgxEditor__Content blockquote{padding-left:16px;border-left:3px solid #ddd;margin-left:0;margin-right:0}.NgxEditor__Content--Disabled{-webkit-user-select:none;user-select:none;pointer-events:none}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.NgxEditor__Wrapper .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.NgxEditor__MenuBar{display:flex;flex-wrap:wrap;padding:3px;cursor:default;background-color:#fff}.NgxEditor__MenuItem{border-radius:2px;display:flex;align-items:center;justify-content:center;position:relative;flex-shrink:0}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:30px;width:30px;transition:.3s ease-in-out}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 5px}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active{background-color:#e8f0fe;color:#1a73e8}.NgxEditor__Dropdown{min-width:64px;position:relative;display:flex;align-items:center;flex-shrink:0}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{display:flex;align-items:center;justify-content:center;padding:0 5px;height:100%;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{display:inline-block;content:\\\"\\\";margin-left:24px;vertical-align:4px;border-top:4px solid;border-right:4px solid transparent;border-bottom:0;border-left:4px solid transparent}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{position:absolute;left:0;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;width:100%;top:32px}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{padding:8px;white-space:nowrap;color:inherit}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown.NgxEditor__Dropdown--Selected,.NgxEditor__Dropdown.NgxEditor__Dropdown--Open{background-color:#e8f0fe}.NgxEditor__Dropdown.NgxEditor__Dropdown--Selected .NgxEditor__Dropdown--Text,.NgxEditor__Dropdown.NgxEditor__Dropdown--Open .NgxEditor__Dropdown--Text{color:#1a73e8}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--DropdownMenu{top:unset;bottom:32px}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--Text:after{transform:rotate(180deg)}.NgxEditor__MenuBar--Reverse .NgxEditor__Popup{top:unset;bottom:32px}.NgxEditor__Popup{position:absolute;top:32px;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;min-width:192px;padding:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor__HelpText{font-size:80%}.NgxEditor__HelpText.NgxEditor__HelpText--Error{color:red}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.Injector }, { type: i0.ElementRef }]; }, propDecorators: { ngxEditor: [{\n                type: ViewChild,\n                args: ['ngxEditor', { static: true }]\n            }], editor: [{\n                type: Input\n            }], outputFormat: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], focusOut: [{\n                type: Output\n            }], focusIn: [{\n                type: Output\n            }] } });\n\nclass MenuService {\n    constructor() {\n        this.customMenuRefChange = new Subject();\n    }\n    setCustomMenuRef(c) {\n        this.customMenuRefChange.next(c);\n    }\n}\nMenuService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: MenuService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMenuService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: MenuService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: MenuService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nvar bold = `\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n`;\n\nvar italic = `\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\" />\n`;\n\nvar code = `\n<path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"/>\n`;\n\nvar underline = `\n<path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n`;\n\nvar strike = `\n<path d=\"M6.85,7.08C6.85,4.37,9.45,3,12.24,3c1.64,0,3,0.49,3.9,1.28c0.77,0.65,1.46,1.73,1.46,3.24h-3.01 c0-0.31-0.05-0.59-0.15-0.85c-0.29-0.86-1.2-1.28-2.25-1.28c-1.86,0-2.34,1.02-2.34,1.7c0,0.48,0.25,0.88,0.74,1.21 C10.97,8.55,11.36,8.78,12,9H7.39C7.18,8.66,6.85,8.11,6.85,7.08z M21,12v-2H3v2h9.62c1.15,0.45,1.96,0.75,1.96,1.97 c0,1-0.81,1.67-2.28,1.67c-1.54,0-2.93-0.54-2.93-2.51H6.4c0,0.55,0.08,1.13,0.24,1.58c0.81,2.29,3.29,3.3,5.67,3.3 c2.27,0,5.3-0.89,5.3-4.05c0-0.3-0.01-1.16-0.48-1.94H21V12z\"/>\n`;\n\nvar orderedList = `\n<path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"/>\n`;\n\nvar bulletList = `\n<path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\"/>\n`;\n\nvar quote = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z\"/>\n`;\n\nvar link = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n`;\n\nvar unlink = `\n<path d=\"M17 7h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1 0 1.43-.98 2.63-2.31 2.98l1.46 1.46C20.88 15.61 22 13.95 22 12c0-2.76-2.24-5-5-5zm-1 4h-2.19l2 2H16zM2 4.27l3.11 3.11C3.29 8.12 2 9.91 2 12c0 2.76 2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1 0-1.59 1.21-2.9 2.76-3.07L8.73 11H8v2h2.73L13 15.27V17h1.73l4.01 4L20 19.74 3.27 3 2 4.27z\"/>\n`;\n\nvar image = `\n<path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"/>\n`;\n\nvar alignLeft = `\n<path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n`;\n\nvar alignCenter = `\n<path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n`;\n\nvar alignRight = `\n<path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n`;\n\nvar alignJustify = `\n<path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"/>\n`;\n\nvar textColor = `\n<path d=\"M2,20h20v4H2V20z M5.49,17h2.42l1.27-3.58h5.65L16.09,17h2.42L13.25,3h-2.5L5.49,17z M9.91,11.39l2.03-5.79h0.12l2.03,5.79 H9.91z\"/>\n`;\n\nvar colorFill = `\n<path d=\"M16.56,8.94L7.62,0L6.21,1.41l2.38,2.38L3.44,8.94c-0.59,0.59-0.59,1.54,0,2.12l5.5,5.5C9.23,16.85,9.62,17,10,17 s0.77-0.15,1.06-0.44l5.5-5.5C17.15,10.48,17.15,9.53,16.56,8.94z M5.21,10L10,5.21L14.79,10H5.21z M19,11.5c0,0-2,2.17-2,3.5 c0,1.1,0.9,2,2,2s2-0.9,2-2C21,13.67,19,11.5,19,11.5z M2,20h20v4H2V20z\"/>\n`;\n\nvar horizontalRule = `\n  <g>\n    <rect fill=\"none\" fill-rule=\"evenodd\" height=\"24\" width=\"24\"/>\n    <rect fill-rule=\"evenodd\" height=\"2\" width=\"16\" x=\"4\" y=\"11\"/>\n  </g>\n`;\n\n// Icons source: https://material.io/\nconst DEFAULT_ICON_HEIGHT = 20;\nconst DEFAULT_ICON_WIDTH = 20;\nconst DEFAULT_ICON_FILL = 'currentColor';\nconst icons = {\n    bold,\n    italic,\n    code,\n    underline,\n    strike,\n    ordered_list: orderedList,\n    bullet_list: bulletList,\n    blockquote: quote,\n    link,\n    unlink,\n    image,\n    align_left: alignLeft,\n    align_center: alignCenter,\n    align_right: alignRight,\n    align_justify: alignJustify,\n    text_color: textColor,\n    color_fill: colorFill,\n    horizontal_rule: horizontalRule,\n};\nclass Icon {\n    static get(name, fill = DEFAULT_ICON_FILL) {\n        const path = icons[name] || '<path></path>';\n        return `\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=${fill}\n        height=${DEFAULT_ICON_HEIGHT}\n        width=${DEFAULT_ICON_WIDTH}\n      >\n        ${path}\n      </svg>\n    `;\n    }\n}\n\nclass Mark {\n    constructor(name) {\n        this.name = name;\n    }\n    apply() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            return applyMark(type)(state, dispatch);\n        };\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            return toggleMark(type)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = schema.marks[this.name];\n        if (!type) {\n            return false;\n        }\n        return isMarkActive(state, type);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass Blockqote {\n    toggle() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.nodes.blockquote;\n            if (!type) {\n                return false;\n            }\n            if (this.isActive(state)) {\n                return lift(state, dispatch);\n            }\n            return wrapIn(type)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = schema.nodes.blockquote;\n        if (!type) {\n            return false;\n        }\n        return isNodeActive(state, type);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass HorizontalRule {\n    insert() {\n        return (state, dispatch) => {\n            const { schema, tr } = state;\n            const type = schema.nodes.horizontal_rule;\n            if (!type) {\n                return false;\n            }\n            dispatch(tr.replaceSelectionWith(type.create()).scrollIntoView());\n            return true;\n        };\n    }\n    canExecute(state) {\n        return canInsert(state, state.schema.nodes.horizontal_rule);\n    }\n}\n\nclass ListItem {\n    constructor(isBulletList = false) {\n        this.isBulletList = false;\n        this.isBulletList = isBulletList;\n    }\n    getType(schema) {\n        return this.isBulletList ? schema.nodes['bullet_list'] : schema.nodes['ordered_list'];\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = this.getType(schema);\n            if (!type) {\n                return false;\n            }\n            if (this.isActive(state)) {\n                return liftListItem(schema.nodes.list_item)(state, dispatch);\n            }\n            return wrapInList(type)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = this.getType(schema);\n        if (!type) {\n            return false;\n        }\n        return isNodeActive(state, type);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass Heading {\n    constructor(level) {\n        this.level = level;\n    }\n    apply() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.nodes.heading;\n            if (!type) {\n                return false;\n            }\n            return setBlockType(type)(state, dispatch);\n        };\n    }\n    toggle() {\n        return (state, dispatch) => {\n            var _a;\n            const { schema, selection, doc } = state;\n            const type = schema.nodes.heading;\n            if (!type) {\n                return false;\n            }\n            const nodePos = selection.$from.before(1);\n            const node = doc.nodeAt(nodePos);\n            const attrs = (_a = node === null || node === void 0 ? void 0 : node.attrs) !== null && _a !== void 0 ? _a : {};\n            if (this.isActive(state)) {\n                return setBlockType(schema.nodes.paragraph, attrs)(state, dispatch);\n            }\n            return setBlockType(type, Object.assign(Object.assign({}, attrs), { level: this.level }))(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const nodesInSelection = getSelectionNodes(state);\n        const type = schema.nodes.heading;\n        if (!type) {\n            return false;\n        }\n        const supportedNodes = [\n            type,\n            schema.nodes.text,\n            schema.nodes.blockquote,\n        ];\n        // heading is a text node\n        // don't mark as active when it has more nodes\n        const nodes = nodesInSelection.filter((node) => {\n            return supportedNodes.includes(node.type);\n        });\n        const acitveNode = nodes.find((node) => {\n            return node.attrs['level'] === this.level;\n        });\n        return Boolean(acitveNode);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass TextAlign {\n    constructor(align) {\n        this.align = align;\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { doc, selection, tr, schema } = state;\n            const { from, to } = selection;\n            let applicable = false;\n            doc.nodesBetween(from, to, (node, pos) => {\n                const nodeType = node.type;\n                if ([schema.nodes.paragraph, schema.nodes.heading].includes(nodeType)) {\n                    applicable = true;\n                    tr.setNodeMarkup(pos, nodeType, Object.assign(Object.assign({}, node.attrs), { align: this.align }));\n                }\n                return true;\n            });\n            if (!applicable) {\n                return false;\n            }\n            if (tr.docChanged) {\n                dispatch === null || dispatch === void 0 ? void 0 : dispatch(tr);\n            }\n            return true;\n        };\n    }\n    isActive(state) {\n        const nodes = getSelectionNodes(state);\n        const active = nodes.find((node) => {\n            return node.attrs['align'] === this.align;\n        });\n        return Boolean(active);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nconst defaultOptions = {\n    strict: true,\n};\nclass Link$1 {\n    update(attrs) {\n        return (state, dispatch) => {\n            const { schema, selection } = state;\n            const type = schema.marks.link;\n            if (!type) {\n                return false;\n            }\n            if (selection.empty) {\n                return false;\n            }\n            return toggleMark(type, attrs)(state, dispatch);\n        };\n    }\n    insert(text, attrs) {\n        return (state, dispatch) => {\n            var _a, _b;\n            const { schema, tr } = state;\n            const type = schema.marks.link;\n            if (!type) {\n                return false;\n            }\n            const linkAttrs = {\n                href: attrs.href,\n                title: (_a = attrs.title) !== null && _a !== void 0 ? _a : text,\n                target: (_b = attrs.target) !== null && _b !== void 0 ? _b : '_blank',\n            };\n            const node = schema.text(text, [schema.marks.link.create(linkAttrs)]);\n            tr.replaceSelectionWith(node, false)\n                .scrollIntoView();\n            if (tr.docChanged) {\n                dispatch === null || dispatch === void 0 ? void 0 : dispatch(tr);\n                return true;\n            }\n            return false;\n        };\n    }\n    isActive(state, options = defaultOptions) {\n        if (options.strict) {\n            return true;\n        }\n        const { schema } = state;\n        const type = schema.marks.link;\n        if (!type) {\n            return false;\n        }\n        return isMarkActive(state, type);\n    }\n    remove(state, dispatch) {\n        return removeLink()(state, dispatch);\n    }\n    canExecute(state) {\n        const testAttrs = {\n            href: '',\n        };\n        return this.insert('Exec', testAttrs)(state) || this.update(testAttrs)(state);\n    }\n}\n\nclass Image$1 {\n    insert(src, attrs) {\n        return (state, dispatch) => {\n            const { schema, tr, selection } = state;\n            const type = schema.nodes.image;\n            if (!type) {\n                return false;\n            }\n            const imageAttrs = Object.assign({ width: null, src }, attrs);\n            if (!imageAttrs.width && selection instanceof NodeSelection && selection.node.type === type) {\n                imageAttrs.width = selection.node.attrs['width'];\n            }\n            tr.replaceSelectionWith(type.createAndFill(imageAttrs));\n            const resolvedPos = tr.doc.resolve(tr.selection.anchor - tr.selection.$anchor.nodeBefore.nodeSize);\n            tr\n                .setSelection(new NodeSelection(resolvedPos))\n                .scrollIntoView();\n            if (tr.docChanged) {\n                dispatch === null || dispatch === void 0 ? void 0 : dispatch(tr);\n                return true;\n            }\n            return false;\n        };\n    }\n    isActive(state) {\n        const { selection } = state;\n        if (selection instanceof NodeSelection) {\n            return selection.node.type.name === 'image';\n        }\n        return false;\n    }\n}\n\nclass TextColor$1 {\n    constructor(name, attrName = 'color') {\n        this.name = name;\n        this.attrName = attrName;\n    }\n    apply(attrs) {\n        return (state, dispatch) => {\n            const { schema, selection, doc } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            const { from, to, empty } = selection;\n            if (!empty && (from + 1 === to)) {\n                const node = doc.nodeAt(from);\n                if ((node === null || node === void 0 ? void 0 : node.isAtom) && !node.isText && node.isLeaf) {\n                    // An atomic node (e.g. Image) is selected.\n                    return false;\n                }\n            }\n            return applyMark(type, attrs)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = schema.marks[this.name];\n        if (!type) {\n            return false;\n        }\n        return isMarkActive(state, type);\n    }\n    getActiveColors(state) {\n        if (!this.isActive(state)) {\n            return [];\n        }\n        const { schema } = state;\n        const marks = getSelectionMarks(state);\n        const colors = marks\n            .filter((mark) => mark.type === schema.marks[this.name])\n            .map((mark) => {\n            return mark.attrs[this.attrName];\n        })\n            .filter(Boolean);\n        return colors;\n    }\n    remove() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            return removeMark(type)(state, dispatch);\n        };\n    }\n    canExecute(state) {\n        const attrs = this.name === 'text_color' ? { color: '' } : { backgroundColor: '' };\n        return this.apply(attrs)(state);\n    }\n}\n\nconst STRONG = new Mark('strong');\nconst EM = new Mark('em');\nconst CODE = new Mark('code');\nconst UNDERLINE = new Mark('u');\nconst STRIKE = new Mark('s');\nconst BLOCKQUOTE = new Blockqote();\nconst HORIZONTAL_RULE = new HorizontalRule();\nconst UL = new ListItem(true);\nconst OL = new ListItem(false);\nconst H1 = new Heading(1);\nconst H2 = new Heading(2);\nconst H3 = new Heading(3);\nconst H4 = new Heading(4);\nconst H5 = new Heading(5);\nconst H6 = new Heading(6);\nconst ALIGN_LEFT = new TextAlign('left');\nconst ALIGN_CENTER = new TextAlign('center');\nconst ALIGN_RIGHT = new TextAlign('right');\nconst ALIGN_JUSTIFY = new TextAlign('justify');\nconst LINK = new Link$1();\nconst IMAGE = new Image$1();\nconst TEXT_COLOR = new TextColor$1('text_color', 'color');\nconst TEXT_BACKGROUND_COLOR = new TextColor$1('text_background_color', 'backgroundColor');\n\nconst ToggleCommands = {\n    bold: STRONG,\n    italic: EM,\n    code: CODE,\n    underline: UNDERLINE,\n    strike: STRIKE,\n    blockquote: BLOCKQUOTE,\n    bullet_list: UL,\n    ordered_list: OL,\n    h1: H1,\n    h2: H2,\n    h3: H3,\n    h4: H4,\n    h5: H5,\n    h6: H6,\n    align_left: ALIGN_LEFT,\n    align_center: ALIGN_CENTER,\n    align_right: ALIGN_RIGHT,\n    align_justify: ALIGN_JUSTIFY,\n};\nconst InsertCommands = {\n    horizontal_rule: HORIZONTAL_RULE,\n};\nconst Link = LINK;\nconst Image = IMAGE;\nconst TextColor = TEXT_COLOR;\nconst TextBackgroundColor = TEXT_BACKGROUND_COLOR;\n\nconst defaults = {\n    // menu\n    bold: 'Bold',\n    italic: 'Italic',\n    code: 'Code',\n    underline: 'Underline',\n    strike: 'Strike',\n    blockquote: 'Blockquote',\n    bullet_list: 'Bullet List',\n    ordered_list: 'Ordered List',\n    heading: 'Heading',\n    h1: 'Header 1',\n    h2: 'Header 2',\n    h3: 'Header 3',\n    h4: 'Header 4',\n    h5: 'Header 5',\n    h6: 'Header 6',\n    align_left: 'Left Align',\n    align_center: 'Center Align',\n    align_right: 'Right Align',\n    align_justify: 'Justify',\n    text_color: 'Text Color',\n    background_color: 'Background Color',\n    insertLink: 'Insert Link',\n    removeLink: 'Remove Link',\n    insertImage: 'Insert Image',\n    // pupups, forms, others...\n    url: 'URL',\n    text: 'Text',\n    openInNewTab: 'Open in new tab',\n    insert: 'Insert',\n    altText: 'Alt Text',\n    title: 'Title',\n    remove: 'Remove',\n};\nclass Locals {\n    constructor(newLocals = {}) {\n        this.locals = defaults;\n        this.get = (key) => {\n            var _a;\n            return (_a = this.locals[key]) !== null && _a !== void 0 ? _a : '';\n        };\n        this.locals = Object.assign(Object.assign({}, defaults), newLocals);\n    }\n}\n\nclass NgxEditorServiceConfig {\n    constructor() {\n        this.locals = {};\n    }\n}\nNgxEditorServiceConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: NgxEditorServiceConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgxEditorServiceConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: NgxEditorServiceConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: NgxEditorServiceConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass NgxEditorService {\n    constructor(config) {\n        this.config = config;\n    }\n    get locals() {\n        return new Locals(this.config.locals);\n    }\n}\nNgxEditorService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: NgxEditorService, deps: [{ token: NgxEditorServiceConfig, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nNgxEditorService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: NgxEditorService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: NgxEditorService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: NgxEditorServiceConfig, decorators: [{\n                        type: Optional\n                    }] }];\n    } });\nconst provideMyServiceOptions = (config) => {\n    var _a;\n    return {\n        locals: (_a = config.locals) !== null && _a !== void 0 ? _a : {},\n    };\n};\n\nclass SanitizeHtmlPipe {\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n    }\n    transform(value) {\n        return this.sanitizer.bypassSecurityTrustHtml(value);\n    }\n}\nSanitizeHtmlPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SanitizeHtmlPipe, deps: [{ token: i1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Pipe });\nSanitizeHtmlPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SanitizeHtmlPipe, name: \"sanitizeHtml\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SanitizeHtmlPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'sanitizeHtml',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.DomSanitizer }]; } });\n\nclass ToggleCommandComponent {\n    constructor(ngxeService, menuService) {\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.isActive = false;\n        this.disabled = false;\n        this.update = (view) => {\n            const { state } = view;\n            const command = ToggleCommands[this.name];\n            this.isActive = command.isActive(state);\n            this.disabled = !command.canExecute(state);\n        };\n    }\n    get name() {\n        return this.toolbarItem;\n    }\n    toggle(e) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        const command = ToggleCommands[this.name];\n        command.toggle()(state, dispatch);\n    }\n    getTitle(name) {\n        return this.ngxeService.locals.get(name);\n    }\n    ngOnInit() {\n        this.html = Icon.get(this.name);\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nToggleCommandComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ToggleCommandComponent, deps: [{ token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component });\nToggleCommandComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: ToggleCommandComponent, selector: \"ngx-toggle-command\", inputs: { toolbarItem: \"toolbarItem\" }, host: { properties: { \"class.NgxEditor__MenuItem--Active\": \"this.isActive\", \"class.NgxEditor--Disabled\": \"this.disabled\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"html | sanitizeHtml\\\" (mousedown)=\\\"toggle($event)\\\"\\n  [title]=\\\"getTitle(name)\\\">\\n</div>\\n\", styles: [\"\"], pipes: { \"sanitizeHtml\": SanitizeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ToggleCommandComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-toggle-command', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"html | sanitizeHtml\\\" (mousedown)=\\\"toggle($event)\\\"\\n  [title]=\\\"getTitle(name)\\\">\\n</div>\\n\", styles: [\"\"] }]\n        }], ctorParameters: function () { return [{ type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { toolbarItem: [{\n                type: Input\n            }], isActive: [{\n                type: HostBinding,\n                args: ['class.NgxEditor__MenuItem--Active']\n            }], disabled: [{\n                type: HostBinding,\n                args: ['class.NgxEditor--Disabled']\n            }] } });\n\nclass InsertCommandComponent {\n    constructor(ngxeService, menuService) {\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.disabled = false;\n        this.update = (view) => {\n            const { state } = view;\n            const command = InsertCommands[this.name];\n            this.disabled = !command.canExecute(state);\n        };\n    }\n    get name() {\n        return this.toolbarItem;\n    }\n    insert(e) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        const command = InsertCommands[this.name];\n        command.insert()(state, dispatch);\n    }\n    getTitle(name) {\n        return this.ngxeService.locals.get(name);\n    }\n    ngOnInit() {\n        this.html = Icon.get(this.name);\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nInsertCommandComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: InsertCommandComponent, deps: [{ token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component });\nInsertCommandComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: InsertCommandComponent, selector: \"ngx-insert-command\", inputs: { toolbarItem: \"toolbarItem\" }, host: { properties: { \"class.NgxEditor--Disabled\": \"this.disabled\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"html | sanitizeHtml\\\" (mousedown)=\\\"insert($event)\\\"\\n  [title]=\\\"getTitle(name)\\\">\\n</div>\\n\", styles: [\"\"], pipes: { \"sanitizeHtml\": SanitizeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: InsertCommandComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-insert-command', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"html | sanitizeHtml\\\" (mousedown)=\\\"insert($event)\\\"\\n  [title]=\\\"getTitle(name)\\\">\\n</div>\\n\", styles: [\"\"] }]\n        }], ctorParameters: function () { return [{ type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { toolbarItem: [{\n                type: Input\n            }], disabled: [{\n                type: HostBinding,\n                args: ['class.NgxEditor--Disabled']\n            }] } });\n\nclass LinkComponent {\n    constructor(el, ngxeService, menuService) {\n        this.el = el;\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.showPopup = false;\n        this.isActive = false;\n        this.canExecute = true;\n        this.form = new FormGroup({\n            href: new FormControl('', [\n                Validators$1.required,\n                Validators$1.pattern('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/??([^#\\n\\r]*)?#?([^\\n\\r]*)'),\n            ]),\n            text: new FormControl('', [Validators$1.required]),\n            openInNewTab: new FormControl(true),\n        });\n        this.setText = () => {\n            const { state: { selection, doc } } = this.editorView;\n            const { empty, from, to } = selection;\n            const selectedText = !empty ? doc.textBetween(from, to) : '';\n            if (selectedText) {\n                this.text.patchValue(selectedText);\n                this.text.disable();\n            }\n        };\n        this.update = (view) => {\n            const { state } = view;\n            this.isActive = Link.isActive(state, { strict: false });\n            this.canExecute = Link.canExecute(state);\n        };\n    }\n    get valid() {\n        return this.isActive || this.showPopup;\n    }\n    get disabled() {\n        return !this.canExecute;\n    }\n    get icon() {\n        return Icon.get(this.isActive ? 'unlink' : 'link');\n    }\n    get title() {\n        return this.ngxeService.locals.get(this.isActive ? 'removeLink' : 'insertLink');\n    }\n    get href() {\n        return this.form.get('href');\n    }\n    get text() {\n        return this.form.get('text');\n    }\n    onDocumentClick(e) {\n        if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n            this.hideForm();\n        }\n    }\n    getLabel(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    hideForm() {\n        this.showPopup = false;\n        this.form.reset({\n            href: '',\n            text: '',\n            openInNewTab: true,\n        });\n        this.text.enable();\n    }\n    onMouseDown(e) {\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        if (this.isActive) {\n            Link.remove(state, dispatch);\n            return;\n        }\n        this.showPopup = !this.showPopup;\n        if (this.showPopup) {\n            this.setText();\n        }\n    }\n    insertLink(e) {\n        e.preventDefault();\n        const { text, href, openInNewTab } = this.form.getRawValue();\n        const { dispatch, state } = this.editorView;\n        const { selection } = state;\n        const attrs = {\n            title: href,\n            href,\n            target: openInNewTab ? '_blank' : '_self',\n        };\n        if (selection.empty) {\n            Link.insert(text, attrs)(state, dispatch);\n            this.editorView.focus();\n        }\n        else {\n            Link.update(attrs)(state, dispatch);\n        }\n        this.hideForm();\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nLinkComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: LinkComponent, deps: [{ token: i0.ElementRef }, { token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component });\nLinkComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: LinkComponent, selector: \"ngx-link\", host: { listeners: { \"document:mousedown\": \"onDocumentClick($event)\" }, properties: { \"class.NgxEditor__MenuItem--Active\": \"this.valid\", \"class.NgxEditor--Disabled\": \"this.disabled\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"href\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"href.touched && href.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ href.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('text')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"text\\\" autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"text.touched && text.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ text.errors?.['required'] && 'This is required' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" formControlName=\\\"openInNewTab\\\" />\\n          {{getLabel('openInNewTab')}}\\n        </label>\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\", styles: [\"\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i4.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i4.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { type: i4.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }], pipes: { \"sanitizeHtml\": SanitizeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: LinkComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-link', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"href\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"href.touched && href.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ href.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('text')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"text\\\" autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"text.touched && text.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ text.errors?.['required'] && 'This is required' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" formControlName=\\\"openInNewTab\\\" />\\n          {{getLabel('openInNewTab')}}\\n        </label>\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\", styles: [\"\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { valid: [{\n                type: HostBinding,\n                args: ['class.NgxEditor__MenuItem--Active']\n            }], disabled: [{\n                type: HostBinding,\n                args: ['class.NgxEditor--Disabled']\n            }], onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }] } });\n\nclass ImageComponent {\n    constructor(el, ngxeService, menuService) {\n        this.el = el;\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.showPopup = false;\n        this.isActive = false;\n        this.form = new FormGroup({\n            src: new FormControl('', [\n                Validators$1.required,\n                Validators$1.pattern('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/??([^#\\n\\r]*)?#?([^\\n\\r]*)'),\n            ]),\n            alt: new FormControl(''),\n            title: new FormControl(''),\n        });\n        this.update = (view) => {\n            const { state } = view;\n            this.isActive = Image.isActive(state);\n        };\n    }\n    get valid() {\n        return this.isActive || this.showPopup;\n    }\n    get icon() {\n        return Icon.get('image');\n    }\n    get src() {\n        return this.form.get('src');\n    }\n    onDocumentClick(e) {\n        if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n            this.hideForm();\n        }\n    }\n    getLabel(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    hideForm() {\n        this.showPopup = false;\n        this.form.reset({\n            src: '',\n            alt: '',\n            title: '',\n        });\n    }\n    onMouseDown(e) {\n        if (e.button !== 0) {\n            return;\n        }\n        this.showPopup = !this.showPopup;\n        if (this.showPopup) {\n            this.fillForm();\n        }\n    }\n    fillForm() {\n        const { state } = this.editorView;\n        const { selection } = state;\n        if (selection instanceof NodeSelection && this.isActive) {\n            const { src, alt = '', title = '' } = selection.node.attrs;\n            this.form.setValue({\n                src,\n                alt,\n                title,\n            });\n        }\n    }\n    insertLink(e) {\n        e.preventDefault();\n        const { src, alt, title } = this.form.getRawValue();\n        const { dispatch, state } = this.editorView;\n        const attrs = {\n            alt,\n            title,\n        };\n        Image.insert(src, attrs)(state, dispatch);\n        this.editorView.focus();\n        this.hideForm();\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nImageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ImageComponent, deps: [{ token: i0.ElementRef }, { token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component });\nImageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: ImageComponent, selector: \"ngx-image\", host: { listeners: { \"document:mousedown\": \"onDocumentClick($event)\" }, properties: { \"class.NgxEditor__MenuItem--Active\": \"this.valid\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"getLabel('insertImage')\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"src\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"src.touched && src.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ src.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('altText')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"alt\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('title')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"title\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid || !form.dirty\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\", styles: [\"\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i4.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i4.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }], pipes: { \"sanitizeHtml\": SanitizeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ImageComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-image', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"getLabel('insertImage')\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"src\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"src.touched && src.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ src.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('altText')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"alt\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('title')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"title\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid || !form.dirty\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\", styles: [\"\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { valid: [{\n                type: HostBinding,\n                args: ['class.NgxEditor__MenuItem--Active']\n            }], onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }] } });\n\nclass DropdownComponent {\n    constructor(ngxeService, menuService, el) {\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.el = el;\n        this.isDropdownOpen = false;\n        this.disabledItems = [];\n        this.update = (view) => {\n            const { state } = view;\n            this.disabledItems = [];\n            const activeItems = [];\n            this.items.forEach((item) => {\n                const command = ToggleCommands[item];\n                const isActive = command.isActive(state);\n                if (isActive) {\n                    activeItems.push(item);\n                }\n                if (!command.canExecute(state)) {\n                    this.disabledItems.push(item);\n                }\n            });\n            if (activeItems.length === 1) {\n                [this.activeItem] = activeItems;\n            }\n            else {\n                this.activeItem = null;\n            }\n        };\n    }\n    get isSelected() {\n        return Boolean(this.activeItem || this.isDropdownOpen);\n    }\n    get isDropdownDisabled() {\n        return this.disabledItems.length === this.items.length;\n    }\n    onDocumentClick(target) {\n        if (!this.el.nativeElement.contains(target) && this.isDropdownOpen) {\n            this.isDropdownOpen = false;\n        }\n    }\n    getName(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    toggleDropdown(e) {\n        e.preventDefault();\n        this.isDropdownOpen = !this.isDropdownOpen;\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    onClick(e, item) {\n        e.preventDefault();\n        // consider only left click\n        if (e.button !== 0) {\n            return;\n        }\n        const command = ToggleCommands[item];\n        const { state, dispatch } = this.editorView;\n        command.toggle()(state, dispatch);\n        this.isDropdownOpen = false;\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: DropdownComponent, deps: [{ token: NgxEditorService }, { token: MenuService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: DropdownComponent, selector: \"ngx-dropdown\", inputs: { group: \"group\", items: \"items\" }, host: { listeners: { \"document:mousedown\": \"onDocumentClick($event.target)\" }, properties: { \"class.NgxEditor__Dropdown--Selected\": \"this.isSelected\", \"class.NgxEditor--Disabled\": \"this.isDropdownDisabled\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__Dropdown--Text\\\" (mousedown)=\\\"toggleDropdown($event)\\\">\\n  {{getName(activeItem || group)}}\\n</div>\\n\\n<div class=\\\"NgxEditor__Dropdown--DropdownMenu\\\" *ngIf=\\\"isDropdownOpen\\\">\\n  <div class=\\\"NgxEditor__Dropdown--Item\\\" *ngFor=\\\"let item of items; trackBy: trackByIndex\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n    [ngClass]=\\\"{'NgxEditor__Dropdown--Active': item === activeItem, 'NgxEditor--Disabled':disabledItems.includes(item)}\\\">\\n    {{getName(item)}}\\n  </div>\\n</div>\\n\", styles: [\"\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: DropdownComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-dropdown', template: \"<div class=\\\"NgxEditor__Dropdown--Text\\\" (mousedown)=\\\"toggleDropdown($event)\\\">\\n  {{getName(activeItem || group)}}\\n</div>\\n\\n<div class=\\\"NgxEditor__Dropdown--DropdownMenu\\\" *ngIf=\\\"isDropdownOpen\\\">\\n  <div class=\\\"NgxEditor__Dropdown--Item\\\" *ngFor=\\\"let item of items; trackBy: trackByIndex\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n    [ngClass]=\\\"{'NgxEditor__Dropdown--Active': item === activeItem, 'NgxEditor--Disabled':disabledItems.includes(item)}\\\">\\n    {{getName(item)}}\\n  </div>\\n</div>\\n\", styles: [\"\"] }]\n        }], ctorParameters: function () { return [{ type: NgxEditorService }, { type: MenuService }, { type: i0.ElementRef }]; }, propDecorators: { group: [{\n                type: Input\n            }], items: [{\n                type: Input\n            }], isSelected: [{\n                type: HostBinding,\n                args: ['class.NgxEditor__Dropdown--Selected']\n            }], isDropdownDisabled: [{\n                type: HostBinding,\n                args: ['class.NgxEditor--Disabled']\n            }], onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event.target']]\n            }] } });\n\nclass ColorPickerComponent {\n    constructor(el, menuService, ngxeService) {\n        this.el = el;\n        this.menuService = menuService;\n        this.ngxeService = ngxeService;\n        this.showPopup = false;\n        this.isActive = false;\n        this.activeColors = [];\n        this.canExecute = true;\n        this.update = (view) => {\n            const { state } = view;\n            this.canExecute = this.command.canExecute(state);\n            this.isActive = this.command.isActive(state);\n            this.activeColors = [];\n            if (this.isActive) {\n                this.activeColors = this.command.getActiveColors(state);\n            }\n        };\n    }\n    get valid() {\n        return this.isActive || this.showPopup;\n    }\n    get disabled() {\n        return !this.canExecute;\n    }\n    get title() {\n        return this.getLabel(this.type === 'text_color' ? 'text_color' : 'background_color');\n    }\n    get icon() {\n        return Icon.get(this.type === 'text_color' ? 'text_color' : 'color_fill');\n    }\n    get command() {\n        return this.type === 'text_color' ? TextColor : TextBackgroundColor;\n    }\n    getContrastYIQ(hexcolor) {\n        const color = hexcolor.replace('#', '');\n        const r = parseInt(color.substring(0, 2), 16);\n        const g = parseInt(color.substring(2, 4), 16);\n        const b = parseInt(color.substring(4, 6), 16);\n        const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n        return yiq >= 128 ? 'black' : 'white';\n    }\n    onDocumentClick(e) {\n        if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n            this.hidePopup();\n        }\n    }\n    hidePopup() {\n        this.showPopup = false;\n    }\n    togglePopup(e) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        this.showPopup = !this.showPopup;\n    }\n    remove(e) {\n        e.preventDefault();\n        const { state, dispatch } = this.editorView;\n        this.command.remove()(state, dispatch);\n        this.hidePopup();\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    onColorSelect(e, color) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        if (this.type === 'text_color') {\n            const attrs = { color };\n            this.command.apply(attrs)(state, dispatch);\n        }\n        else {\n            const attrs = { backgroundColor: color };\n            this.command.apply(attrs)(state, dispatch);\n        }\n        if (!this.editorView.hasFocus()) {\n            this.editorView.focus();\n        }\n        this.hidePopup();\n    }\n    getLabel(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nColorPickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ColorPickerComponent, deps: [{ token: i0.ElementRef }, { token: MenuService }, { token: NgxEditorService }], target: i0.ɵɵFactoryTarget.Component });\nColorPickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: ColorPickerComponent, selector: \"ngx-color-picker\", inputs: { presets: \"presets\", type: \"type\" }, host: { listeners: { \"document:mousedown\": \"onDocumentClick($event)\" }, properties: { \"class.NgxEditor__MenuItem--Active\": \"this.valid\", \"class.NgxEditor--Disabled\": \"this.disabled\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"togglePopup($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <div *ngFor=\\\"let colorGroup of presets; trackBy: trackByIndex\\\" class=\\\"NgxEditor__ColorContainer\\\">\\n    <button class=\\\"NgxEditor__Color\\\" *ngFor=\\\"let color of colorGroup; trackBy: trackByIndex\\\"\\n      [ngStyle]=\\\"{backgroundColor: color, color:getContrastYIQ(color)}\\\" [title]=\\\"color\\\"\\n      (mousedown)=\\\"onColorSelect($event, color)\\\"\\n      [ngClass]=\\\"{'NgxEditor__Color--Active': activeColors.includes(color)}\\\"></button>\\n  </div>\\n\\n  <button class=\\\"NgxEditor__MenuItem--Button\\\" (mousedown)=\\\"remove($event)\\\" [disabled]=\\\"!isActive\\\">\\n    {{getLabel('remove')}}\\n  </button>\\n</div>\\n\", styles: [\"@charset \\\"UTF-8\\\";.NgxEditor__Popup{width:230px}.NgxEditor__ColorContainer{display:flex;justify-content:space-between}.NgxEditor__ColorContainer+.NgxEditor__ColorContainer{margin-top:5px}.NgxEditor__Color{border:none;outline:none;border-radius:6px;width:24px;height:24px;flex-shrink:0}.NgxEditor__Color--Active:after{content:\\\"\\\\2714\\\";font-size:90%}.NgxEditor__MenuItem--Button{margin-top:5px}\\n\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], pipes: { \"sanitizeHtml\": SanitizeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ColorPickerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-color-picker', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"togglePopup($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <div *ngFor=\\\"let colorGroup of presets; trackBy: trackByIndex\\\" class=\\\"NgxEditor__ColorContainer\\\">\\n    <button class=\\\"NgxEditor__Color\\\" *ngFor=\\\"let color of colorGroup; trackBy: trackByIndex\\\"\\n      [ngStyle]=\\\"{backgroundColor: color, color:getContrastYIQ(color)}\\\" [title]=\\\"color\\\"\\n      (mousedown)=\\\"onColorSelect($event, color)\\\"\\n      [ngClass]=\\\"{'NgxEditor__Color--Active': activeColors.includes(color)}\\\"></button>\\n  </div>\\n\\n  <button class=\\\"NgxEditor__MenuItem--Button\\\" (mousedown)=\\\"remove($event)\\\" [disabled]=\\\"!isActive\\\">\\n    {{getLabel('remove')}}\\n  </button>\\n</div>\\n\", styles: [\"@charset \\\"UTF-8\\\";.NgxEditor__Popup{width:230px}.NgxEditor__ColorContainer{display:flex;justify-content:space-between}.NgxEditor__ColorContainer+.NgxEditor__ColorContainer{margin-top:5px}.NgxEditor__Color{border:none;outline:none;border-radius:6px;width:24px;height:24px;flex-shrink:0}.NgxEditor__Color--Active:after{content:\\\"\\\\2714\\\";font-size:90%}.NgxEditor__MenuItem--Button{margin-top:5px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: MenuService }, { type: NgxEditorService }]; }, propDecorators: { presets: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], valid: [{\n                type: HostBinding,\n                args: ['class.NgxEditor__MenuItem--Active']\n            }], disabled: [{\n                type: HostBinding,\n                args: ['class.NgxEditor--Disabled']\n            }], onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }] } });\n\nconst DEFAULT_TOOLBAR = [\n    ['bold', 'italic'],\n    ['code', 'blockquote'],\n    ['underline', 'strike'],\n    ['ordered_list', 'bullet_list'],\n    [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }],\n    ['link', 'image'],\n    ['text_color', 'background_color'],\n    ['align_left', 'align_center', 'align_right', 'align_justify'],\n];\nconst TOOLBAR_MINIMAL = [\n    ['bold', 'italic'],\n    [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }],\n    ['link', 'image'],\n    ['text_color', 'background_color'],\n];\nconst TOOLBAR_FULL = [\n    ['bold', 'italic'],\n    ['code', 'blockquote'],\n    ['underline', 'strike'],\n    ['ordered_list', 'bullet_list'],\n    [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }],\n    ['link', 'image'],\n    ['text_color', 'background_color'],\n    ['align_left', 'align_center', 'align_right', 'align_justify'],\n    ['horizontal_rule'],\n];\nconst DEFAULT_COLOR_PRESETS = [\n    '#b60205',\n    '#d93f0b',\n    '#fbca04',\n    '#0e8a16',\n    '#006b75',\n    '#1d76db',\n    '#0052cc',\n    '#5319e7',\n    '#e99695',\n    '#f9d0c4',\n    '#fef2c0',\n    '#c2e0c6',\n    '#bfdadc',\n    '#c5def5',\n    '#bfd4f2',\n    '#d4c5f9',\n];\nclass MenuComponent {\n    constructor(menuService) {\n        this.menuService = menuService;\n        this.toolbar = TOOLBAR_MINIMAL;\n        this.colorPresets = DEFAULT_COLOR_PRESETS;\n        this.disabled = false;\n        this.customMenuRef = null;\n        this.dropdownPlacement = 'bottom';\n        this.toggleCommands = [\n            'bold',\n            'italic',\n            'underline',\n            'strike',\n            'code',\n            'blockquote',\n            'ordered_list',\n            'bullet_list',\n            'align_left',\n            'align_center',\n            'align_right',\n            'align_justify',\n        ];\n        this.insertCommands = [\n            'horizontal_rule',\n        ];\n        this.iconContainerClass = ['NgxEditor__MenuItem', 'NgxEditor__MenuItem--Icon'];\n        this.dropdownContainerClass = ['NgxEditor__Dropdown'];\n        this.seperatorClass = ['NgxEditor__Seperator'];\n    }\n    get presets() {\n        const col = 8;\n        const colors = [];\n        this.colorPresets.forEach((color, index) => {\n            const row = Math.floor(index / col);\n            if (!colors[row]) {\n                colors.push([]);\n            }\n            colors[row].push(color);\n        });\n        return colors;\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    isDropDown(item) {\n        if (item === null || item === void 0 ? void 0 : item.heading) {\n            return true;\n        }\n        return false;\n    }\n    getDropdownItems(item) {\n        return item;\n    }\n    ngOnInit() {\n        if (!this.editor) {\n            throw new Error('NgxEditor: Required editor instance');\n        }\n        this.menuService.editor = this.editor;\n    }\n}\nMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: MenuComponent, deps: [{ token: MenuService }], target: i0.ɵɵFactoryTarget.Component });\nMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: MenuComponent, selector: \"ngx-editor-menu\", inputs: { toolbar: \"toolbar\", colorPresets: \"colorPresets\", disabled: \"disabled\", editor: \"editor\", customMenuRef: \"customMenuRef\", dropdownPlacement: \"dropdownPlacement\" }, providers: [MenuService], ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuBar\\\"\\n  [ngClass]=\\\"{'NgxEditor--Disabled': disabled, 'NgxEditor__MenuBar--Reverse': dropdownPlacement === 'top'}\\\">\\n\\n  <ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n    <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n\\n      <!-- toggle icons -->\\n      <ngx-toggle-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"toggleCommands.includes(item)\\\">\\n      </ngx-toggle-command>\\n\\n      <ngx-insert-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"insertCommands.includes(item)\\\">\\n      </ngx-insert-command>\\n\\n      <!-- link -->\\n      <ngx-link [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'link'\\\"></ngx-link>\\n\\n      <!-- image -->\\n      <ngx-image [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'image'\\\">\\n      </ngx-image>\\n\\n      <!-- dropdown -->\\n      <ng-container *ngIf=\\\"isDropDown(item)\\\">\\n        <ngx-dropdown *ngFor=\\\"let dropdownItem of getDropdownItems(item) | keyvalue; trackBy: trackByIndex\\\"\\n          [class]=\\\"dropdownContainerClass\\\" [group]=\\\"dropdownItem.key\\\" [items]=\\\"dropdownItem.value\\\">\\n        </ngx-dropdown>\\n      </ng-container>\\n\\n      <!-- text color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'text_color'\\\" type=\\\"text_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n      <!-- background color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'background_color'\\\" type=\\\"background_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n\\n      <!-- seperator -->\\n      <div [class]=\\\"seperatorClass\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n    </ng-container>\\n  </ng-container>\\n\\n  <!-- custom menu -->\\n  <ng-container *ngIf=\\\"customMenuRef\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"customMenuRef\\\"></ng-container>\\n  </ng-container>\\n\\n</div>\\n\", styles: [\"\"], components: [{ type: ToggleCommandComponent, selector: \"ngx-toggle-command\", inputs: [\"toolbarItem\"] }, { type: InsertCommandComponent, selector: \"ngx-insert-command\", inputs: [\"toolbarItem\"] }, { type: LinkComponent, selector: \"ngx-link\" }, { type: ImageComponent, selector: \"ngx-image\" }, { type: DropdownComponent, selector: \"ngx-dropdown\", inputs: [\"group\", \"items\"] }, { type: ColorPickerComponent, selector: \"ngx-color-picker\", inputs: [\"presets\", \"type\"] }], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], pipes: { \"keyvalue\": i3.KeyValuePipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: MenuComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-editor-menu', providers: [MenuService], template: \"<div class=\\\"NgxEditor__MenuBar\\\"\\n  [ngClass]=\\\"{'NgxEditor--Disabled': disabled, 'NgxEditor__MenuBar--Reverse': dropdownPlacement === 'top'}\\\">\\n\\n  <ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n    <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n\\n      <!-- toggle icons -->\\n      <ngx-toggle-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"toggleCommands.includes(item)\\\">\\n      </ngx-toggle-command>\\n\\n      <ngx-insert-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"insertCommands.includes(item)\\\">\\n      </ngx-insert-command>\\n\\n      <!-- link -->\\n      <ngx-link [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'link'\\\"></ngx-link>\\n\\n      <!-- image -->\\n      <ngx-image [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'image'\\\">\\n      </ngx-image>\\n\\n      <!-- dropdown -->\\n      <ng-container *ngIf=\\\"isDropDown(item)\\\">\\n        <ngx-dropdown *ngFor=\\\"let dropdownItem of getDropdownItems(item) | keyvalue; trackBy: trackByIndex\\\"\\n          [class]=\\\"dropdownContainerClass\\\" [group]=\\\"dropdownItem.key\\\" [items]=\\\"dropdownItem.value\\\">\\n        </ngx-dropdown>\\n      </ng-container>\\n\\n      <!-- text color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'text_color'\\\" type=\\\"text_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n      <!-- background color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'background_color'\\\" type=\\\"background_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n\\n      <!-- seperator -->\\n      <div [class]=\\\"seperatorClass\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n    </ng-container>\\n  </ng-container>\\n\\n  <!-- custom menu -->\\n  <ng-container *ngIf=\\\"customMenuRef\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"customMenuRef\\\"></ng-container>\\n  </ng-container>\\n\\n</div>\\n\", styles: [\"\"] }]\n        }], ctorParameters: function () { return [{ type: MenuService }]; }, propDecorators: { toolbar: [{\n                type: Input\n            }], colorPresets: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], editor: [{\n                type: Input\n            }], customMenuRef: [{\n                type: Input\n            }], dropdownPlacement: [{\n                type: Input\n            }] } });\n\nclass BubbleComponent {\n    constructor(sanitizeHTML, ngxeService) {\n        this.sanitizeHTML = sanitizeHTML;\n        this.ngxeService = ngxeService;\n        this.execulableItems = [];\n        this.activeItems = [];\n        this.toolbar = [\n            ['bold', 'italic', 'underline', 'strike'],\n            ['ordered_list', 'bullet_list', 'blockquote', 'code'],\n            ['align_left', 'align_center', 'align_right', 'align_justify'],\n        ];\n        this.toggleCommands = [\n            'bold',\n            'italic',\n            'underline',\n            'strike',\n            'ordered_list',\n            'bullet_list',\n            'blockquote',\n            'code',\n            'align_left',\n            'align_center',\n            'align_right',\n            'align_justify',\n        ];\n    }\n    get view() {\n        return this.editor.view;\n    }\n    getIcon(name) {\n        const icon = Icon.get(name);\n        return this.sanitizeHTML.transform(icon);\n    }\n    getTitle(name) {\n        return this.ngxeService.locals.get(name);\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    onClick(e, commandName) {\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.view;\n        const command = ToggleCommands[commandName];\n        command.toggle()(state, dispatch);\n    }\n    update(view) {\n        this.activeItems = [];\n        this.execulableItems = [];\n        const { state } = view;\n        this.toggleCommands.forEach((toolbarItem) => {\n            const command = ToggleCommands[toolbarItem];\n            const isActive = command.isActive(state);\n            if (isActive) {\n                this.activeItems.push(toolbarItem);\n            }\n            const canExecute = command.canExecute(state);\n            if (canExecute) {\n                this.execulableItems.push(toolbarItem);\n            }\n        });\n    }\n    ngOnInit() {\n        this.updateSubscription = this.editor.update\n            .subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nBubbleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: BubbleComponent, deps: [{ token: SanitizeHtmlPipe }, { token: NgxEditorService }], target: i0.ɵɵFactoryTarget.Component });\nBubbleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: BubbleComponent, selector: \"ngx-bubble\", inputs: { editor: \"editor\" }, ngImport: i0, template: \"<ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n  <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n    <div class=\\\"NgxBubbleMenu__Icon\\\" [ngClass]=\\\"{'NgxBubbleMenu__Icon--Active': this.activeItems.includes(item),\\n  'NgxEditor--Disabled': !this.execulableItems.includes(item)}\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n      *ngIf=\\\"toggleCommands.includes(item)\\\" [title]=\\\"getTitle(item)\\\" [innerHTML]=\\\"getIcon(item)\\\">\\n    </div>\\n    <div class=\\\"NgxBubbleMenu__Seperator\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n  </ng-container>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{display:flex;flex-wrap:wrap;background-color:#000;color:#fff;padding:5px;border-radius:4px}.NgxBubbleMenu__Icon{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;display:flex;align-items:center;justify-content:center;color:#fff}.NgxBubbleMenu__Icon:hover{background-color:#636262}.NgxBubbleMenu__Icon+.NgxBubbleMenu__Icon{margin-left:5px}.NgxBubbleMenu__Icon.NgxBubbleMenu__Icon--Active{background-color:#fff;color:#000}.NgxBubbleMenu__Seperator{border-left:1px solid white;margin:0 5px}\\n\"], directives: [{ type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: BubbleComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-bubble', template: \"<ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n  <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n    <div class=\\\"NgxBubbleMenu__Icon\\\" [ngClass]=\\\"{'NgxBubbleMenu__Icon--Active': this.activeItems.includes(item),\\n  'NgxEditor--Disabled': !this.execulableItems.includes(item)}\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n      *ngIf=\\\"toggleCommands.includes(item)\\\" [title]=\\\"getTitle(item)\\\" [innerHTML]=\\\"getIcon(item)\\\">\\n    </div>\\n    <div class=\\\"NgxBubbleMenu__Seperator\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n  </ng-container>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{display:flex;flex-wrap:wrap;background-color:#000;color:#fff;padding:5px;border-radius:4px}.NgxBubbleMenu__Icon{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;display:flex;align-items:center;justify-content:center;color:#fff}.NgxBubbleMenu__Icon:hover{background-color:#636262}.NgxBubbleMenu__Icon+.NgxBubbleMenu__Icon{margin-left:5px}.NgxBubbleMenu__Icon.NgxBubbleMenu__Icon--Active{background-color:#fff;color:#000}.NgxBubbleMenu__Seperator{border-left:1px solid white;margin:0 5px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: SanitizeHtmlPipe }, { type: NgxEditorService }]; }, propDecorators: { editor: [{\n                type: Input\n            }] } });\n\nclass FloatingMenuComponent {\n    constructor(el, sanitizeHTML) {\n        this.el = el;\n        this.sanitizeHTML = sanitizeHTML;\n        this.autoPlace = false;\n        this.posLeft = 0;\n        this.posTop = 0;\n        this.showMenu = false;\n        this.dragging = false;\n    }\n    get display() {\n        return {\n            visibility: this.showMenu ? 'visible' : 'hidden',\n            opacity: this.showMenu ? '1' : '0',\n            top: `${this.posTop}px`,\n            left: `${this.posLeft}px`,\n        };\n    }\n    get view() {\n        return this.editor.view;\n    }\n    onMouseDown(e) {\n        const target = e.target;\n        if (this.el.nativeElement.contains(target) && target.nodeName !== 'INPUT') {\n            e.preventDefault();\n            return;\n        }\n        this.dragging = true;\n    }\n    onKeyDown(e) {\n        const target = e.target;\n        if (target.nodeName === 'INPUT') {\n            return;\n        }\n        this.dragging = true;\n        this.hide();\n    }\n    onMouseUp(e) {\n        const target = e.target;\n        if (this.el.nativeElement.contains(target) || target.nodeName === 'INPUT') {\n            e.preventDefault();\n            return;\n        }\n        this.dragging = false;\n        this.useUpdate();\n    }\n    onKeyUp(e) {\n        const target = e.target;\n        if (target.nodeName === 'INPUT') {\n            return;\n        }\n        this.dragging = false;\n        this.useUpdate();\n    }\n    useUpdate() {\n        if (!this.view) {\n            return;\n        }\n        this.update(this.view);\n    }\n    hide() {\n        this.showMenu = false;\n    }\n    show() {\n        this.showMenu = true;\n    }\n    calculateBubblePosition(view) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { state: { selection } } = view;\n            const { from, to } = selection;\n            const start = view.coordsAtPos(from);\n            const end = view.coordsAtPos(to);\n            const selectionElement = {\n                getBoundingClientRect() {\n                    if (selection instanceof NodeSelection) {\n                        const node = view.nodeDOM(from);\n                        return node.getBoundingClientRect();\n                    }\n                    const { top, left } = start;\n                    const { bottom, right } = end;\n                    return {\n                        x: left,\n                        y: top,\n                        top,\n                        bottom,\n                        left,\n                        right,\n                        width: right - left,\n                        height: bottom - top,\n                    };\n                },\n            };\n            // the floating bubble itself\n            const bubbleEl = this.el.nativeElement;\n            const { x: left, y: top } = yield computePosition(selectionElement, bubbleEl, {\n                placement: 'top',\n                middleware: [\n                    offset(5),\n                    this.autoPlace && autoPlacement({\n                        boundary: view.dom,\n                        padding: 5,\n                        allowedPlacements: ['top', 'bottom'],\n                    }),\n                    {\n                        // prevent overflow on right and left side\n                        // since only top and bottom placements are allowed\n                        // autoplacement can't handle overflows on the right and left\n                        name: 'overflowMiddleware',\n                        fn(middlewareArgs) {\n                            return __awaiter(this, void 0, void 0, function* () {\n                                const overflow = yield detectOverflow(middlewareArgs, {\n                                    boundary: view.dom,\n                                    padding: 5,\n                                });\n                                // overflows left\n                                if (overflow.left > 0) {\n                                    return {\n                                        x: middlewareArgs.x + overflow.left,\n                                    };\n                                }\n                                // overflows right\n                                if (overflow.right > 0) {\n                                    return {\n                                        x: middlewareArgs.x - overflow.right,\n                                    };\n                                }\n                                return {};\n                            });\n                        },\n                    },\n                ].filter(Boolean),\n            });\n            return {\n                left,\n                top,\n            };\n        });\n    }\n    canShowMenu(view) {\n        const { state } = view;\n        const { selection } = state;\n        const { empty } = selection;\n        if (selection instanceof NodeSelection) {\n            if (selection.node.type.name === 'image') {\n                return false;\n            }\n        }\n        const hasFocus = this.view.hasFocus();\n        if (!hasFocus || empty || this.dragging) {\n            this.hide();\n            return false;\n        }\n        return true;\n    }\n    update(view) {\n        const canShowMenu = this.canShowMenu(view);\n        if (!canShowMenu) {\n            this.hide();\n            return;\n        }\n        this.calculateBubblePosition(this.view).then(({ top, left }) => {\n            if (!this.canShowMenu) {\n                this.hide();\n                return;\n            }\n            this.posLeft = left;\n            this.posTop = top;\n            this.show();\n        });\n    }\n    ngOnInit() {\n        if (!this.editor) {\n            throw new Error('NgxEditor: Required editor instance');\n        }\n        this.updateSubscription = this.editor.update\n            .subscribe((view) => {\n            this.update(view);\n        });\n        this.resizeSubscription = fromEvent(window, 'resize').pipe(throttleTime(500, asyncScheduler, { leading: true, trailing: true })).subscribe(() => {\n            this.useUpdate();\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n        this.resizeSubscription.unsubscribe();\n    }\n}\nFloatingMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: FloatingMenuComponent, deps: [{ token: i0.ElementRef }, { token: SanitizeHtmlPipe }], target: i0.ɵɵFactoryTarget.Component });\nFloatingMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: FloatingMenuComponent, selector: \"ngx-editor-floating-menu\", inputs: { editor: \"editor\", autoPlace: \"autoPlace\" }, host: { listeners: { \"document:mousedown\": \"onMouseDown($event)\", \"document:keydown\": \"onKeyDown($event)\", \"document:mouseup\": \"onMouseUp($event)\", \"document:keyup\": \"onKeyUp($event)\" }, properties: { \"style\": \"this.display\" } }, ngImport: i0, template: \"<div #ref>\\n  <ng-content></ng-content>\\n</div>\\n<ng-container *ngIf=\\\"ref.children.length === 0\\\">\\n  <ngx-bubble [editor]=\\\"editor\\\"></ngx-bubble>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{position:absolute;z-index:20;margin-bottom:5px;visibility:hidden;opacity:0}\\n\"], components: [{ type: BubbleComponent, selector: \"ngx-bubble\", inputs: [\"editor\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: FloatingMenuComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-editor-floating-menu', template: \"<div #ref>\\n  <ng-content></ng-content>\\n</div>\\n<ng-container *ngIf=\\\"ref.children.length === 0\\\">\\n  <ngx-bubble [editor]=\\\"editor\\\"></ngx-bubble>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{position:absolute;z-index:20;margin-bottom:5px;visibility:hidden;opacity:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: SanitizeHtmlPipe }]; }, propDecorators: { display: [{\n                type: HostBinding,\n                args: ['style']\n            }], editor: [{\n                type: Input\n            }], autoPlace: [{\n                type: Input\n            }], onMouseDown: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['document:keydown', ['$event']]\n            }], onMouseUp: [{\n                type: HostListener,\n                args: ['document:mouseup', ['$event']]\n            }], onKeyUp: [{\n                type: HostListener,\n                args: ['document:keyup', ['$event']]\n            }] } });\n\nclass MenuModule {\n}\nMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: MenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: MenuModule, declarations: [\n        // pipes\n        SanitizeHtmlPipe,\n        // components\n        MenuComponent,\n        ToggleCommandComponent,\n        InsertCommandComponent,\n        LinkComponent,\n        DropdownComponent,\n        ImageComponent,\n        ColorPickerComponent,\n        FloatingMenuComponent,\n        BubbleComponent\n    ], imports: [CommonModule,\n        ReactiveFormsModule], exports: [MenuComponent,\n        FloatingMenuComponent] });\nMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: MenuModule, providers: [\n        SanitizeHtmlPipe,\n    ], imports: [[\n            CommonModule,\n            ReactiveFormsModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: MenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        ReactiveFormsModule,\n                    ],\n                    declarations: [\n                        // pipes\n                        SanitizeHtmlPipe,\n                        // components\n                        MenuComponent,\n                        ToggleCommandComponent,\n                        InsertCommandComponent,\n                        LinkComponent,\n                        DropdownComponent,\n                        ImageComponent,\n                        ColorPickerComponent,\n                        FloatingMenuComponent,\n                        BubbleComponent,\n                    ],\n                    providers: [\n                        SanitizeHtmlPipe,\n                    ],\n                    exports: [\n                        MenuComponent,\n                        FloatingMenuComponent,\n                    ],\n                }]\n        }] });\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');\nclass NgxEditorModule {\n    static forRoot(config) {\n        return {\n            ngModule: NgxEditorModule,\n            providers: [\n                {\n                    provide: NGX_EDITOR_CONFIG_TOKEN,\n                    useValue: config,\n                },\n                {\n                    provide: NgxEditorServiceConfig,\n                    useFactory: provideMyServiceOptions,\n                    deps: [NGX_EDITOR_CONFIG_TOKEN],\n                },\n            ],\n        };\n    }\n    static forChild(config) {\n        return {\n            ngModule: NgxEditorModule,\n            providers: [\n                {\n                    provide: NGX_EDITOR_CONFIG_TOKEN,\n                    useValue: config,\n                },\n                {\n                    provide: NgxEditorServiceConfig,\n                    useFactory: provideMyServiceOptions,\n                    deps: [NGX_EDITOR_CONFIG_TOKEN],\n                },\n                NgxEditorService,\n            ],\n        };\n    }\n}\nNgxEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: NgxEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: NgxEditorModule, declarations: [NgxEditorComponent,\n        ImageViewComponent], imports: [CommonModule,\n        MenuModule], exports: [NgxEditorComponent,\n        MenuComponent,\n        FloatingMenuComponent] });\nNgxEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: NgxEditorModule, providers: [], imports: [[\n            CommonModule,\n            MenuModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: NgxEditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MenuModule,\n                    ],\n                    providers: [],\n                    declarations: [\n                        NgxEditorComponent,\n                        ImageViewComponent,\n                    ],\n                    exports: [\n                        NgxEditorComponent,\n                        MenuComponent,\n                        FloatingMenuComponent,\n                    ],\n                }]\n        }] });\n\nconst isEmptyInputValue = (value) => {\n    // we don't check for string here so it also works with arrays\n    return value === null || value.length === 0;\n};\nconst hasValidLength = (value) => {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    return value !== null && typeof value.length === 'number';\n};\nconst isDocEmpty = (doc) => {\n    if (!doc) {\n        return true;\n    }\n    const { childCount, firstChild } = doc;\n    return Boolean(childCount === 1 && (firstChild === null || firstChild === void 0 ? void 0 : firstChild.isTextblock) && firstChild.content.size === 0);\n};\n// @dynamic\nclass Validators {\n    static required(userSchema) {\n        return (control) => {\n            const schema$1 = userSchema || schema;\n            const doc = parseContent(control.value, schema$1);\n            const isEmpty = isDocEmpty(doc);\n            if (!isEmpty) {\n                return null;\n            }\n            return {\n                required: true,\n            };\n        };\n    }\n    static maxLength(maxLength, userSchema) {\n        return (control) => {\n            const schema$1 = userSchema || schema;\n            const doc = parseContent(control.value, schema$1);\n            const value = doc.textContent;\n            if (hasValidLength(value) && value.length > maxLength) {\n                return {\n                    maxlength: {\n                        requiredLength: maxLength,\n                        actualLength: value.length,\n                    },\n                };\n            }\n            return null;\n        };\n    }\n    static minLength(minLength, userSchema) {\n        return (control) => {\n            const schema$1 = userSchema || schema;\n            const doc = parseContent(control.value, schema$1);\n            const value = doc.textContent;\n            if (isEmptyInputValue(value) || !hasValidLength(value)) {\n                // don't validate empty values to allow optional controls\n                // don't validate values without `length` property\n                return null;\n            }\n            if (value.length < minLength) {\n                return {\n                    minlength: {\n                        requiredLength: minLength, actualLength: value.length,\n                    },\n                };\n            }\n            return null;\n        };\n    }\n}\n\nconst execMark = (name, toggle = false) => {\n    return (state, dispatch) => {\n        const command = new Mark(name);\n        if (!toggle) {\n            return command.apply()(state, dispatch);\n        }\n        return command.toggle()(state, dispatch);\n    };\n};\nclass EditorCommands {\n    constructor(view) {\n        this.applyTrx = (tr) => {\n            this.state = this.state.apply(tr !== null && tr !== void 0 ? tr : this.tr);\n            this.tr = this.state.tr;\n            this.tr.setMeta('APPLIED_TRX', true);\n        };\n        this.dispatch = (tr) => {\n            this.applyTrx(tr);\n        };\n        if (!view) {\n            throw Error('NgxEditor: Required view to initialize commands.');\n        }\n        this.view = view;\n        this.state = view.state;\n        this.tr = this.view.state.tr;\n    }\n    exec() {\n        // No changes applied\n        if (!this.tr.getMeta('APPLIED_TRX')) {\n            return false;\n        }\n        const forceEmit = !this.view.state.doc.eq(this.state.doc);\n        this.view.updateState(this.state);\n        const tr = this.tr\n            .setMeta('FORCE_EMIT', forceEmit);\n        this.view.dispatch(tr);\n        return true;\n    }\n    focus() {\n        this.view.focus();\n        return this;\n    }\n    scrollIntoView() {\n        this.tr.scrollIntoView();\n        this.applyTrx();\n        return this;\n    }\n    insertText(text) {\n        this.tr.insertText(text);\n        this.applyTrx();\n        return this;\n    }\n    insertNewLine() {\n        const newLineCommands = [newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock];\n        chainCommands(...newLineCommands)(this.state, this.dispatch);\n        return this;\n    }\n    applyMark(name) {\n        execMark(name, false)(this.state, this.dispatch);\n        return this;\n    }\n    toggleMark(name) {\n        execMark(name, true)(this.state, this.dispatch);\n        return this;\n    }\n    bold() {\n        execMark('strong')(this.state, this.dispatch);\n        return this;\n    }\n    toggleBold() {\n        execMark('strong', true)(this.state, this.dispatch);\n        return this;\n    }\n    italics() {\n        execMark('em')(this.state, this.dispatch);\n        return this;\n    }\n    toggleItalics() {\n        execMark('em', true)(this.state, this.dispatch);\n        return this;\n    }\n    underline() {\n        execMark('u')(this.state, this.dispatch);\n        return this;\n    }\n    toggleUnderline() {\n        execMark('u', true)(this.state, this.dispatch);\n        return this;\n    }\n    strike() {\n        execMark('s')(this.state, this.dispatch);\n        return this;\n    }\n    toggleStrike() {\n        execMark('s', true)(this.state, this.dispatch);\n        return this;\n    }\n    code() {\n        execMark('code')(this.state, this.dispatch);\n        return this;\n    }\n    toggleCode() {\n        execMark('code', true)(this.state, this.dispatch);\n        return this;\n    }\n    toggleOrderedList() {\n        const command = new ListItem(false);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    toggleBulletList() {\n        const command = new ListItem(true);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    toggleHeading(level) {\n        const command = new Heading(level);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    insertLink(text, attrs) {\n        const command = new Link$1();\n        command.insert(text, attrs)(this.state, this.dispatch);\n        return this;\n    }\n    updateLink(attrs) {\n        const command = new Link$1();\n        command.update(attrs)(this.state, this.dispatch);\n        return this;\n    }\n    insertImage(src, attrs = {}) {\n        const command = new Image$1();\n        command.insert(src, attrs)(this.state, this.dispatch);\n        return this;\n    }\n    textColor(color) {\n        const command = new TextColor$1('text_color');\n        command.apply({ color })(this.state, this.dispatch);\n        return this;\n    }\n    backgroundColor(color) {\n        const command = new TextColor$1('text_background_color');\n        command.apply({ backgroundColor: color })(this.state, this.dispatch);\n        return this;\n    }\n    removeTextColor() {\n        const command = new TextColor$1('text_color');\n        command.remove()(this.state, this.dispatch);\n        return this;\n    }\n    removeBackgroundColor() {\n        const command = new TextColor$1('text_background_color');\n        command.remove()(this.state, this.dispatch);\n        return this;\n    }\n    align(p) {\n        const command = new TextAlign(p);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    insertHTML(html) {\n        const { selection, schema, tr } = this.state;\n        const { from, to } = selection;\n        const element = document.createElement('div');\n        element.innerHTML = html.trim();\n        const slice = DOMParser.fromSchema(schema).parseSlice(element);\n        const transaction = tr.replaceRange(from, to, slice);\n        this.applyTrx(transaction);\n        return this;\n    }\n}\n\nconst isMacOs = typeof navigator !== 'undefined'\n    ? (/Mac/).test(navigator.platform)\n    : false;\n// Input rules ref: https://github.com/ProseMirror/prosemirror-example-setup/\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\nconst blockQuoteRule = (nodeType) => {\n    return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n};\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\nconst orderedListRule = (nodeType) => {\n    return wrappingInputRule(/^(?:\\d+)\\.\\s$/, nodeType, (match) => ({ order: Number(match[1]) }), (match, node) => node.childCount + node.attrs['order'] === Number(match[1]));\n};\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\nconst bulletListRule = (nodeType) => {\n    return wrappingInputRule(/^\\s*(?:[-+*])\\s$/, nodeType);\n};\n// : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\nconst codeBlockRule = (nodeType) => {\n    return textblockTypeInputRule(/^```$/, nodeType);\n};\n// : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\nconst headingRule = (nodeType, maxLevel) => {\n    return textblockTypeInputRule(new RegExp(`^(#{1,${maxLevel}})\\\\s$`), nodeType, (match) => ({ level: match[1].length }));\n};\n// : (MarkType) → InputRule\n// Wraps matching text with bold mark\nconst boldRule = (markType) => {\n    return markInputRule(/(?:^|\\s)(?:(?:\\*\\*|__)(?:(?:[^*_]+))(?:\\*\\*|__))$/, markType);\n};\n// : (MarkType) → InputRule\n// Wraps matching text with em mark\nconst emRule = (markType) => {\n    return markInputRule(/(?:^|\\s)(?:(?:\\*|_)(?:(?:[^*_]+))(?:\\*|_))$/, markType);\n};\n// : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\nconst buildInputRules = (schema) => {\n    const rules = smartQuotes.concat(ellipsis, emDash);\n    rules.push(boldRule(schema.marks['strong']));\n    rules.push(emRule(schema.marks['em']));\n    rules.push(blockQuoteRule(schema.nodes['blockquote']));\n    rules.push(orderedListRule(schema.nodes['ordered_list']));\n    rules.push(bulletListRule(schema.nodes['bullet_list']));\n    rules.push(codeBlockRule(schema.nodes['code_block']));\n    rules.push(headingRule(schema.nodes['heading'], 6));\n    return inputRules({ rules });\n};\nconst getKeyboardShortcuts = (schema, options) => {\n    const historyKeyMap = {};\n    historyKeyMap['Mod-z'] = undo;\n    if (isMacOs) {\n        historyKeyMap['Shift-Mod-z'] = redo;\n    }\n    else {\n        historyKeyMap['Mod-y'] = redo;\n    }\n    const plugins = [\n        keymap({\n            'Mod-b': toggleMark(schema.marks['strong']),\n            'Mod-i': toggleMark(schema.marks['em']),\n            'Mod-u': toggleMark(schema.marks['u']),\n            'Mod-`': toggleMark(schema.marks['code']),\n        }),\n        keymap({\n            'Enter': splitListItem(schema.nodes['list_item']),\n            'Shift-Enter': chainCommands(exitCode, (state, dispatch) => {\n                const { tr } = state;\n                const br = schema.nodes['hard_break'];\n                dispatch(tr.replaceSelectionWith(br.create()).scrollIntoView());\n                return true;\n            }),\n            'Mod-[': liftListItem(schema.nodes['list_item']),\n            'Mod-]': sinkListItem(schema.nodes['list_item']),\n            'Tab': sinkListItem(schema.nodes['list_item']),\n        }),\n        keymap(baseKeymap),\n    ];\n    if (options.history) {\n        plugins.push(keymap(historyKeyMap));\n    }\n    return plugins;\n};\nconst getDefaultPlugins = (schema, options) => {\n    const plugins = [];\n    if (options.keyboardShortcuts) {\n        plugins.push(...getKeyboardShortcuts(schema, { history: options.history }));\n    }\n    if (options.history) {\n        plugins.push(history());\n    }\n    if (options.inputRules) {\n        plugins.push(buildInputRules(schema));\n    }\n    return plugins;\n};\n\nconst defaultFeatures = {\n    linkOnPaste: true,\n    resizeImage: true,\n};\nconst DEFAULT_OPTIONS = {\n    content: null,\n    history: true,\n    keyboardShortcuts: true,\n    inputRules: true,\n    schema: schema,\n    plugins: [],\n    nodeViews: {},\n    attributes: {},\n    features: defaultFeatures,\n};\nclass Editor {\n    constructor(options = DEFAULT_OPTIONS) {\n        this.valueChangesSubject = new Subject();\n        this.updateSubject = new Subject();\n        this.options = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.createEditor();\n    }\n    get valueChanges() {\n        return this.valueChangesSubject.asObservable();\n    }\n    get update() {\n        return this.updateSubject.asObservable();\n    }\n    get schema() {\n        return this.options.schema || schema;\n    }\n    get commands() {\n        return new EditorCommands(this.view);\n    }\n    get features() {\n        return Object.assign(Object.assign({}, defaultFeatures), this.options.features);\n    }\n    handleTransactions(tr) {\n        const state = this.view.state.apply(tr);\n        this.view.updateState(state);\n        this.updateSubject.next(this.view);\n        if (!tr.docChanged && !tr.getMeta('FORCE_EMIT')) {\n            return;\n        }\n        const json = state.doc.toJSON();\n        this.valueChangesSubject.next(json);\n    }\n    createEditor() {\n        var _a, _b;\n        const { options, schema } = this;\n        const { content = null, nodeViews } = options;\n        const { history = true, keyboardShortcuts = true, inputRules = true } = options;\n        const doc = parseContent(content, schema);\n        const plugins = (_a = options.plugins) !== null && _a !== void 0 ? _a : [];\n        const attributes = (_b = options.attributes) !== null && _b !== void 0 ? _b : {};\n        const defaultPlugins = getDefaultPlugins(schema, {\n            history,\n            keyboardShortcuts,\n            inputRules,\n        });\n        this.view = new EditorView(null, {\n            state: EditorState.create({\n                doc,\n                schema,\n                plugins: [...defaultPlugins, ...plugins],\n            }),\n            nodeViews,\n            dispatchTransaction: this.handleTransactions.bind(this),\n            attributes,\n        });\n    }\n    setContent(content) {\n        if (isNil(content)) {\n            return;\n        }\n        const { state } = this.view;\n        const { tr, doc } = state;\n        const newDoc = parseContent(content, this.schema);\n        tr.replaceWith(0, state.doc.content.size, newDoc);\n        // don't emit if both content is same\n        if (doc.eq(tr.doc)) {\n            return;\n        }\n        if (!tr.docChanged) {\n            return;\n        }\n        this.view.dispatch(tr);\n    }\n    registerPlugin(plugin) {\n        const { state } = this.view;\n        const plugins = [...state.plugins, plugin];\n        const newState = state.reconfigure({ plugins });\n        this.view.updateState(newState);\n    }\n    destroy() {\n        this.view.destroy();\n    }\n}\n\n/*\n * Public API Surface of ngx-editor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_TOOLBAR, Editor, FloatingMenuComponent, MenuComponent, NgxEditorComponent, NgxEditorModule, TOOLBAR_FULL, TOOLBAR_MINIMAL, Validators, emptyDoc, getKeyboardShortcuts, parseContent, toDoc, toHTML };\n"]},"metadata":{},"sourceType":"module"}