{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { OnSearch } from '../../Events/OnSearchEvent';\nimport * as i0 from \"@angular/core\";\nexport let SearchComponent = /*#__PURE__*/(() => {\n  class SearchComponent {\n    constructor() {\n      this.onSearch = new EventEmitter();\n      this.searchText = \"\";\n    }\n\n    ngOnInit() {}\n\n    onKeyUp(keyboardEvent) {\n      const event = new OnSearch(this.searchText);\n      this.onSearch.emit(event);\n    }\n\n  }\n\n  SearchComponent.ɵfac = function SearchComponent_Factory(t) {\n    return new (t || SearchComponent)();\n  };\n\n  SearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchComponent,\n    selectors: [[\"app-search\"]],\n    outputs: {\n      onSearch: \"onSearch\"\n    },\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"search-container\"], [1, \"search-elements\"], [\"type\", \"text\", 3, \"value\", \"keyup\"]],\n    template: function SearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\");\n        i0.ɵɵtext(3, \"Search:\\u00A0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 2);\n        i0.ɵɵlistener(\"keyup\", function SearchComponent_Template_input_keyup_4_listener($event) {\n          return ctx.onKeyUp($event);\n        });\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", ctx.searchText);\n      }\n    },\n    styles: [\".search-container[_ngcontent-%COMP%]{top:5em;position:sticky;width:100%}.search-elements[_ngcontent-%COMP%]{text-align:right}\"]\n  });\n  return SearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}